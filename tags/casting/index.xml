<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>casting on My Hugo</title>
    <link>/tags/casting/</link>
    <description>Recent content in casting on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/casting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>casting</title>
      <link>/core/c&#43;&#43;/casting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/casting/</guid>
      <description>solaris issue app.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include &amp;lt;iostream&amp;gt; using namespace std; template &amp;lt;class T&amp;gt; void foo(const T&amp;amp; v1, const T&amp;amp; v2, const char* msg) { cout &amp;lt;&amp;lt; &amp;#34;v1=&amp;#34; &amp;lt;&amp;lt; v1 &amp;lt;&amp;lt; &amp;#34;, v2=&amp;#34; &amp;lt;&amp;lt; v2 &amp;lt;&amp;lt; &amp;#34;, msg=&amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; endl; } template &amp;lt;class T&amp;gt; void bar(T v1, T v2, const char* msg) { cout &amp;lt;&amp;lt; &amp;#34;v1=&amp;#34; &amp;lt;&amp;lt; v1 &amp;lt;&amp;lt; &amp;#34;, v2=&amp;#34; &amp;lt;&amp;lt; v2 &amp;lt;&amp;lt; &amp;#34;, msg=&amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; endl; } template &amp;lt;class T&amp;gt; void ptr(T* v1, T* v2, const char* msg) { cout &amp;lt;&amp;lt; &amp;#34;v1=&amp;#34; &amp;lt;&amp;lt; *v1 &amp;lt;&amp;lt; &amp;#34;, v2=&amp;#34; &amp;lt;&amp;lt; *v2 &amp;lt;&amp;lt; &amp;#34;, msg=&amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; endl; } int main() { cout &amp;lt;&amp;lt; &amp;#34;start&amp;#34; &amp;lt;&amp;lt; endl; unsigned fail = 0; cout &amp;lt;&amp;lt; &amp;#34;&amp;amp;fail=&amp;#34; &amp;lt;&amp;lt; &amp;amp;fail &amp;lt;&amp;lt; endl; foo(static_cast&amp;lt;unsigned&amp;gt;(1), fail, &amp;#34;this is a test ref&amp;#34;); bar(static_cast&amp;lt;unsigned&amp;gt;(1), fail, &amp;#34;this is a test val&amp;#34;); ptr(&amp;amp;fail, &amp;amp;fail, &amp;#34;this is a test ptr&amp;#34;); cout &amp;lt;&amp;lt; &amp;#34;end&amp;#34; &amp;lt;&amp;lt; endl; return 0; } with gcc 4.</description>
    </item>
  </channel>
</rss>
