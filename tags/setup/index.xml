<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>setup on My Hugo</title>
    <link>/tags/setup/</link>
    <description>Recent content in setup on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Nov 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/setup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minimal Setup A Vue App Project</title>
      <link>/web/vue/vue-app-min/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-app-min/</guid>
      <description>Pre-request Have vue-cli installed
npm install @vue/cli -g Create Project vue create prj-name The default preset (babel, eslint) installes 178MB. with route/vuex 183MB
Start run/development
npm run serve common modules vue add router vue add vuex Configure You don&amp;rsquo;t need to config and the boilplate just works. However if you do need extra configuration, create vue.config.js at project root folder.
module.exports = { // configures go here devServer: { proxy: &amp;#39;http://localhost:8088&amp;#39;, // alternatively, if you have multiple APIs // or fine-tune url pattern // proxy: { // &amp;#39;api-url&amp;#39;: { // target: &amp;#39;http://localhost:8088&amp;#39;, // ws: true, // also websockets // changeOrigin: true, // }, // &amp;#39;other-api-url: {.</description>
    </item>
    <item>
      <title>My docker that runs hugo</title>
      <link>/web/hugo/my-hugo-docker/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/web/hugo/my-hugo-docker/</guid>
      <description>Setup Run By default the script runhugo
accept a list of folder as toplevel content section clean target folder generate the site and watch the input folder to updte Example
$ hugo.sh -h hugo.sh [options] [project1 [project2 ...]] launch hugo in a container, should run from WSL/Linux -h help -y dry run -i interactive shell -w path work folder (/home/jasonz/myhub) -c file configuration yaml file -v map-list path mapping (e.g. lpath:dpath [-v lp2:dp2]) -t path publish target folder (/mnt/c/myhub/site) -b path base url -g publish for github.</description>
    </item>
  </channel>
</rss>
