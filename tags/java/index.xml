<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on My Hugo</title>
    <link>/tags/java/</link>
    <description>Recent content in java on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jun 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java - Load A Class and/or Overload A Class On the Fly</title>
      <link>/core/java/load-overload/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/core/java/load-overload/</guid>
      <description>Loading a class on-the-fly (or at runtime) is required in the following scenarios:
plug-in architecture - the function is offered by external modules. supplement or replace existing functions In this example, an application has several classes, an alternative module contains more classes that will replace or extend the application existing classes, depends on the order of searching path.
File Structure expkg/ # root of the project src/ # source of the app ex/overload/ # the package Factory.</description>
    </item>
    <item>
      <title>Build A Java App</title>
      <link>/core/java/build/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/java/build/</guid>
      <description>Build Java App The Simplest Case # package path.to # class MyClass # build output path/to/MyClass.class javac path/to/MyClass.java # run java path.to.MyClass </description>
    </item>
  </channel>
</rss>
