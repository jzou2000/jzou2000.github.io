<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cheatsheet on My Hugo</title>
    <link>/tags/cheatsheet/</link>
    <description>Recent content in cheatsheet on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/cheatsheet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Cheatsheet - Basic</title>
      <link>/core/docker/cheatsheet-basic/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/cheatsheet-basic/</guid>
      <description>Get Information docker --version docker info docker images ls docker container ls -all Container docker run [OPTIONS] IMAGE [COMMAND] [ARGS...] -d --detach Most common options
option default description -d, &amp;ndash;detach run in background -e, &amp;ndash;env set environment varialbes, e.g. -e MYVAR=foo -e VAR1 &amp;ndash;env-file read env vars from a file &amp;ndash;expose expose a port or a range of ports -h,&amp;ndash;hostname container host name -i,&amp;ndash;interactive keep stdin open even if not attached -l,&amp;ndash;label set meta data on a container &amp;ndash;name assign a name to the container -p,&amp;ndash;pulish publish a container&amp;rsquo;s port(s) to the host, e.</description>
    </item>
    <item>
      <title>Make Toolchains with Docker</title>
      <link>/core/docker/mk-tool-chain/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/mk-tool-chain/</guid>
      <description>Task Requirement We need a centos5 container with following packages:
gcc44 and g++44 that can build both 64 and 32 bit app python2.7 with PyYAML module perl 5.8+ Tips The latest open-ssl (e.g. v1.1.1 at write time) is not supported by old distro (e.g. centos5), so it is wise to download (src) modules into the working folder before running docker build instead of doing so in Dockerfile if openssl is used (e.</description>
    </item>
    <item>
      <title>MongoDB Cheatsheet</title>
      <link>/core/db/nosql/mongo/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/nosql/mongo/</guid>
      <description>Mongodb Launch server mongod --dbpath /path/to/data/folder --bind_ip_all client mongo [host[:port]/]dbname </description>
    </item>
    <item>
      <title>ODBC API Cheatsheet</title>
      <link>/core/db/odbc/odbc-api/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-api/</guid>
      <description>ODBC API Unicode Version Description SQLAllocConnect 1.0 deprecated by SQLAllocHandle SQLAllocEnv 1.0 deprecated by SQLAllocHandle SQLAllocHandle 3.0 allocates an environment, connection, statement, or descriptor handle. SQLAllocStmt 1.0 deprecated by SQLAllocHandle SQLBindCol 1.0 binds application data buffers to columns in the result set. SQLBindParameter 2.0 binds a buffer to a parameter marker in an SQL statement SQLBrowseConnect * 1.0 supports an iterative method of discovering and enumerating the attributes and attribute values required to connect to a data source SQLBulkOperations 3.</description>
    </item>
  </channel>
</rss>
