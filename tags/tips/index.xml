<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tips on My Hugo</title>
    <link>/tags/tips/</link>
    <description>Recent content in tips on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Nov 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My docker that runs hugo</title>
      <link>/web/hugo/my-hugo-docker/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/web/hugo/my-hugo-docker/</guid>
      <description>Setup Run By default the script runhugo
accept a list of folder as toplevel content section clean target folder generate the site and watch the input folder to updte Example
$ hugo.sh -h hugo.sh [options] [project1 [project2 ...]] launch hugo in a container, should run from WSL/Linux -h help -y dry run -i interactive shell -w path work folder (/home/jasonz/myhub) -c file configuration yaml file -v map-list path mapping (e.g. lpath:dpath [-v lp2:dp2]) -t path publish target folder (/mnt/c/myhub/site) -b path base url -g publish for github.</description>
    </item>
    <item>
      <title>Link Failure on AIX</title>
      <link>/core/c&#43;&#43;/make/aix-static-lib/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/aix-static-lib/</guid>
      <description>AIX linker calls all static constructors in archieves ignoring whether that module is imported or not, which leads to unused modules are forced to be pulled into the target application. This is a different behavior from other compilers.</description>
    </item>
    <item>
      <title>VIm Tips</title>
      <link>/core/misc/vim-tips/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/core/misc/vim-tips/</guid>
      <description>Convert format between recipe action description dos &amp;lt;&amp;ndash;&amp;gt; unix set ff=unix set file-format (unix/dos) and save convert tab/space set et (no)et: expand tabs then run retab to apply convertion System clipboard The system clipboard is named + in vim.
action commandline-mode edit-mode key sequence yank 3 lines from cursor into clipboard 3ya+ &amp;ldquo;+3yy paste after cursor from clipboard &amp;ldquo;+p </description>
    </item>
    <item>
      <title>Some Tips of Express.js</title>
      <link>/web/js/node/express-tips/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/node/express-tips/</guid>
      <description>Parsing POST data Start from Express 4.16 app.use(express.json()) app.use(express.urlencode({extended: true})) // app.use(express.multipart()) // security concerns? // URL encoding // POST: name=foo&amp;amp;color=red // or JSON encoding // POST: {&amp;#34;name&amp;#34;: &amp;#34;foo&amp;#34;, &amp;#34;color&amp;#34;: &amp;#34;red&amp;#34;} app.post(&amp;#39;/url&amp;#39;, (req, res) =&amp;gt; { // your POST data is req.body var name = req.body.name })
Express 4.0 to 4.15 npm install --save body-parser and var body_parser = require(&amp;#39;body-parser&amp;#39;) app.use(body_parser.json()) app.use(body_parser.urlencode({extended: true}))</description>
    </item>
  </channel>
</rss>
