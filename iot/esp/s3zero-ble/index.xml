<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Full Development Cycle - Build A BLE Server/Client App on My Hugo</title>
    <link>/iot/esp/s3zero-ble/</link>
    <description>Recent content in Full Development Cycle - Build A BLE Server/Client App on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/iot/esp/s3zero-ble/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BLE Server v1.0</title>
      <link>/iot/esp/s3zero-ble/server-v1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/server-v1/</guid>
      <description>my request Create app for waveshare s3 mini chip as below
It has a BLE server:
name: jjS3mini repor chip temperature in celsius, in name &amp;ldquo;temperature&amp;rdquo; report/change on-chip led status: three component R/G/B on/off separately, in names R, G, B respectively blinking behavior: cycle in seconds, 0 - 5, step 1, 0 means off completely duty percent: 0-100%, 0 means off, 100% means always on, 30% means 30% on The on-chip led is WS2812 RGB on GP21 according to its spec,</description>
    </item>
    <item>
      <title>BLE Server v2.0</title>
      <link>/iot/esp/s3zero-ble/server-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/server-v2/</guid>
      <description>request to add debug please add debug output when BLE is connected, query and set
grok I&amp;rsquo;ll update the previous Arduino sketch to add debug output for BLE connection events, characteristic queries (reads), and characteristic sets (writes). The debug output will be sent to the Serial monitor at 115200 baud. The changes include:
Initializing Serial in setup() Adding a server callback class to handle connect/disconnect events Modifying the characteristic callback to log read and write operations Keeping the same artifact_id since this is an update to the previous artifact #include &amp;lt;BLEDevice.</description>
    </item>
    <item>
      <title>Build BLE Server</title>
      <link>/iot/esp/s3zero-ble/build-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/build-server/</guid>
      <description> Follows the instruction of </description>
    </item>
    <item>
      <title>Run Web Client</title>
      <link>/iot/esp/s3zero-ble/run-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/run-client/</guid>
      <description> Connect to jjS3mini Name Filter (Prefix): Scan Connect jjS3mini Controls Temperature: N/A Â°C LED Controls: Red Green Blue Cycle (seconds): 0 Duty Cycle (%): 100 </description>
    </item>
    <item>
      <title>Setup Arduino IDE</title>
      <link>/iot/esp/s3zero-ble/setup-ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/setup-ide/</guid>
      <description>Update IDE An old version of Arduino IDE was instlled. Update it to the latest version before the project starts. ESP32 package is updated automatically.
Add Board Manager Following Waveshare guide, add board manager.</description>
    </item>
    <item>
      <title>Web Client</title>
      <link>/iot/esp/s3zero-ble/web-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/web-client/</guid>
      <description>my request - web client Create a web client, it scans BLE servers and services, support filter with prefix by name. Once seleted, a button to connect the BLE server.
UI contains
connection panel name filter, text button scan list of scan result using the filter button connect using list selection BLE client panel temperature, read-only update every 5 seconds 3 switches for R,G,B slider for cycle (0-5) second slider for duty (0-100) % update BLE server when each writable field changed use vanilla java script as possible, except must-have 3rd libraries/modules use separate css files</description>
    </item>
  </channel>
</rss>
