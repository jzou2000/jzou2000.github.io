<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on My Hugo</title>
    <link>/categories/database/</link>
    <description>Recent content in database on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Sep 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build SQLite And SQLiteODBC From Source</title>
      <link>/core/db/sqlite/build-sqlite/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/sqlite/build-sqlite/</guid>
      <description>Build SQLite Get source and show configurations
tar xzf sqlite.tar.gz # source at ./sqlite sqlite/configure -h jzou@debian9:~/pkg/sqlite.build/m32$ ../../sqlite/configure -h `configure&amp;#39; configures sqlite 3.29.0 to adapt to many kinds of systems. Usage: ../../sqlite/configure [OPTION]... [VAR=VALUE]... To assign environment variables (e.g., CC, CFLAGS...), specify them as VAR=VALUE. See below for descriptions of some of the useful variables. Defaults for the options are specified in brackets. Configuration: -h, --help display this help and exit --help=short display options specific to this package --help=recursive display the short help of all the included packages -V, --version display version information and exit -q, --quiet, --silent do not print `checking .</description>
    </item>
    <item>
      <title>Catalog Functions - ODBC vs JDBC</title>
      <link>/core/db/odbc/catalog/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/catalog/</guid>
      <description>Catalog Functions - odbc vs jdbc Catalog ODBC JDBC Comment Schemas getSchemas Tables SQLTables getTables Columns SQLColumns getTables PrimaryKeys SQLPrimaryKeys getTables ForeignKeys SQLForeignKeys getTables Catalogs ResultSet getCatalogs()
TABLE_CAT Schemas ResultSet getSchemas()
TABLE_SCHEM TABLE_CATALOG TableTypes ResultSet getTableTypes()
TABLE_TYPE type values
TABLE VIEW SYSTEM TABLE GLOBAL TEMPORARY LOCAL TEMPORARY ALIAS SYNONYM Tables SQLTables getTables Input catalog catlog schema schemaPattern table tablePattern tableTypeCSV types[] Output TABLE_CAT * TABLE_SCHEM * TABLE_NAME * TABLE_TYPE * REMARKS * TYPE_CAT TYPE_SCHEMA TYPE_NAME SELF_REFERENCING_COL_NAME REF_GENERATION Columns SQLColumns getColumns Input catalog catlog schema schemaPattern table tablePattern column columnPattern Output TABLE_CAT * TABLE_SCHEM * TABLE_NAME * COLUMN_NAME * DATA_TYPE * TYPE_NAME * COLUMN_SIZE * BUFFER_LENGTH * DECIMAL_DIGITS * NUM_PREC_RADIX * NULLABLE * REMARKS * COLUMN_DEF * SQL_DATA_TYPE * SQL_DATETIME_SUB * CHAR_OCTET_LENGTH * ORDINAL_POSITION * IS_NULLABLE * SCOPE_CATALOG SCOPE_SCHEMA SCOPE_TABLE SOURCE_DATA_TYPE IS_AUTOINCREMENT IS_GENERATEDCOLUMN PrimaryKeys SQLPrimaryKeys getPrimaryKeys Input catalog catlog schema schemaPattern table tablePattern Output TABLE_CAT * TABLE_SCHEM * TABLE_NAME * COLUMN_NAME * KEY_SEQ * PK_NAME * ForeignKeys SQLForeignKeys getCrossReference getImportedKeys getExportedKeys Input pk_catalog * catlog * pk_schema * schema * pk_table * table * fk_catalogtable * fk_schema * fk_table * Output PKTABLE_CAT * * PKTABLE_SCHEM * * PKTABLE_NAME * * PKCOLUMN_NAME * FKTABLE_CAT * * FKTABLE_SCHEM * * FKTABLE_NAME * * FKCOLUMN_NAME * * KEY_SEQ * * UPDATE_RULE * * DELETE_RULE * * FK_NAME * * PK_NAME * * DEFERRABILITY * * ODBC Catalog Function Arguments All ODBC catalog functions accept name filters on their resultset.</description>
    </item>
    <item>
      <title>JDBC</title>
      <link>/core/db/jdbc/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/jdbc/</guid>
      <description></description>
    </item>
    <item>
      <title>ODBC</title>
      <link>/core/db/odbc/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/</guid>
      <description></description>
    </item>
    <item>
      <title>SQLite</title>
      <link>/core/db/sqlite/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/sqlite/</guid>
      <description></description>
    </item>
  </channel>
</rss>
