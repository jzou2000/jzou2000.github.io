<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on My Hugo</title>
    <link>/core/security/</link>
    <description>Recent content in Security on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/core/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generating SSH Keys and Copy Public Keys</title>
      <link>/core/security/ssh-key/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/ssh-key/</guid>
      <description>Host/user alias Edit $HOME/.ssh/config
cat $HOME/.ssh/config host my_alias # this is the alias name hostname some.host.remote # real host name user john # optional, otherwise use john@my_alias Create ssh-key ssh-keygen ssh-keygen generates a pair of RSA key (private id_rsa and public id_rsa.pub) at $HOME/.ssh
Copy the public key file to remote host (john@host.remote) ssh-copy-id -i ~/.ssh/id_rsa.pub john@host.remote The command add an entry in ~/.ssh/authorized_keys on the remote host. After the public key is added, you can ssh login without password.</description>
    </item>
    <item>
      <title>A 6 Part Introductory OpenSSL Tutorial</title>
      <link>/core/security/openssl-tutorial/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/openssl-tutorial/</guid>
      <description>OpenSSL is among the most popular cryptography libraries. It is most commonly used to implement the Secure Sockets Layer and Transport Layer Security (SSL and TLS) protocols to ensure secure communications between computers. In recent years, SSL has become basically obsolete since TLS offers a higher level of security, but some people have gotten into the habit of referring to both protocols as “SSL.”
Cryptography is tricky business, and OpenSSL has too many features to cover in one article, but this OpenSSL tutorial will help you get started creating keys and certificates.</description>
    </item>
    <item>
      <title>OpenSSL Cookbook</title>
      <link>/core/security/openssl-cookbook/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/openssl-cookbook/</guid>
      <description>1 OpenSSL OpenSSL is an open source project that consists of a cryptographic library and an SSL/TLS toolkit. From the project’s web site:
The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured, and Open Source toolkit implementing the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols as well as a full-strength general purpose cryptography library. The project is managed by a worldwide community of volunteers that use the Internet to communicate, plan, and develop the OpenSSL toolkit and its related documentation.</description>
    </item>
    <item>
      <title>OpenSSL Essentials: Working with SSL Certificates, Private Keys and CSRs</title>
      <link>/core/security/openssl-cert-key-csr/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/openssl-cert-key-csr/</guid>
      <description>source
Introduction OpenSSL is a versatile command line tool that can be used for a large variety of tasks related to Public Key Infrastructure (PKI) and HTTPS (HTTP over TLS). This cheat sheet style guide provides a quick reference to OpenSSL commands that are useful in common, everyday scenarios. This includes OpenSSL examples of generating private keys, certificate signing requests, and certificate format conversion. It does not cover all of the uses of OpenSSL.</description>
    </item>
    <item>
      <title>OCSP</title>
      <link>/core/security/ocsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/security/ocsp/</guid>
      <description>Certificate Revocation reasons
compromised, e.g. stolen expiration CRL - Certificate Revocation Lists
maintained by a CA (Certificate Authority) content: serial number, date distribution: published URL limitations size updates: not real-time (secheduled, on-demand) scalability OCSP (Online Certificate Status Protocol) obtain the real-time revocation status of a digital certificate allows clients to query the CA for specific certificate status (vs download-and-parse) how-work a client sends a certificate query to the OCSP responder the responder checks its database the responder sends a response indicating certificate validity, revocation or unknown status OCSP Stapling signed OCSP response CRL as fallback </description>
    </item>
    <item>
      <title>Sign-On</title>
      <link>/core/security/sign-on/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/security/sign-on/</guid>
      <description>Single Sign-on What is Single Sign-on? How It Works? 4:53
OAuth OAuth 2.0: An Overview 6:33
OAuth 2.0 &amp;amp; OpenID Connect (OIDC): Technical Overview by VMware End-User Computing (16:18)
OAuth 2.0 and OpenID Connect (in plain English) by OktaDev (1:02:16)
SAML 2.0 SAML 2.0: Technical Overview A Developer&amp;rsquo;s Guide to SAML by OktaDev (27:46)</description>
    </item>
    <item>
      <title>SQL Injection</title>
      <link>/core/security/sql-injection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/security/sql-injection/</guid>
      <description>What is Penetration Testing?
Penetration testing, also called pen testing or ethical hacking, is the practice of testing a computer system, network, or web application to find security vulnerabilities that a would-be attacker could exploit.
If you compose SQL statement with user input without proper validation, there is a risk of &amp;ldquo;SQL Injection&amp;rdquo;.
An Example If the server processes user input with following code snippet:
String sql = &amp;#34;select * from subscriber where email=&amp;#39;&amp;#34; + EMAIL +&amp;#34;&amp;#39; and region=1&amp;#34;; ResultSet result = stmt.</description>
    </item>
  </channel>
</rss>
