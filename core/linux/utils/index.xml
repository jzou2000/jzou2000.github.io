<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Common Utils on My Hugo</title>
    <link>/core/linux/utils/</link>
    <description>Recent content in Common Utils on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/core/linux/utils/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>diff</title>
      <link>/core/linux/utils/diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/diff/</guid>
      <description>Compare files or folders.
diff [OPTIONS] FILES Common Options option description -q,--brief report only when files differ -u,--unified[=NUM] output unified context (used by patch), with NUM (default 3) lines -y,--side-by-side output in two columns -r,--recursive recursively compare any subdirectories found -N,--new-file treat absent files as empty -a,--text treat all files as text --strip-trailing-cr strip trailing carriage return on input, useful on comparing files between linux and windows Ignore Cases option description --suppress-blank-empty -i,--ignore-case ignore cases differences in file contents -E,--ignore-tab-expansion ignore changes due to tab expansion -Z,--ignore-trailing-space -b,--ignore-space-change -w,--ignore-all-space -B,--ignore-blank-lines -I,--ignore-matching-lines=RE ignore changes where all lines match RE Less Common Options option description -n,--rcs RCS format diff -x,--exclude=PAT exclude files that match the pattern PAT -X,--exclude-from=FILE exclude files that match any patterns in FILE --from-file=FILE1 define from files in FILE1 --to-file=FILE2 define to files in FILE1 </description>
    </item>
    <item>
      <title>find</title>
      <link>/core/linux/utils/find/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/find/</guid>
      <description>Common Options type arg example description also test +n +5 greater than n -n (less), n (equal) -amin n -amin 5 accessed n minutes ago -cmin (change),-mmin (modify) -anewer ref -anewer main.o accessed after the modification of ref file -atime n -atime 2 accesed n*24 hours ago -ctime,-mtime -newer ref inode status change is newer than ref modification -name pattern -name *.o name (glob) pattern -path whole_path_pattern -regex pattern -regex &amp;lsquo;.</description>
    </item>
    <item>
      <title>Generate and Apply a Patch</title>
      <link>/core/linux/utils/diff-patch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/diff-patch/</guid>
      <description>Scenario A working folder on linux was copied from Windows need to ignore the difference of \r\n and \n when compare Copy happened long time ago, e.g. 1 year A few files were changed, we don&amp;rsquo;t remember exactly what and when were changed, roughly in recent month. Some folders with binaries, e.g. .git should be excluded. Need to generate a patch file that can be appied on a clean repo. Steps optional: from the working folder, find files that are changed in recent 30 days.</description>
    </item>
    <item>
      <title>grep</title>
      <link>/core/linux/utils/grep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/grep/</guid>
      <description>grep [OPTION] [PATTERN | -e PATTERN | -f FILE] FILES ... Common options
options description -e RE usually used for multiple patterns, or when RE contains leading dash -r recursively search -E &amp;ndash;extended-regexp -P &amp;ndash;perl-regexp (experimental) -i &amp;ndash;ignore-case -v &amp;ndash;invert-match -f FILE read patterns from FILE -n &amp;ndash;line-number, add line-number of matched line(s) in output -l list only name of files that contain the pattern &amp;ndash;include=GLOB search only files that match the glob pattern &amp;ndash;exclude=GLOB skip files that match the glob &amp;ndash;exclude-dir=DIR skip dirs of pattern in recursive search -I equivalent to &amp;ndash;binary-files=without-match, skip binary files unless unmatch is concerned -s &amp;ndash;no-messages, suppress error messages about nonexistent or unreadable files Recipes</description>
    </item>
    <item>
      <title>od</title>
      <link>/core/linux/utils/od/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/od/</guid>
      <description>od - dump files in octal and other formats.
Common Options option description j,&amp;ndash;skip-bytes=BYTES skip BYTES input -N,&amp;ndash;read-bytes=BYTES limit dump to BYTES input bytes -t,&amp;ndash;format=Type output format a: named character c: printable character or backslash escaped d[SIZE]: signed decimal f[SIZE]: floating point o[SIZE]: octal u[SIZE]: unsigned decimal x[SIZE]: hexadecimal -a same as -t a -b same as -t o1 -c same as -t c -d same as -t u2 -f same as -t fF -i same as -t dI -l same as -t dL -o same as -t o2 -s same as -t d2 -x same as -t x2 -w,&amp;ndash;width=BYTES output BYTES bytes per output line, 32 by default </description>
    </item>
    <item>
      <title>Patch</title>
      <link>/core/linux/utils/patch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/patch/</guid>
      <description>Syntax Hunk Failed patching file lib/platform.c Hunk #1 FAILED at 266. Hunk #2 FAILED at 292. 2 out of 2 hunks FAILED -- saving rejects to file lib/platform.c.rej </description>
    </item>
    <item>
      <title>Some GUI utilities</title>
      <link>/core/linux/utils/gui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/gui/</guid>
      <description> diff/merge gui: meld, kdiff3 </description>
    </item>
    <item>
      <title>tar</title>
      <link>/core/linux/utils/tar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/tar/</guid>
      <description>Tar is often used to pack a group of files in a single package (and vice versa).
Change Directory -C, --directory=DIR Change to DIR before performing any operations. This option is order-sensitive, i.e. it affects all options that follow. Use Case
We want to extract files to a directory other than the current folder
tar xf path/package.tar -C other-folder Note: the order matters
tar -C other-folder xf package.tar find package.tar at other-folder and extract to that folder.</description>
    </item>
  </channel>
</rss>
