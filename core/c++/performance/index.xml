<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Profile and Optimization on My Hugo</title>
    <link>/core/c&#43;&#43;/performance/</link>
    <description>Recent content in Profile and Optimization on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/core/c++/performance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using gprof</title>
      <link>/core/c&#43;&#43;/performance/gprof/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/performance/gprof/</guid>
      <description>TBD</description>
    </item>
    <item>
      <title>Using perf</title>
      <link>/core/c&#43;&#43;/performance/perf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/performance/perf/</guid>
      <description>Note: WSL can&amp;rsquo;t run (standard) perf, instead install linux-tools-generic.
record sampling with call-graph export PERF=/usr/lib/linux-tools/5.4.0-84-generic/perf $PERF record -g app app-args the perf sampling data is saved in perf.data after the app terminates normally. decode perf.data $PERF report -U &amp;gt; result.txt -U ignores unknown (usually system calls) entries. </description>
    </item>
    <item>
      <title>Using valgrind</title>
      <link>/core/c&#43;&#43;/performance/valgrind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/performance/valgrind/</guid>
      <description>TBD</description>
    </item>
  </channel>
</rss>
