<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>recipes on My Hugo</title>
    <link>/core/python/recipes/</link>
    <description>Recent content in recipes on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/core/python/recipes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Duck-typing Dict</title>
      <link>/core/python/recipes/duck-typing_dict/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/recipes/duck-typing_dict/</guid>
      <description>ex-obj-dict.py
from __future__ import print_function &amp;#34;&amp;#34;&amp;#34; Demonstrate duck-typing for dict-like class. 1. Create __dict__ dictionary before creating any members 2. Implement following interfaces, which are required for dict context, such as d[key], for key in d: __setitem__(key, value) __getitem__(key) __delitem__(key) __iter__() __len__() 3. In addition, implement common methods of dict get(key, fallback=None) items() Alternatively, by deriving from collections.abc.Mapping: * __dict__ is not required to be created * context interfaces are forced to be implemented * get(), items() are not required (implemented already by Mapping) &amp;#34;&amp;#34;&amp;#34; try: from collections.</description>
    </item>
  </channel>
</rss>
