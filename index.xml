<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySite on My Hugo</title>
    <link>/</link>
    <description>Recent content in MySite on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 May 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Playing Javascript with VisualStudio Code</title>
      <link>/web/js/vsc-settings-javascript/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/vsc-settings-javascript/</guid>
      <description>Project Configuration SC-P open action menu, type javascript and choose &amp;ldquo;Go to project configuration&amp;rdquo; Create/Edit jsconfig.json at the workspace root ${workspaceFolder}/jsconfig.json by defaut it looks like { &amp;#34;compilerOptions&amp;#34;: { &amp;#34;module&amp;#34;: &amp;#34;commonjs&amp;#34;, &amp;#34;target&amp;#34;: &amp;#34;es2016&amp;#34;, &amp;#34;jsx&amp;#34;: &amp;#34;preserve&amp;#34; }, &amp;#34;exclude&amp;#34;: [ &amp;#34;node_modules&amp;#34;, &amp;#34;**/node_modules/*&amp;#34; ] } Debugging Click Debug icon in #Activity Bar# to activate the Debug view Click gear icon at the top of the Debug view to create/modify launch.json, which locates at ${workspaceFolder}/.</description>
    </item>
    <item>
      <title>Vue App Quick Start</title>
      <link>/web/vue/vue-quick-start/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-quick-start/</guid>
      <description>First Vue Project created by vue-cli init, with webpack
$ vue init webpack my-p0 A newer version of vue-cli is available. latest: 2.9.6 installed: 2.8.2 ? Project name my-p0 ? Project description My first vue project created by vue-init ? Author Jason Zou &amp;lt;jzou2000@gmail.com&amp;gt; ? Vue build standalone ? Install vue-router? Yes ? Use ESLint to lint your code? Yes ? Pick an ESLint preset Standard ? Set up unit tests Yes ?</description>
    </item>
    <item>
      <title>Install Docker</title>
      <link>/core/docker/install/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/install/</guid>
      <description>install sudo apt-get update sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg2 \ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88 sudo add-apt-repository \ &amp;#34;deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo &amp;#34;$ID&amp;#34;) \ $(lsb_release -cs) \ stable&amp;#34; sudo apt-get update sudo apt-get install docker-ce # apt-cache madison docker-ce sudo groupadd docker sudo usermod -aG docker jzou sudo docker run hello-world # docker data/containers/images are stored at /var/lib/docker docker --version Docker version 17.</description>
    </item>
    <item>
      <title>Overview</title>
      <link>/core/jenkins/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/overview/</guid>
      <description>Online Resource Jenkins Online Docuemnt javaTpoint - Jenkins tutorials point Medium - AUTOMATING THE JENKINS TO RUN MULTIPLE JOBS USING DSL AND ITS SCRIPT github - jenkinsci/pipeline-examples Ten Things I Wish I’d Known Before Using Jenkins Pipelines </description>
    </item>
    <item>
      <title>Overview</title>
      <link>/core/jenkins/python-binding/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/overview/</guid>
      <description>Reference
document Install pip install python-jenkins Usage import jenkins SERVER = &amp;#39;https://jsen.isw.com&amp;#39; USERNAME = &amp;#39;jason.zou@isw.com&amp;#39; PASSWORD = &amp;#39;12434323424331313212&amp;#39; server = jenkins.Jenkins(SERVER, username=USERNAME, password=PASSWORD) # get list of top-level jobs jobs = server.get_jobs() working with folders server.create_job(&amp;#39;folder&amp;#39;, jenkins.EMPTY_FOLDER_XML) server.create_job(&amp;#39;folder/empty&amp;#39;, jenkins.EMPTY_FOLDER_XML) server.copy_job(&amp;#39;folder/empty&amp;#39;, &amp;#39;folder/empty_copy&amp;#39;) server.delete_job(&amp;#39;folder/empty_copy&amp;#39;) server.delete_job(&amp;#39;folder&amp;#39;) </description>
    </item>
    <item>
      <title>Overview</title>
      <link>/core/shell/bat/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bat/overview/</guid>
      <description>Online References TryToProgam - Batch file Microsoft Learn - cmd TutorialsPoint - Batch Script </description>
    </item>
    <item>
      <title>Overview</title>
      <link>/web/html/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/html/overview/</guid>
      <description></description>
    </item>
    <item>
      <title>Minimal Setup A Vue App Project</title>
      <link>/web/vue/vue-app-min/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-app-min/</guid>
      <description>Pre-request Have vue-cli installed
npm install @vue/cli -g Create Project vue create prj-name The default preset (babel, eslint) installes 178MB. with route/vuex 183MB
Start run/development
npm run serve common modules vue add router vue add vuex Configure You don&amp;rsquo;t need to config and the boilplate just works. However if you do need extra configuration, create vue.config.js at project root folder.
module.exports = { // configures go here devServer: { proxy: &amp;#39;http://localhost:8088&amp;#39;, // alternatively, if you have multiple APIs // or fine-tune url pattern // proxy: { // &amp;#39;api-url&amp;#39;: { // target: &amp;#39;http://localhost:8088&amp;#39;, // ws: true, // also websockets // changeOrigin: true, // }, // &amp;#39;other-api-url: {.</description>
    </item>
    <item>
      <title>Docker Cheatsheet - Basic</title>
      <link>/core/docker/cheatsheet-basic/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/cheatsheet-basic/</guid>
      <description>Get Information docker --version docker info docker images ls docker container ls -all Container docker run [OPTIONS] IMAGE [COMMAND] [ARGS...] -d --detach Most common options
option default description -d, &amp;ndash;detach run in background -e, &amp;ndash;env set environment varialbes, e.g. -e MYVAR=foo -e VAR1 &amp;ndash;env-file read env vars from a file &amp;ndash;expose expose a port or a range of ports -h,&amp;ndash;hostname container host name -i,&amp;ndash;interactive keep stdin open even if not attached -l,&amp;ndash;label set meta data on a container &amp;ndash;name assign a name to the container -p,&amp;ndash;pulish publish a container&amp;rsquo;s port(s) to the host, e.</description>
    </item>
    <item>
      <title>Common Tasks on Docker Maintenance</title>
      <link>/core/docker/common-tasks/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/common-tasks/</guid>
      <description>Update Image Update an image (with tag if applicable) from a registry and remove unused images. The image below is klakegg/hugo:alpine, which is used to build this site.
docker image pull klakegg/hugo:alpine docker image prune </description>
    </item>
    <item>
      <title>Change Docker Storage</title>
      <link>/core/docker/change-docker-storage/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/core/docker/change-docker-storage/</guid>
      <description>Purpose By default docker save all its data, including images, containers, etc at /var/lib/docker
jzou@debian9: $ docker info Client: Debug Mode: false Server: Containers: 1 Running: 1 Paused: 0 Stopped: 0 Images: 8 Server Version: 19.03.5 Storage Driver: overlay2 Backing Filesystem: extfs Supports d_type: true Native Overlay Diff: true Logging Driver: json-file Cgroup Driver: cgroupfs Plugins: Volume: local Network: bridge host ipvlan macvlan null overlay Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog Swarm: inactive Runtimes: runc Default Runtime: runc Init Binary: docker-init containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339 runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657 init version: fec3683 Security Options: seccomp Profile: default Kernel Version: 4.</description>
    </item>
    <item>
      <title>Common Usage</title>
      <link>/web/js/npm/usage/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/usage/</guid>
      <description>Update npm itself npm install -g npm Update all installed packages npm update Install/Uninstall a package npm install install @vue/cli -g npm uninstall @vue/cli -g -g global List Packages npm ls --depth=0 -g &amp;ndash;depth=0 list only toplevel package tree -g global </description>
    </item>
    <item>
      <title>Shallow Or Deep</title>
      <link>/core/python/shallow-or-deep/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/core/python/shallow-or-deep/</guid>
      <description>Shadow 1 2 3 4 5 6 7 8 9 10 11 12 13 &amp;gt;&amp;gt;&amp;gt; m = [2, 5, 1] &amp;gt;&amp;gt;&amp;gt; d1 = {&amp;#39;m&amp;#39;: m} &amp;gt;&amp;gt;&amp;gt; d2 = {&amp;#39;name&amp;#39;: &amp;#39;Bond&amp;#39;} &amp;gt;&amp;gt;&amp;gt; d2.update(d1) &amp;gt;&amp;gt;&amp;gt; d2 {&amp;#39;m&amp;#39;: [2, 5, 1], &amp;#39;name&amp;#39;: &amp;#39;Bond&amp;#39;} &amp;gt;&amp;gt;&amp;gt; d1 {&amp;#39;m&amp;#39;: [2, 5, 1]} &amp;gt;&amp;gt;&amp;gt; d1[&amp;#39;m&amp;#39;][1] = 100 &amp;gt;&amp;gt;&amp;gt; d1 {&amp;#39;m&amp;#39;: [2, 100, 1]} &amp;gt;&amp;gt;&amp;gt; d2 {&amp;#39;m&amp;#39;: [2, 100, 1], &amp;#39;name&amp;#39;: &amp;#39;Bond&amp;#39;} Deep 1 2 3 4 5 6 7 8 9 10 11 12 13 &amp;gt;&amp;gt;&amp;gt; import copy &amp;gt;&amp;gt;&amp;gt; m = [2, 5, 1] &amp;gt;&amp;gt;&amp;gt; d1 = {&amp;#39;m&amp;#39;: m} &amp;gt;&amp;gt;&amp;gt; d2 = copy.</description>
    </item>
    <item>
      <title>Playing With GNUMake</title>
      <link>/core/c&#43;&#43;/make/playing-with-gmake/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/playing-with-gmake/</guid>
      <description>and # test $(and c1,c2,c3,...N) # return N or &amp;#39;&amp;#39; if any of them is empty # # e.g. # make -f and.mk A=a B=b C= result = $(and $(A),$(B),$(C)) $(info result=$(result)) all:;@: $ make -f and.mk A=a result= $ make -f and.mk A=a B=b result= $ make -f and.mk A=a B=b C=c result=c $ make -f and.mk B=b C=c result= $ or - fallbacks # test $(or c1,c2,c3,...N) # return &amp;#39;&amp;#39; or the first non-empty # # e.</description>
    </item>
    <item>
      <title>Accessing DOM from a Vue App</title>
      <link>/web/vue/vue-access-dom/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-access-dom/</guid>
      <description>Although it is more preferable to use virtual-DOM for exchanging data between UI components and model in a Vue-based application, accessing DOM elements directly is still required in some special cases:
using 3rd-party libraries (e.g. green-sock for animation) You can still use standard DOM access method
var el = document.getElementById(&amp;#39;el-name&amp;#39;) Vue offers a convenient way to do this work
&amp;lt;!-- any tags as well --&amp;gt; &amp;lt;div ref=&amp;#39;myref&amp;#39; other-attributes &amp;gt; &amp;lt;/div&amp;gt; new Vue({ //.</description>
    </item>
    <item>
      <title>Pipeline</title>
      <link>/core/jenkins/playground/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/playground/pipeline/</guid>
      <description>Pipeline parameters valid parameter types
booleanParam choice credentials file text password run string </description>
    </item>
    <item>
      <title>String Basic</title>
      <link>/core/rosetta/string/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/string/basic/</guid>
      <description>lang c++ java python js lua perl concat + + + + length s.size() len(s) s.length empty s.empty() s.IsEmpty() not s substring s.substr(off,len) s[off,len] s.slice(start,end) duplicate s * n s.duplicate(n) s * n s.repeat(n) replace padding s.rjust(n, c) s.padStart(n,c) s.ljust(n, c) s.padEnd(n, c) strip s.lstrip() s.trimStart() s.rstrip() s.trimEnd() s.strip() s.trim() to-string parse append push_back prepend shift shift shift lower s.lower() s.toLowerCase() upper s.upper() s.toUpperCase() parse s.valueOf() split s.split(sep, limit) s.</description>
    </item>
    <item>
      <title>Using Components</title>
      <link>/web/vue/vue-component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-component/</guid>
      <description> This is a sample Vue app with self defined components.
{{cval(color)}} {{cval(rider)}} TBD </description>
    </item>
    <item>
      <title>Vector/Array</title>
      <link>/core/rosetta/container/vector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/container/vector/</guid>
      <description>Vector/Array lang c++ java python js lua perl push pop shift unshift len clear isempty slice a.slice(start,end) splice merge a.concate(b,&amp;hellip;) to-string str.join(list) sort get [n] v.get(n) [n] [n] [n] [n] remove delete a[n] delete a[n] Stack Queue </description>
    </item>
    <item>
      <title>GMake Recipes</title>
      <link>/core/c&#43;&#43;/make/gmake-recipes/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/gmake-recipes/</guid>
      <description>Check if two variables equal Surprisingly, gmake doesn&amp;rsquo;t have function to check to variables equal. This guarentee works
$(and $(findstring $a,$b),$(findstring $b,$a)) however, following solution works in most cases
eq = $(findstring __$1__,__$2__) iseq = $(if $(call eq,$1,$2),eq,ne) a:=abc b:=b $(info [$a] $(call iseq,$a,$b) [$b]) a:=abc b:=abc b $(info [$a] $(call iseq,$a,$b) [$b]) a:=abc b b:=abc b $(info [$a] $(call iseq,$a,$b) [$b]) all: ;@: Result
[abc] != [b] [abc] != [abc b] [abc b] == [abc b] Check if a variable in a list Two functions can achieve this task:</description>
    </item>
    <item>
      <title>Embeded Vue in Hugo Site</title>
      <link>/web/vue/vue-in-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-in-hugo/</guid>
      <description>This is a sample Vue app.
{{ message }} {{ i }} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 &amp;lt;div id=&amp;#39;sample-app&amp;#39; style=&amp;#39;background: lightgray; padding: 4px 16px; margin: 16px;&amp;#39;&amp;gt; &amp;lt;p&amp;gt;This is a sample Vue app.&amp;lt;/p&amp;gt; {{message}} &amp;lt;ul&amp;gt; &amp;lt;li v-for=&amp;#34;i in fruit&amp;#34;&amp;gt; {{ i }} &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var app = new Vue({ el: &amp;#39;#sample-app&amp;#39;, data: { message: &amp;#39;Hello Vue!</description>
    </item>
    <item>
      <title>Common NPM Modules</title>
      <link>/web/js/npm/common-modules/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/common-modules/</guid>
      <description>Modules and Size Method
create folder, edit package.json for the specified module run npm update run du -sh . Name Size Description express+axios 3.7M mini web framework + promise based http client better-sqlite3 23M The fastest and simplest library for SQLite3 in Node.js. fast-xml-parser 372k Validate XML or Parse XML to JS/JSON very fast without C/C++ based libraries js-yaml 1.1M YAML 1.2 parser and serializer markdown-it 1.5M Markdown-it - modern pluggable markdown parser.</description>
    </item>
    <item>
      <title>Diff using only JavaScript</title>
      <link>/web/vue/vue-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-diff/</guid>
      <description>In this example, we use jsdiff to compare two strings (that simulate two files), generate the patch result as a string (similar to the output of diff), and display the patch in html using diff2html.
Go!mDiff Raw OutputdiffLines{{diff_lines}}createTwoFilesPatch{{patch}}</description>
    </item>
    <item>
      <title>Drag-and-Drop with Vue</title>
      <link>/web/vue/vue-dnd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-dnd/</guid>
      <description> </description>
    </item>
    <item>
      <title>Format</title>
      <link>/core/rosetta/string/format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/string/format/</guid>
      <description></description>
    </item>
    <item>
      <title>Hash/Dictionary</title>
      <link>/core/rosetta/container/hash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/container/hash/</guid>
      <description></description>
    </item>
    <item>
      <title>My docker that runs hugo</title>
      <link>/web/hugo/my-hugo-docker/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/web/hugo/my-hugo-docker/</guid>
      <description>Setup Run By default the script runhugo
accept a list of folder as toplevel content section clean target folder generate the site and watch the input folder to updte Example
$ hugo.sh -h hugo.sh [options] [project1 [project2 ...]] launch hugo in a container, should run from WSL/Linux -h help -y dry run -i interactive shell -w path work folder (/home/jasonz/myhub) -c file configuration yaml file -v map-list path mapping (e.g. lpath:dpath [-v lp2:dp2]) -t path publish target folder (/mnt/c/myhub/site) -b path base url -g publish for github.</description>
    </item>
    <item>
      <title>Some Docker Images On hub.docker.com</title>
      <link>/core/docker/hub-img/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/hub-img/</guid>
      <description>My List klakegg/hugo latest de97b1ae4b16 3 weeks ago 44.2MB (0.63.1) alpine latest 965ea09ff2eb 4 months ago 5.55MB node lts-alpine3.10 8d20833f510f 3 weeks ago 84.9MB (12.14.1) node lts 98a2c7c96ac3 5 days ago 914MB centos 6 d0957ffdf8a2 11 months ago 194MB centos latest 9f38484d220f 11 months ago 202MB debian 9-slim b805107aed7b 11 months ago 55.3MB debian latest 0af60a5c6dd0 11 months ago 101MB walkero/node-vuecli latest 8ac98d2b7f9a 11 months ago 189MB anapsix/alpine-java latest c45785c254c5 12 months ago 126MB maven alpine 7445f83cd169 9 months ago 122MB python alpine a1cd5654cf3c 12 days ago 109MB (3.</description>
    </item>
    <item>
      <title>Hugo SSG on Docker</title>
      <link>/web/hugo/hugo-on-docker/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/web/hugo/hugo-on-docker/</guid>
      <description>Hugo Docker docker pull klakegg/hugo:ext-apline # 17mb Build docker run --rm -it -v $(pwd):/src -v $(pwd)/output:/target klakegg/hugo:ext-alpine Run Server docker run --rm -it -v $(pwd):/src -p 1313:1313 klakegg/hugo:ext-alpine Compose Shell docker run --rm -it -v $(pwd):/src klakegg/hugo:ext-alpine shell Configuration Environment variables:
HUGO_BIND - Bind address for server. Default: 0.0.0.0 HUGO_DESTINATION - Location of output folder. Default: /target HUGO_PANDOC - Pandoc command to be triggered. Default: pandoc-default HUGO_ENV - Selecting environment (&amp;ldquo;DEV&amp;rdquo;/&amp;ldquo;production&amp;rdquo;).</description>
    </item>
    <item>
      <title>Link</title>
      <link>/core/rosetta/container/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/container/link/</guid>
      <description></description>
    </item>
    <item>
      <title>Regular Expression</title>
      <link>/core/rosetta/string/re/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/string/re/</guid>
      <description></description>
    </item>
    <item>
      <title>Input from String and Output to String</title>
      <link>/core/rosetta/string/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/string/io/</guid>
      <description></description>
    </item>
    <item>
      <title>Set</title>
      <link>/core/rosetta/container/set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/container/set/</guid>
      <description></description>
    </item>
    <item>
      <title>Bind-mount a Local Folder on Windows</title>
      <link>/core/docker/mount/bind-mount-win/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/mount/bind-mount-win/</guid>
      <description>The Docker container supports mounting a host folder to a container mount point
docker run -v host_paht:container_path [ other options ] However you can&amp;rsquo;t mount a folder other than C:/Users and its sub-folders on Windows/OSX, like this
docker run -v d:/my-path:/my-mount ... Docker on Windows/OSX is implemented through a virtual machine (docker-machine), so the host path is actually the path on the docker-machine, not the host that runs docker.
To mount an arbitary host folder to the docker container, the host folder has to be accessible by the docker machine, and expressed in the format of docker machine.</description>
    </item>
    <item>
      <title>Make Toolchains with Docker</title>
      <link>/core/docker/mk-tool-chain/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/mk-tool-chain/</guid>
      <description>Task Requirement We need a centos5 container with following packages:
gcc44 and g++44 that can build both 64 and 32 bit app python2.7 with PyYAML module perl 5.8+ Tips The latest open-ssl (e.g. v1.1.1 at write time) is not supported by old distro (e.g. centos5), so it is wise to download (src) modules into the working folder before running docker build instead of doing so in Dockerfile if openssl is used (e.</description>
    </item>
    <item>
      <title>Tree</title>
      <link>/core/rosetta/container/tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/container/tree/</guid>
      <description></description>
    </item>
    <item>
      <title>Unicode and Encoding/Decoding</title>
      <link>/core/rosetta/string/unicode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/string/unicode/</guid>
      <description></description>
    </item>
    <item>
      <title>String Template and Interpolation</title>
      <link>/core/rosetta/string/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/string/template/</guid>
      <description>Javascript var a_str = `a string may contains ${var} or ${a.expression()} and embedded newline` Python a_str = &amp;#39;a string may contains {var} and {another_var}&amp;#39;.format({&amp;#39;var&amp;#39;: 123, &amp;#39;another_var&amp;#39;: expression()}) multi_line_str = &amp;#39;&amp;#39;&amp;#39;embedded newline in a long text&amp;#39;&amp;#39;&amp;#39; </description>
    </item>
    <item>
      <title>Run glibc Applications on Alpine</title>
      <link>/core/docker/alpine-glibc/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/docker/alpine-glibc/</guid>
      <description>The Problem Alpine is musl-based, however most existing applications are glibc-based. Rebuilding everything with musl is an ideal and clean solution, but that be not practical (e.g. sources/dependencies are not availalbe) or not economical (e.g. not enough resources or in a tight schedule) or other reasons.
Let&amp;rsquo;s face it, alpine/musl is good (size, security, &amp;hellip;) but we still need to run glibc-apps on alpine.
There are bunch of solutions already:</description>
    </item>
    <item>
      <title>A Makefile Template</title>
      <link>/core/c&#43;&#43;/make/make-templ/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/make-templ/</guid>
      <description>Module Variables Variable Required Default Example Description NAME yes mymod name of module, target name is generated from the module name BINNAME override the convention of target name, see below notes TYPE yes lib bin, lib, so, (none) SRCS . directories that contain source code SUBS list of sub modules DEPENDS list of depends DEFS -Djs compiler defines LDEF -Dpic linker defines INCS a/inc b/c list of include paths, without -I leading LIBS -labc list of libs with -l, include -L if needed OBJS a.</description>
    </item>
    <item>
      <title>better-sqlite3</title>
      <link>/web/js/npm/better-sqlite3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/better-sqlite3/</guid>
      <description>better-sqlite3 - the fastest and simplest library for SQLite3 in Node.js. (23M)
Compare to sqlite3 - asynchronous, non-blocking SQLite3 bindings (15M)
Both modules need C binaries.
/* Demo: better-sqlite3 - faster sqlite3 client, using sync API * connect(dsn, {options}) * prepare(sql) * all(params) * run(params) */ const log = console.log const bs3 = require(&amp;#39;better-sqlite3&amp;#39;) const argv = process.argv.slice(2) var dbname = argv.length &amp;gt; 1 ? argv[0] : &amp;#39;mylite.db&amp;#39; const db = bs3(dbname, {}) var r = db.</description>
    </item>
    <item>
      <title>commander.js</title>
      <link>/web/js/npm/commander/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/commander/</guid>
      <description>Commander.js is the complete solution for node.js command-line interfaces, inspired by Ruby&amp;rsquo;s commander. 0 dependencies. (112K)
// demonstrate the usage of commander, which parse command-line arguments // const log = console.log const str = function(o, tight) { return tight ? JSON.stringify(o) : JSON.stringify(o, null, 2) } const opt = new (require(&amp;#39;commander&amp;#39;)).Command() opt.description(&amp;#39;Demonstate the usage of commander&amp;#39;) // optional .version(&amp;#39;0.1.2&amp;#39;) // optional, -V or --version .option(&amp;#39;-o, --onion&amp;#39;, &amp;#39;add onion&amp;#39;) // default onion=undefined .</description>
    </item>
    <item>
      <title>express &#43; axios</title>
      <link>/web/js/npm/express&#43;axios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/express&#43;axios/</guid>
      <description>Mini web framework + promise based http client, 3.7M
// A very simple httpd based on express // that servers static htmls at d:/www var path = require(&amp;#39;path&amp;#39;) var express = require(&amp;#39;express&amp;#39;) var bodyParser = require(&amp;#39;body-parser&amp;#39;) var app = express() app.use(bodyParser.json()) app.use(bodyParser.urlencoded({extended: true})) const fs = require(&amp;#39;fs&amp;#39;) const yaml = require(&amp;#39;js-yaml&amp;#39;) const sqlite = require(&amp;#39;better-sqlite3&amp;#39;) const tslite = require(&amp;#39;./tslite&amp;#39;) const ux = require(&amp;#39;./utilx&amp;#39;) const nedb = require(&amp;#39;nedb&amp;#39;) app.use(express.static(&amp;#39;exel&amp;#39;)) //app.use(&amp;#39;/public&amp;#39;, express.static(&amp;#39;public&amp;#39;)) var log = console.</description>
    </item>
    <item>
      <title>fast-xml-parser</title>
      <link>/web/js/npm/fast-xml-parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/fast-xml-parser/</guid>
      <description>fast-xml-parser validates XML or parse XML to JS/JSON very fast without C/C++ based libraries (372K)
Alternatives are:
xml2js - simple XML to JavaScript object converter (2.0M) sax - a pure javascript sax parser node-expat - libexpat (binary) node.js bind const fs = require(&amp;#39;fs&amp;#39;) const fxp = require(&amp;#39;fast-xml-parser&amp;#39;) const log = console.log const argv = process.argv.slice(2) const fname = argv[0] const encoding = argv.length &amp;gt; 1 ? argv[1] : &amp;#39;utf8&amp;#39; fs.promises .</description>
    </item>
    <item>
      <title>iconv-lite</title>
      <link>/web/js/npm/iconv-lite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/iconv-lite/</guid>
      <description>This script opens a file stream and detect the encoding. const log = console.log const fs = require(&amp;#39;fs&amp;#39;) const iconv = require(&amp;#39;iconv-lite&amp;#39;) const args = process.argv.slice(2) const fname = args[0] || &amp;#39;sample.txt&amp;#39; var encoding = args[1] log(`fname=${fname} encoding=${encoding}`) // show upto 16 items of data or 33 characters if data is string function show_data(data, title) { log(`${title}: length=${data.length}`) if (typeof data === &amp;#39;string&amp;#39;) { log(` ${data.slice(0, 33)}`) } else {</description>
    </item>
    <item>
      <title>js-levenshtein</title>
      <link>/web/js/npm/js-levenshtein/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/js-levenshtein/</guid>
      <description>Calculate levenshtein distance between two strings.
/* Demo: usage of js-levenshtein */ const log = console.log const levenshtein = require(&amp;#39;js-levenshtein&amp;#39;) log(levenshtein(&amp;#39;kitten&amp;#39;, &amp;#39;sitting&amp;#39;)) log(levenshtein(&amp;#39;./APITests/TestSets/TestCases/SQLAllocHandlE.xml&amp;#39;, &amp;#39;./APITests/TestSets/3.xTestCases/SQLAllocHandle.xml&amp;#39;)) /* output 3 4 */ </description>
    </item>
    <item>
      <title>js-yaml</title>
      <link>/web/js/npm/js-yaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/js-yaml/</guid>
      <description>js-yaml - YAML 1.2 parser and serializer (1.1M).
/* Demonstrate js-yaml (yaml implemented by js) usage usage: node yaml-load.js [yaml_file_name] */ const jsyaml = require(&amp;#39;js-yaml&amp;#39;) const log = console.log const argv = process.argv.slice(2) log(`argv=${argv}`) if (argv &amp;lt; 1) { // no file specified, use embedded sample var fdat = ` name: sample list: [1, 2, 3] string: | hello world ` } else { var fs = require(&amp;#39;fs&amp;#39;) var fdat = fs.</description>
    </item>
    <item>
      <title>markdonw-it &#43; highlight.js</title>
      <link>/web/js/npm/markdown-it&#43;highlight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/markdown-it&#43;highlight/</guid>
      <description>markdown-it - modern pluggable markdown parser (1.5M).
highlight.js - syntax highlighting with language autodetection. (2.4M) (not highlightjs, which is obsolete already)
/* Demo: usage of markdown-it and highlight.js */ const log = console.log const hljs = require(&amp;#39;highlight&amp;#39;) const md = require(&amp;#39;markdown-it&amp;#39;)({ breaks: true, highlight: function (str, lang) { if (lang &amp;amp;&amp;amp; hljs.getLanguage(lang)) { try { return hljs.highlight(lang, str).value } catch (__) {} } return &amp;#39;&amp;#39; } }) var src = &amp;#39;````c++&amp;#39; + ` #include &amp;lt;iostream&amp;gt; using namespace std; int main(int argc, char** argv) { cout &amp;lt;&amp;lt; &amp;#34;Hello, world&amp;#34; &amp;lt;&amp;lt; endl; return 0; } `+&amp;#39;````&amp;#39; var s = md.</description>
    </item>
    <item>
      <title>nedb</title>
      <link>/web/js/npm/nedb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/nedb/</guid>
      <description>nedb - file-based embedded data store for node.js (4.6M)
/* Demo: nedb - a pure js, mongo-like document database */ const log = console.log; const NeDb = require(&amp;#39;nedb&amp;#39;); var db = new NeDb({ filename: &amp;#39;myne.db&amp;#39;, autoload: true }); function insert_one() { var suite = { name: &amp;#39;api&amp;#39;, desc: &amp;#39;api tests&amp;#39;, sets: [] }; db.insert(suite, (err, doc) =&amp;gt; { log(&amp;#39;inserted&amp;#39;, doc.name, &amp;#39;with ID&amp;#39;, doc._id); }); } function insert_more() { var suites = [ { name: &amp;#39;conv&amp;#39;, desc: &amp;#39;convert tests&amp;#39;, }, { name: &amp;#39;sql&amp;#39;, desc: &amp;#39;sql tests&amp;#39;, }, ]; log(&amp;#39;insert more&amp;#39;); db.</description>
    </item>
    <item>
      <title>Overview</title>
      <link>/web/js/embedded/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/embedded/overview/</guid>
      <description> Duktape QuickJS - supports ES2019/2020 bellard.org - ffmpeg, quickjs, qemu, tinycc, lzexe, &amp;hellip; </description>
    </item>
    <item>
      <title>pywin32</title>
      <link>/core/python/pywin32/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/pywin32/</guid>
      <description>Summary website on github
Online document
Install and Document
pip install pywin32 There is no pywin32 actually (i.e. you can&amp;rsquo;t import pywin32), pywin32 package actually consists of a lot of modules, followings are the most common used
win32con - WIN32 constants that are used by many modules (strange enough that it is not mentioned in any documents) win32api - general win32 APIs win32process - process related APIs win32event - event related APIs more &amp;hellip; misc</description>
    </item>
    <item>
      <title>Saint Jean Pied de Port</title>
      <link>/blogs/camino/sjpdp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/camino/sjpdp/</guid>
      <description>ref: How to get to St.Jean Pied de Port
How to get to SJPDP From Spanish Direction Madrid - Pamplona Flight - Iberia Airlines and Vueling. 1 hour, €23 Bus/ALSA - leave from the Avenida America Bus Station and Barajas Airport Terminal 4 (T4). 5~6hours, €22~30. one ticket, transfer in Zaragoza or Soria. Train/RENFE - 10+ daily trains leave from the Atocha Train Station. 3~4 hours, € 20~30. get to the bus station first in Pamplona to catch a bus to SJPDP.</description>
    </item>
    <item>
      <title>sax</title>
      <link>/web/js/npm/sax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/sax/</guid>
      <description>sax - an evented streaming XML parser in JavaScript.
Alternative: node-expat (4.8M) is libexpat node.js bind.
The Basic #! /usr/bin/env node // test app for // sax-js js stream of xml-sax // const fs = require(&amp;#39;fs&amp;#39;) const readline = require(&amp;#39;readline&amp;#39;) const sax = require(&amp;#39;sax&amp;#39;) const parser = sax.createStream(true, {position: true, lowercase: true}) const log = console.log var ctx = { inText: false, text: &amp;#39;&amp;#39;, append (t) { this.inText = true this.</description>
    </item>
    <item>
      <title>socket.io</title>
      <link>/web/js/npm/socket.io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/socket.io/</guid>
      <description>Socket.IO enables real-time bidirectional event-based communication. It consists of:
a Node.js server (this repository) a Javascript client library for the browser (or a Node.js client) </description>
    </item>
    <item>
      <title>subprocess</title>
      <link>/core/python/subprocess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/subprocess/</guid>
      <description>subprocess is a super-set and is intended to replace
os.system os.spawn* Stdout and Exit Code method return comment description run(args,kwargs) CompletedProcess object since 3.5 run and wait for sub-process to complete, supercede followings call(args,kwargs) exit code obsolete equivalent to run().returncode check_call(args, kwargs) exit code obsolete similar to call(), raise CalledProcessError if exit-code non-zero check_output(args, kwargs) stdout in string obsolete similar to check_call except returning stdout as string instead of exit code Note</description>
    </item>
    <item>
      <title>sysinternals</title>
      <link>/core/c&#43;&#43;/debug/sysinternals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/sysinternals/</guid>
      <description>Reference
sysinternals </description>
    </item>
    <item>
      <title>Roncesvalles</title>
      <link>/blogs/camino/roncesvalles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/camino/roncesvalles/</guid>
      <description>Distance – 25 km/15,5 mi Time – 5h30min.* Walking on asphalt – 14 km/8,6 mi Walking on the road – 3 km/1,8 mi over the pass, a very quiet road, there were one or two cars Ascent – 1400 m Descent – 650 m Difficulty level – 5 out of 5 Highlights Stunning scenery; mountains, green hills, lookouts, patches of the forest if it wasn’t for the steep climb it would be a very pleasant walking day.</description>
    </item>
    <item>
      <title>Pamplona</title>
      <link>/blogs/camino/pamplona/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/camino/pamplona/</guid>
      <description></description>
    </item>
    <item>
      <title>Build qjs</title>
      <link>/web/js/embedded/build/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      <guid>/web/js/embedded/build/</guid>
      <description>Build with offical Makefile on OSX jasonzou@Jasons-MBP quickjs % make mkdir -p .obj .obj/examples .obj/tests clang -g -Wall -MMD -MF .obj/quickjs.check.o.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/quickjs.check.o.d -D_GNU_SOURCE -DCONFIG_VERSION=\&amp;#34;2020-04-12\&amp;#34; -DCONFIG_BIGNUM -DCONFIG_CHECK_JSVALUE -c -o .obj/quickjs.check.o quickjs.c clang -g -Wall -MMD -MF .obj/qjs.check.o.d -Wextra -Wno-sign-compare -Wno-missing-field-initializers -Wundef -Wuninitialized -Wunused -Wno-unused-parameter -Wwrite-strings -Wchar-subscripts -funsigned-char -MMD -MF .obj/qjs.check.o.d -D_GNU_SOURCE -DCONFIG_VERSION=\&amp;#34;2020-04-12\&amp;#34; -DCONFIG_BIGNUM -DCONFIG_CHECK_JSVALUE -c -o .obj/qjs.check.o qjs.c clang -g -Wall -MMD -MF .</description>
    </item>
    <item>
      <title>Visual Studio Code</title>
      <link>/core/misc/vsc/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      <guid>/core/misc/vsc/</guid>
      <description>Common Extensions Class Extension Author Description Debug C/C++ Microsoft language support including IntelliSense and debugging Generic Remote Debugger Marcel J. Kloubert makes it easy to debug code on a remote host by using a generic way. Native Debug WebFreek supports both gdb and lldb. GDB Debug DamianKoper Bash Debug rogalmic A bash debugger GUI frontend based on awesome bashdb scripts (bashdb now included in package). Duktape Debugger HarlodBrenes a Duktape debug client for Visual Studio Code, probably abandoned?</description>
    </item>
    <item>
      <title>ODBC API Notes</title>
      <link>/core/db/odbc/odbc-api-notes/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-api-notes/</guid>
      <description>Return Length Unit of length parameters (both input and output) of ODBC API
if the field is determined to be a string, the unit is character SQLBrowseConnect, SQLConnect, SQLDriverConnect SQLColumns, SQLProcedureColumns, SQLProcedures, SQLSpecialColumns, SQLTables SQLColumnPrivileges, SQLForeignKeys, SQLPrimaryKeys, SQLStatistics, SQLTablePrivileges SQLDataSources SQLDescribeCol SQLExecDirect, SQLPrepare, SQLNativeSql SQLGetCursorName, SQLSetCursorName SQLGetDescRec SQLGetDiagRec SQLGetTypeInfo (return a resultset) otherwise (even the buffer actually holds a string) the unit is byte SQLColAttribute SQLDrivers (description length is in char, attribute length is in byte) SQLGetConnectAttr, SQLSetConnectAttr SQLGetDescField, SQLSetDescField SQLGetDiagField SQLGetInfo: exception: iodbc returns text length in char SQLGetStmtAttr, SQLSetStmtAttr (special: SQL_NTS, SQL_LEN_BINARY_ATTR, SQL_IS_POINTER, SQL_IS_INTEGER, SQL_IS_UINTEGER ) the returned length of text excludes the terminal null character, however the buffer should be able to hold the terminal null, otherwise truncation happens.</description>
    </item>
    <item>
      <title>Some P4 Recipes</title>
      <link>/core/git/p4/p4recipe/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>/core/git/p4/p4recipe/</guid>
      <description>List files that are changed between repo and workspace The standard perforce workflow is to checkout files (in a checklist, and p4 makes them writable), modify them, and commit the changelist. However, sometimes files are changed without notifying perforce, such as edit and save by force. p4 diff usually compares only checked-out files, but -f forces to compare all files.
p4 diff -f //path/... Other useful options are
Options Description -Od list only files that are changed -f diff every file, opened and unopened display option -ds summary, i.</description>
    </item>
    <item>
      <title>Trace</title>
      <link>/core/c&#43;&#43;/debug/trace/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/trace/</guid>
      <description>References
dtrace.org brendangregg.com strace - the linux syscall tracer </description>
    </item>
    <item>
      <title>Resources on Web</title>
      <link>/core/algorithm/resources/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/core/algorithm/resources/</guid>
      <description> javascript-algorighms Rosetta Code DataCamp.com Python-course.eu </description>
    </item>
    <item>
      <title>Tips</title>
      <link>/core/docker/tips/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/core/docker/tips/</guid>
      <description>Access Host Server From Container Once in a while an application runs in the container need to access a service running in the host. Here is an example:
A web-front-end development tool, e.g. @vue/cli runs in a docker container, which launches a monitor server during the front-end composing/debugging. The application needs to get data (e.g. RESTs) from the site, which is usually implemented as a gateway inside the @vue/cli monitor.</description>
    </item>
    <item>
      <title>C&#43;&#43; Pakcage Managers</title>
      <link>/core/c&#43;&#43;/make/cpp_pkg_mgr/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/cpp_pkg_mgr/</guid>
      <description> conan (both local and global servers, written in python) vcpkg (very usefull for Windows and Android, using cmake) cpm pacm spack hunter Ref:
Microsoft C++ Team Blog </description>
    </item>
    <item>
      <title>Build My Hugo Site</title>
      <link>/web/hugo/build-my-hugo-site/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/web/hugo/build-my-hugo-site/</guid>
      <description>What I have already On github, I have these repos, they have been modified locally
kbase - my knowledgebase markdown source jzou2000.github.io - my static site On my local workstation, I have
hugo/alpine docker empty hugo site myhugo theme van developped in above site myhugo some scripts that run hugo to generate the site and express.js to serve it Setup hugo work folder cd $hugo_wks docker run -it --rm -u $(id -u):$(id -g) -v `pwd`:/src klakegg/hugo new site --force .</description>
    </item>
    <item>
      <title>Link Failure on AIX</title>
      <link>/core/c&#43;&#43;/make/aix-static-lib/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/aix-static-lib/</guid>
      <description>AIX linker calls all static constructors in archieves ignoring whether that module is imported or not, which leads to unused modules are forced to be pulled into the target application. This is a different behavior from other compilers.</description>
    </item>
    <item>
      <title>VIm Tips</title>
      <link>/core/misc/vim-tips/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/core/misc/vim-tips/</guid>
      <description>Convert format between recipe action description dos &amp;lt;&amp;ndash;&amp;gt; unix set ff=unix set file-format (unix/dos) and save convert tab/space set et (no)et: expand tabs then run retab to apply convertion System clipboard The system clipboard is named + in vim.
action commandline-mode edit-mode key sequence yank 3 lines from cursor into clipboard 3ya+ &amp;ldquo;+3yy paste after cursor from clipboard &amp;ldquo;+p </description>
    </item>
    <item>
      <title>Using DBX to Debug</title>
      <link>/core/c&#43;&#43;/debug/dbx-aix/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/dbx-aix/</guid>
      <description>A Typical Session Tips (dbx) help disable disable &amp;lt;status-number&amp;gt; disable all The traces or stops corresponding to the given numbers are disabled. The numbers associated with traces and stops can be printed with the &amp;#34;status&amp;#34; command. (dbx) help display &amp;lt;address&amp;gt; , &amp;lt;address&amp;gt; / [&amp;lt;mode&amp;gt;] [&amp;gt; &amp;lt;filename&amp;gt;] &amp;lt;address&amp;gt; / [&amp;lt;count&amp;gt;] [&amp;lt;mode&amp;gt;] [&amp;gt; &amp;lt;filename&amp;gt;] &amp;lt;address&amp;gt; / (&amp;lt;expression&amp;gt;) [&amp;lt;mode&amp;gt;] [&amp;gt; &amp;lt;filename&amp;gt;] &amp;lt;address&amp;gt; = [&amp;lt;mode&amp;gt;] [&amp;gt;&amp;lt;filename&amp;gt;] Display contents of memory starting at the first &amp;lt;address&amp;gt; up to the second &amp;lt;address&amp;gt; or until &amp;lt;count&amp;gt; items are printed.</description>
    </item>
    <item>
      <title>Shared Object Miscelleous</title>
      <link>/core/c&#43;&#43;/debug/shared-object-debug/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/shared-object-debug/</guid>
      <description>It is well known that LD_LIBRARY_PATY is used to specified the search paths for shared objects (dynamically loaded libraries, equivalent to DLL on Windows). However there are other environment varaibles that are also useful.
LD_DEBUG Let&amp;rsquo;s say an application app will load some shared objects. Set LD_DEBUG=help shows the usage of this variable.
export LD_DEBUG=help $ app Valid options for the LD_DEBUG environment variable are: libs display library search paths reloc display relocation processing files display progress for input file symbols display symbol table processing bindings display information about symbol binding versions display version dependencies scopes display scope information all all previous options combined statistics display relocation statistics unused determined unused DSOs help display this help message and exit To direct the debugging output into a file instead of standard output a filename can be specified using the LD_DEBUG_OUTPUT environment variable.</description>
    </item>
    <item>
      <title>Shared Object and soname</title>
      <link>/core/c&#43;&#43;/make/soname/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/soname/</guid>
      <description>Useful command objdump - display information from object files nm - list symbols from object files objdump option description -p,&amp;ndash;private-headers needed for showing SONAME, dependencies, etc -t,&amp;ndash;syms symbols -C,&amp;ndash;demangle demangle C++ names SONAME SONAME is the &amp;rsquo;logical&amp;rsquo; name of a shared object, which is saved in the target binary when it is linked with a .so file, i.e. the linker use libname.so to resolve -lname and write its soname in the target file.</description>
    </item>
    <item>
      <title>Build SQLite And SQLiteODBC From Source</title>
      <link>/core/db/sqlite/build-sqlite/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/sqlite/build-sqlite/</guid>
      <description>Build SQLite Get source and show configurations
tar xzf sqlite.tar.gz # source at ./sqlite sqlite/configure -h jzou@debian9:~/pkg/sqlite.build/m32$ ../../sqlite/configure -h `configure&amp;#39; configures sqlite 3.29.0 to adapt to many kinds of systems. Usage: ../../sqlite/configure [OPTION]... [VAR=VALUE]... To assign environment variables (e.g., CC, CFLAGS...), specify them as VAR=VALUE. See below for descriptions of some of the useful variables. Defaults for the options are specified in brackets. Configuration: -h, --help display this help and exit --help=short display options specific to this package --help=recursive display the short help of all the included packages -V, --version display version information and exit -q, --quiet, --silent do not print `checking .</description>
    </item>
    <item>
      <title>Debugging on OSX</title>
      <link>/core/c&#43;&#43;/debug/osx-debug/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/osx-debug/</guid>
      <description>SIP (System Integrity Protection) SIP is introduced in OS X EI Capitan. Turn it off to debug an app. Turn off SIP
Note: On some old version of OSX (e.g. 10.9) extra command is required:
$ sudo /usr/sbin/DevToolsSecurity --enable Password: Developer mode is now enabled. </description>
    </item>
    <item>
      <title>Debug Python Script With Pdb</title>
      <link>/core/python/debug-with-pdb/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/core/python/debug-with-pdb/</guid>
      <description>Just like gdb is still used for C/C++ programmer, pdb is still useful although we have many IDE tools like pycharm or vs-code. Gdb/pdb sometimes is the only choice in on-site environment when more advanced tools are not available or allowed.
Enable/Start pdb python -m pdb your_script.py Common Commands Command Description c(ont(inue)) continue w(here) print stack trace (reversed) b(reak) [fln|func[,condition]] set break point, fln=file:line, break without args lists all breakpoints tbreak &amp;hellip; temporary break cl(ear) [fln|bp#]&amp;hellip; clear breakpoint, all without args s(tep) step in n(ext) next unt(il) until line or out of current frame r(eturn) until the current frame p expr print expr pp expr print using pprint ** See full-list below.</description>
    </item>
    <item>
      <title>BinUtils</title>
      <link>/core/linux/binutils/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/core/linux/binutils/</guid>
      <description>sourceware.org
Name Description ar Create, modify, and extract from archives nm List symbols from object files objcopy Copy and translate object files objdump Display information from object files ranlib Generate index to archive contents size List section sizes and total size strings List printable strings from files strip Discard symbols c++filt Filter to demangle encoded C++ symbols cxxfilt MS-DOS name for c++filt addr2line Convert addresses to file and line windmc Generator for Windows message resources windres Manipulate Windows resources dlltool Create files needed to build and use DLLs readelf Display the contents of ELF format files elfedit Update ELF header and property of ELF files </description>
    </item>
    <item>
      <title>C&#43;&#43; Name Demangling</title>
      <link>/core/c&#43;&#43;/misc/c&#43;&#43;-demangling/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/c&#43;&#43;-demangling/</guid>
      <description>c++filt
Usage c++filt symbol nm libmy.a | c++filt | less </description>
    </item>
    <item>
      <title>Java - Load A Class and/or Overload A Class On the Fly</title>
      <link>/core/java/load-overload/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/core/java/load-overload/</guid>
      <description>Loading a class on-the-fly (or at runtime) is required in the following scenarios:
plug-in architecture - the function is offered by external modules. supplement or replace existing functions In this example, an application has several classes, an alternative module contains more classes that will replace or extend the application existing classes, depends on the order of searching path.
File Structure expkg/ # root of the project src/ # source of the app ex/overload/ # the package Factory.</description>
    </item>
    <item>
      <title>Template and Theme</title>
      <link>/web/hugo/hugo-theme/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/web/hugo/hugo-theme/</guid>
      <description>Search Order /layouts/section/kind-baseof.html /layouts/kind/baseof.html /layouts/section/baseof.html /layouts/_default/kind-baseof.html /layout/_default/baseof.html References Highlight: Chroma Style Gallery </description>
    </item>
    <item>
      <title>Build A Java App</title>
      <link>/core/java/build/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/java/build/</guid>
      <description>Build Java App The Simplest Case # package path.to # class MyClass # build output path/to/MyClass.class javac path/to/MyClass.java # run java path.to.MyClass </description>
    </item>
    <item>
      <title>Building Your Own Plugin Framework</title>
      <link>/core/c&#43;&#43;/plugin-framework/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/plugin-framework/</guid>
      <description>source Dr.Dobb&amp;rsquo;s Building Your Own Plugin Framework
Building Your Own Plugin Framework: Part 1 By Gigi Sayfan, November 25, 2007
This article is the first in a series of articles that discuss the architecture, development, and deployment of a C/C++ cross-platform plugin framework. This first installment explores the terrain, surveys (briefly) several existing plugin/component libraries, delves into the binary compatibility problem, and presents some desirable properties of the solution.
Subsequent articles showcase an industrial strength plugin framework that you can use on Windows, Linux, Mac OS X, and easily port to other operating systems.</description>
    </item>
    <item>
      <title>ODBC Attributes</title>
      <link>/core/db/odbc/odbc-attr/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-attr/</guid>
      <description>Environ Attributes Attribute Version Type Description SQL_ATTR_CONNECTION_POOLING 3.8 SQLUINTEGER SQL_CP_OFF (default)SQL_CP_ONE_PER_DRIVERSQL_CP_ONE_PER_HENVSQL_CP_DRIVER_AWARE SQL_ATTR_CP_MATCH 3.0 SQLUINTEGER SQL_CP_STRICT_MATCH (default)SQL_CP_RELAXED_MATCH SQL_ATTR_ODBC_VERSION 3.0 SQLUINTEGER SQL_OV_ODBC3_80SQL_OV_ODBC3 SQL_OV_ODBC2 SQL_ATTR_OUTPUT_NTS 3.0 SQLUINTEGER SQL_TRUE (default) Connect Attributes Attribute Version Type Description SQL_ATTR_ACCESS_MODE 1.0 SQLUINTEGER SQL_MODE_READ_WRITE (default)SQL_MODE_READ_ONLY SQL_ATTR_ASYNC_DBC_EVENT 3.3 SQLPOINTER event handler SQL_ATTR_ASYNC_DBC_FUNCTIONS_ENABLE 3.8 SQLUINTEGER SQL_ASYNC_DBC_ENABLE_OFF (default)SQL_ASYNC_DBC_ENABLE_ON SQL_ATTR_ASYNC_DBC_PCALLBACK 3.8 SQLPOINTER context structure SQL_ATTR_ASYNC_DBC_PCONTEXT 3.3 SQLPOINTER context structure SQL_ATTR_ASYNC_ENABLE 3.0 SQLULEN SQL_ASYNC_ENABLE_OFF (default)SQL_ASYNC_ENABLE_ON SQL_ATTR_AUTO_IPD 3.0 SQLUINTEGER SQL_TRUESQL_FALSE SQL_ATTR_AUTOCOMMIT 1.0 SQLUINTEGER SQL_AUTOCOMMIT_OFFSQL_AUTOCOMMIT_ON SQL_ATTR_CONNECTION_DEAD 3.</description>
    </item>
    <item>
      <title>Sqlite System Tables</title>
      <link>/core/db/sqlite/sqlite-sys-table/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/sqlite/sqlite-sys-table/</guid>
      <description>SQLite Misc system tables sqlite_master sqlite_sequence sqlite_stat1 sqlite_master Master listing of all database objects in the database and the SQL used to create each object.
Column Description type type of object: table, index, trigger, view name name of object tbl_name table name associated with rootpage Root page sql DDL sqlite_sequence Lists the last sequence number used for the AUTOINCREMENT column in a table.
Column Description name table name associated with the AUTOINCREMENT column seq the last sequence number used sqlite_state1 This table is created by the ANALYZE command to store statistical information about the tables and indexes analyzed.</description>
    </item>
    <item>
      <title>Catalog Functions - ODBC vs JDBC</title>
      <link>/core/db/odbc/catalog/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/catalog/</guid>
      <description>Catalog Functions - odbc vs jdbc Catalog ODBC JDBC Comment Schemas getSchemas Tables SQLTables getTables Columns SQLColumns getTables PrimaryKeys SQLPrimaryKeys getTables ForeignKeys SQLForeignKeys getTables Catalogs ResultSet getCatalogs()
TABLE_CAT Schemas ResultSet getSchemas()
TABLE_SCHEM TABLE_CATALOG TableTypes ResultSet getTableTypes()
TABLE_TYPE type values
TABLE VIEW SYSTEM TABLE GLOBAL TEMPORARY LOCAL TEMPORARY ALIAS SYNONYM Tables SQLTables getTables Input catalog catlog schema schemaPattern table tablePattern tableTypeCSV types[] Output TABLE_CAT * TABLE_SCHEM * TABLE_NAME * TABLE_TYPE * REMARKS * TYPE_CAT TYPE_SCHEMA TYPE_NAME SELF_REFERENCING_COL_NAME REF_GENERATION Columns SQLColumns getColumns Input catalog catlog schema schemaPattern table tablePattern column columnPattern Output TABLE_CAT * TABLE_SCHEM * TABLE_NAME * COLUMN_NAME * DATA_TYPE * TYPE_NAME * COLUMN_SIZE * BUFFER_LENGTH * DECIMAL_DIGITS * NUM_PREC_RADIX * NULLABLE * REMARKS * COLUMN_DEF * SQL_DATA_TYPE * SQL_DATETIME_SUB * CHAR_OCTET_LENGTH * ORDINAL_POSITION * IS_NULLABLE * SCOPE_CATALOG SCOPE_SCHEMA SCOPE_TABLE SOURCE_DATA_TYPE IS_AUTOINCREMENT IS_GENERATEDCOLUMN PrimaryKeys SQLPrimaryKeys getPrimaryKeys Input catalog catlog schema schemaPattern table tablePattern Output TABLE_CAT * TABLE_SCHEM * TABLE_NAME * COLUMN_NAME * KEY_SEQ * PK_NAME * ForeignKeys SQLForeignKeys getCrossReference getImportedKeys getExportedKeys Input pk_catalog * catlog * pk_schema * schema * pk_table * table * fk_catalogtable * fk_schema * fk_table * Output PKTABLE_CAT * * PKTABLE_SCHEM * * PKTABLE_NAME * * PKCOLUMN_NAME * FKTABLE_CAT * * FKTABLE_SCHEM * * FKTABLE_NAME * * FKCOLUMN_NAME * * KEY_SEQ * * UPDATE_RULE * * DELETE_RULE * * FK_NAME * * PK_NAME * * DEFERRABILITY * * ODBC Catalog Function Arguments All ODBC catalog functions accept name filters on their resultset.</description>
    </item>
    <item>
      <title>Debugger</title>
      <link>/core/c&#43;&#43;/debug/debugger/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/debugger/</guid>
      <description>IBM dbx Reference IBM Knowledge Center: Using the dbx debug program DBX Howto Guide Tutorial on Dbx (AIX) Syntax dbx [options] objectFile [coreFile] -a processID -B debugFile, alternative debug file -c commandFile, run dbx commands before reading stdin -I directory, directories for searching source files -E debugEnvironment -p oldPath=newPath:... -u -F , turn off lazy read mode -L , keep linkage symbols -r , run object file immediately and exit dbx if it ends successfully -x , (fortran) prevents from stripping trailing underscore -v , skip the validity checking -C coreFile Subcommands use &amp;ldquo;help&amp;rdquo; to list all subcommands use &amp;ldquo;help command&amp;rdquo; to get usage details This is just a list of most common subcommands</description>
    </item>
    <item>
      <title>Generating SSH Keys and Copy Public Keys</title>
      <link>/core/security/ssh-key/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/ssh-key/</guid>
      <description>Host/user alias Edit $HOME/.ssh/config
cat $HOME/.ssh/config host my_alias # this is the alias name hostname some.host.remote # real host name user john # optional, otherwise use john@my_alias Create ssh-key ssh-keygen ssh-keygen generates a pair of RSA key (private id_rsa and public id_rsa.pub) at $HOME/.ssh
Copy the public key file to remote host (john@host.remote) ssh-copy-id -i ~/.ssh/id_rsa.pub john@host.remote The command add an entry in ~/.ssh/authorized_keys on the remote host. After the public key is added, you can ssh login without password.</description>
    </item>
    <item>
      <title>JDBC Data Types</title>
      <link>/core/db/jdbc/jdbc-data-type/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/jdbc/jdbc-data-type/</guid>
      <description>JDBC Data Types java.sql.Types name value ARRAY 2003 BIGINT -5 BINARY -2 BIT -7 BLOB 2004 BOOLEAN 16 CHAR 1 CLOB 2005 DATALINK 70 DATE 91 DECIMAL 3 DISTINCT 2001 DOUBLE 8 FLOAT 6 INTEGER 4 JAVA_OBJECT 2000 LONGNVARCHAR -16 LONGVARBINARY -4 LONGVARCHAR -1 NCHAR -15 NCLOB 2011 NULL 0 NUMERIC 2 NVARCHAR -9 OTHER 1111 REAL 7 REF 2006 ROWID -8 SMALLINT 5 SQLXML 2009 STRUCT 2002 TIME 92 TIMESTAMP 93 TINYINT -6 VARBINARY -3 VARCHAR 12 </description>
    </item>
    <item>
      <title>Keyboard Shortcuts</title>
      <link>/core/misc/shortcuts/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/misc/shortcuts/</guid>
      <description>Eclipse Category Strokes Purpose Debug F11 start to debug F5 step in F6 step over F7 step out Ctrl-R run to line Shift-Ctrl-B toggle breakpoint F8 continue Edit Ctrl-_ toggle split editor horizontal Ctrl-{ toggle split editor vertical Ctrl-/ toggle comment VSC Category Shortcut Ation Edit Ctrl-]/[ indent/outdent Shift-Ctrl-\ jump to matching bracket Ctrl-K Ctrl-C/U add/remove line comment Ctrl-/ toggle line comment Navigate Alt-Ctrl&amp;ndash; go back Shift-Ctrl-\ pair brackets Ctrl-G go to line&amp;hellip; Ctrl-T show all symbols Ctrl-P go to file&amp;hellip; Shift-Ctrl-O go to symbol&amp;hellip; Ctrl-K Ctrl-J/K/L bookmark prev/toggle/next Alt-Ctrl&amp;ndash;+ go forward F12 go to definition Alt-F12 peek definition Shift-F12 show references F2 rename symbol Ctrl-TAB switch between tabs Search Layout Ctrl-\ split editor Shift-Alt-1 toggle editor layout (v/h) Shift-Ctrl-V toggle markdown preview Ctrl-` show integrated terminal Ctrl-P quick open Shfit-Ctrl-P show command palette Shift-Ctrl-N new window Debug F9 toggle breakpoint F5 start/continue Shift-F5 stop F11/Shift-F11 step in/out F10 step over Windows 10 Terminal Category Shortcut Ation Navigate Shift-Ctrl-[n] open new tab of type n=1,2,3,&amp;hellip; Ctrl-TAB switch between tabs Alt-arrow change focus in panes Layout Shift-Alt-- split horizontally Shift-Alt-+ split vertically Shift-Alt-arrow change pane size Shift-Alt-D add new pane </description>
    </item>
    <item>
      <title>MongoDB Cheatsheet</title>
      <link>/core/db/nosql/mongo/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/nosql/mongo/</guid>
      <description>Mongodb Launch server mongod --dbpath /path/to/data/folder --bind_ip_all client mongo [host[:port]/]dbname </description>
    </item>
    <item>
      <title>ODBC API Cheatsheet</title>
      <link>/core/db/odbc/odbc-api/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-api/</guid>
      <description>ODBC API Unicode Version Description SQLAllocConnect 1.0 deprecated by SQLAllocHandle SQLAllocEnv 1.0 deprecated by SQLAllocHandle SQLAllocHandle 3.0 allocates an environment, connection, statement, or descriptor handle. SQLAllocStmt 1.0 deprecated by SQLAllocHandle SQLBindCol 1.0 binds application data buffers to columns in the result set. SQLBindParameter 2.0 binds a buffer to a parameter marker in an SQL statement SQLBrowseConnect * 1.0 supports an iterative method of discovering and enumerating the attributes and attribute values required to connect to a data source SQLBulkOperations 3.</description>
    </item>
    <item>
      <title>ODBC Data Types</title>
      <link>/core/db/odbc/odbc-data-type/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-data-type/</guid>
      <description>ODBC Data Types SQL Types name value SQL_CHAR 1 SQL_VARCHAR 12 SQL_LONGVARCHAR -1 SQL_WCHAR -8 SQL_WVARCHAR -9 SQL_WLONGVARCHAR -10 SQL_DECIMAL 3 SQL_NUMERIC 2 SQL_BIT -7 SQL_TINYINT -6 SQL_SMALLINT 5 SQL_INTEGER 4 SQL_BIGINT -5 SQL_FLOAT 6 SQL_DOUBLE 8 SQL_REAL 7 SQL_BINARY -2 SQL_VARBINARY -3 SQL_LONGVARBINARY -4 SQL_DATE 9 SQL_TIME 10 SQL_TIMESTAMP 11 SQL_TYPE_DATE 91 SQL_TYPE_TIME 92 SQL_TYPE_TIMESTAMP 93 SQL_GUID -11 SQL_INTERVAL_YEAR 101 SQL_INTERVAL_MONTH 102 SQL_INTERVAL_DAY 103 SQL_INTERVAL_HOUR 104 SQL_INTERVAL_MINUTE 105 SQL_INTERVAL_SECOND 106 SQL_INTERVAL_YEAR_TO_MONTH 107 SQL_INTERVAL_DAY_TO_HOUR 108 SQL_INTERVAL_DAY_TO_MINUTE 109 SQL_INTERVAL_DAY_TO_SECOND 110 SQL_INTERVAL_HOUR_TO_MINUTE 111 SQL_INTERVAL_HOUR_TO_SECOND 112 SQL_INTERVAL_MINUTE_TO_SECOND 113 SQL C Types name value SQL_C_CHAR 1 SQL_C_WCHAR -8 SQL_C_NUMERIC 2 SQL_C_BIT -7 SQL_C_TINYINT -6 SQL_C_STINYINT -26 SQL_C_UTINYINT -28 SQL_C_SHORT 5 SQL_C_SSHORT -15 SQL_C_USHORT -17 SQL_C_LONG 4 SQL_C_SLONG -16 SQL_C_ULONG -18 SQL_C_SBIGINT -25 SQL_C_UBIGINT -27 SQL_C_FLOAT 7 SQL_C_DOUBLE 8 SQL_C_BINARY -2 SQL_C_DATE 9 SQL_C_TIME 10 SQL_C_TIMESTAMP 11 SQL_C_TYPE_DATE 91 SQL_C_TYPE_TIME 92 SQL_C_TYPE_TIMESTAMP 93 SQL_C_GUID -11 SQL_C_INTERVAL_YEAR 101 SQL_C_INTERVAL_MONTH 102 SQL_C_INTERVAL_DAY 103 SQL_C_INTERVAL_HOUR 104 SQL_C_INTERVAL_MINUTE 105 SQL_C_INTERVAL_SECOND 106 SQL_C_INTERVAL_YEAR_TO_MONTH 107 SQL_C_INTERVAL_DAY_TO_HOUR 108 SQL_C_INTERVAL_DAY_TO_MINUTE 109 SQL_C_INTERVAL_DAY_TO_SECOND 110 SQL_C_INTERVAL_HOUR_TO_MINUTE 111 SQL_C_INTERVAL_HOUR_TO_SECOND 112 SQL_C_INTERVAL_MINUTE_TO_SECOND 113 C Type Identifier vs C Types C type identifier ODBC C typedef C type SQL_C_CHAR SQLCHAR * unsigned char * SQL_C_WCHAR SQLWCHAR * wchar_t * SQL_C_SSHORT SQLSMALLINT short int SQL_C_USHORT SQLUSMALLINT unsigned short int SQL_C_SLONG SQLINTEGER long int SQL_C_ULONG SQLUINTEGER unsigned long int SQL_C_FLOAT SQLREAL float SQL_C_DOUBLE SQLDOUBLE, SQLFLOAT double SQL_C_BIT SQLCHAR unsigned char SQL_C_STINYINT SQLSCHAR signed char SQL_C_UTINYINT SQLCHAR unsigned char SQL_C_SBIGINT SQLBIGINT _int64[h] SQL_C_UBIGINT SQLUBIGINT unsigned _int64[h] SQL_C_BINARY SQLCHAR * unsigned char * SQL_C_BOOKMARK BOOKMARK unsigned long int[d] SQL_C_VARBOOKMARK SQLCHAR * unsigned char * C structures Note: size on Windows</description>
    </item>
    <item>
      <title>ODBC Driver Manager</title>
      <link>/core/db/odbc/odbc-driver-manager/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-driver-manager/</guid>
      <description>Enable DM/Driver log unixODBC odbcinst.ini
[ODBC] Trace = yes TraceFile = /path/to/traceFile.log iODBC odbc.ini
[ODBC] Trace = 1 TraceFile = /path/to/traceFile.log # optional Debug = 1 DebugFile = /path/to/debugFile.log Simba Driver simab.${drier}.ini
[Driver] LogLevel=6 LogPath=/path # file name is, e.g. XM_driver.log EnableTransactions=0 Log Level
disable fatal - very severe error events that might crash errors - driver can still run warnings - potentially harmful situations info - general information debug - details for debugging trace - everything Detected DM from Simba driver log Here is the first few lines when the loglevel is 4+</description>
    </item>
    <item>
      <title>STL - Iterator</title>
      <link>/core/c&#43;&#43;/stl/stl-iterator/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/stl/stl-iterator/</guid>
      <description>std::map::iterator iterator vs const_iterator on all std containers on minority platforms? (e.g. solaris, aix, and hpux)</description>
    </item>
    <item>
      <title>Trip To Morocco</title>
      <link>/blogs/travels/morocco/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      <guid>/blogs/travels/morocco/</guid>
      <description>Tue, May 1 Flight to London Flight From To Duration WestJet 708 YVR 11:00am M YYZ 6:32pm T3 4h32m WestJet 3 YYZ 8:30pm T3 LGW 850am N 7h20m $855.86 = (427.93 + 58.93) * 2 itenerary #7334194776834 WestJet #TCHGWX Wed, May 2 Citadines Trafalgar Square London 18/21 Northumberland Avenue, London, WC2N 5EA check-in/out: 3pm May 2 / 11am May 6 C$1,117.92 = 279.48 * 4 additional clean fee: GBP 15-25 #7334196466591 From Gatwick Airport By Taxi: M23/A23 28.</description>
    </item>
    <item>
      <title>Some Tips of Express.js</title>
      <link>/web/js/node/express-tips/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/node/express-tips/</guid>
      <description>Parsing POST data Start from Express 4.16 app.use(express.json()) app.use(express.urlencode({extended: true})) // app.use(express.multipart()) // security concerns? // URL encoding // POST: name=foo&amp;amp;color=red // or JSON encoding // POST: {&amp;#34;name&amp;#34;: &amp;#34;foo&amp;#34;, &amp;#34;color&amp;#34;: &amp;#34;red&amp;#34;} app.post(&amp;#39;/url&amp;#39;, (req, res) =&amp;gt; { // your POST data is req.body var name = req.body.name })
Express 4.0 to 4.15 npm install --save body-parser and var body_parser = require(&amp;#39;body-parser&amp;#39;) app.use(body_parser.json()) app.use(body_parser.urlencode({extended: true}))</description>
    </item>
    <item>
      <title>A 6 Part Introductory OpenSSL Tutorial</title>
      <link>/core/security/openssl-tutorial/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/openssl-tutorial/</guid>
      <description>OpenSSL is among the most popular cryptography libraries. It is most commonly used to implement the Secure Sockets Layer and Transport Layer Security (SSL and TLS) protocols to ensure secure communications between computers. In recent years, SSL has become basically obsolete since TLS offers a higher level of security, but some people have gotten into the habit of referring to both protocols as “SSL.”
Cryptography is tricky business, and OpenSSL has too many features to cover in one article, but this OpenSSL tutorial will help you get started creating keys and certificates.</description>
    </item>
    <item>
      <title>OpenSSL Cookbook</title>
      <link>/core/security/openssl-cookbook/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/openssl-cookbook/</guid>
      <description>1 OpenSSL OpenSSL is an open source project that consists of a cryptographic library and an SSL/TLS toolkit. From the project’s web site:
The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured, and Open Source toolkit implementing the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols as well as a full-strength general purpose cryptography library. The project is managed by a worldwide community of volunteers that use the Internet to communicate, plan, and develop the OpenSSL toolkit and its related documentation.</description>
    </item>
    <item>
      <title>OpenSSL Essentials: Working with SSL Certificates, Private Keys and CSRs</title>
      <link>/core/security/openssl-cert-key-csr/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>/core/security/openssl-cert-key-csr/</guid>
      <description>source
Introduction OpenSSL is a versatile command line tool that can be used for a large variety of tasks related to Public Key Infrastructure (PKI) and HTTPS (HTTP over TLS). This cheat sheet style guide provides a quick reference to OpenSSL commands that are useful in common, everyday scenarios. This includes OpenSSL examples of generating private keys, certificate signing requests, and certificate format conversion. It does not cover all of the uses of OpenSSL.</description>
    </item>
    <item>
      <title>Access DOM Element In External Resource</title>
      <link>/web/js/externl-dom/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/externl-dom/</guid>
      <description>Use Case How do we access DOM elements in external resource, such as &amp;lt;object&amp;gt; or &amp;lt;iframe&amp;gt;?
&amp;lt;iframe id=&amp;#34;my-frame&amp;#34; src=&amp;#34;other-page.html&amp;#34;&amp;gt; &amp;lt;/iframe&amp;gt; &amp;lt;object id=&amp;#34;my-obj&amp;#34; type=&amp;#34;image/svg+xml&amp;#34; data=&amp;#34;my-url.svg&amp;#34;&amp;gt; &amp;lt;/object&amp;gt; &amp;lt;div&amp;gt;normal DOM elements&amp;lt;/div&amp;gt; For example, following is the external my-url.svg
&amp;lt;svg xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34;&amp;gt; &amp;lt;rect id=&amp;#34;r1&amp;#34; x=&amp;#34;10&amp;#34; y=&amp;#34;10&amp;#34; width=&amp;#34;300&amp;#34; height=&amp;#34;200&amp;#34; fill=&amp;#34;yellow&amp;#34;/&amp;gt; &amp;lt;/svg&amp;gt; The anwser is the property contentDocument of the object/iframe element.
var svg_doc = document.getElementById(&amp;#39;my-obj&amp;#39;).contentDocument var rect = svg_doc.getElementById(&amp;#39;r1&amp;#39;) </description>
    </item>
    <item>
      <title>Push Exercise</title>
      <link>/core/git/exercise/push-ex/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/core/git/exercise/push-ex/</guid>
      <description>Plan export EX=~/codex/git export REPO=$EX/repo mkdir -p $REPO Setup Root Repo $ cd $REPO $ mkdir adam $ cd adam $ git init --bare $ cd $EX $ git clone $REPO/adam $ # add something and make 1st commit $ cat &amp;gt; readme $ mkdir books $ cat &amp;gt; books/chap1 $ git add readme books $ git commit -m &amp;#39;fist commit&amp;#39; $ # push to repo $ git push Create A clone of Root Repo $ cd $REPO $ git clone adam dave --bare $ cd dave $ git log commit eb9ad62b26faf73c024e5c15b0b39bf68d82f7be Author: Jason Zou &amp;lt;jzou2000@gmail.</description>
    </item>
    <item>
      <title>Using Static and Shared Libraries Across Platforms</title>
      <link>/core/c&#43;&#43;/make/libs-across-platforms/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/libs-across-platforms/</guid>
      <description>Using Static and Shared Libraries Across Platforms
linker (ld) staticlly or dynamically hpux
-a search whether shared or archive libraries are searched with -l option search=archive|shared|archive_shared|shared_archive|default pass to aCC -Wl,-a,archive -lmy_archive -Wl,-a,shared_archive -b create a shared library rather than a normal executable file osx
-dylib produce a mach-o shared library with file type MH_DYLIB -search_dylibs_first tools ldd linux,solaris,hupx,aix otool osx otool -L file </description>
    </item>
    <item>
      <title>Build 32bit Applications on 64bit Debian</title>
      <link>/core/c&#43;&#43;/make/build-m32/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/build-m32/</guid>
      <description>On 64bit Debian system, default gcc/g++ development packages support developing 64bit application only. You need 32bit libs to build applications in 32bit.
sudo apt-get install g++-multilib Reading package lists... Done Building dependency tree Reading state information... Done The following additional packages will be installed: g++-6-multilib gcc-6-multilib gcc-multilib lib32asan3 lib32atomic1 lib32cilkrts5 lib32gcc-6-dev lib32gcc1 lib32gomp1 lib32itm1 lib32mpx2 lib32quadmath0 lib32stdc++-6-dev lib32stdc++6 lib32ubsan0 libc-dev-bin libc6 libc6-dbg libc6-dev libc6-dev-i386 libc6-dev-x32 libc6-i386 libc6-x32 libx32asan3 libx32atomic1 libx32cilkrts5 libx32gcc-6-dev libx32gcc1 libx32gomp1 libx32itm1 libx32quadmath0 libx32stdc++-6-dev libx32stdc++6 libx32ubsan0 linux-libc-dev Suggested packages: lib32stdc++6-6-dbg libx32stdc++6-6-dbg glibc-doc The following NEW packages will be installed: g++-6-multilib g++-multilib gcc-6-multilib gcc-multilib lib32asan3 lib32atomic1 lib32cilkrts5 lib32gcc-6-dev lib32gcc1 lib32gomp1 lib32itm1 lib32mpx2 lib32quadmath0 lib32stdc++-6-dev lib32stdc++6 lib32ubsan0 libc6-dev-i386 libc6-dev-x32 libc6-i386 libc6-x32 libx32asan3 libx32atomic1 libx32cilkrts5 libx32gcc-6-dev libx32gcc1 libx32gomp1 libx32itm1 libx32quadmath0 libx32stdc++-6-dev libx32stdc++6 libx32ubsan0 The following packages will be upgraded: libc-dev-bin libc6 libc6-dbg libc6-dev linux-libc-dev 5 upgraded, 31 newly installed, 0 to remove and 182 not upgraded.</description>
    </item>
    <item>
      <title>Setup Git Upstream</title>
      <link>/core/git/branch/up-stream/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/core/git/branch/up-stream/</guid>
      <description>Create An Upstream Repo There are two types of repositories:
bare: repositories do not have a working copy and you can push to them, for example, repositories that you get in github. Bare repositories work as upstreams. non-bare: repositories that you are working on, with a working copy. Repositories that you clone or init are non-bare by default. You can&amp;rsquo;t (by default) and shouldn&amp;rsquo;t push to non-bare repos. Note: technically, you can push to a non-bare repo (see below), but that is not a common practice.</description>
    </item>
    <item>
      <title>Package a node.js application into a single binary</title>
      <link>/web/js/node/node-pkg/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/web/js/node/node-pkg/</guid>
      <description>install npm install pkg -g pkg --help usage cd project pkg -o output-file -t ${nodev}-linux,${nodev}-win entry.js using assets </description>
    </item>
    <item>
      <title></title>
      <link>/core/rosetta/threads/pool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/threads/pool/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>/core/rosetta/threads/thread/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/threads/thread/</guid>
      <description></description>
    </item>
    <item>
      <title>.gitignore</title>
      <link>/core/git/gitignore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/gitignore/</guid>
      <description># this is a comment # ignore build outputs *.o *.so *.a *.obj *.pdb *.dll *.lib # anything under folders anywhere that start with test and build test*/ build*/ # anything start with dot, anywhere .* blank lines are ignored comment: first non-white char is # tailing whites are ignored unless quoted by backslash \ optional prefix ! neglect pattern slash / is used as path separator a patten matches both files and directories, unless it ends with /, which mathces directory only.</description>
    </item>
    <item>
      <title>200&#43; proverbs</title>
      <link>/blogs/english/proverbs-of-day/200/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/proverbs-of-day/200/</guid>
      <description>source
A bad workman always blames his tools.
This proverb is used when someone blames the quality of their equipment or other external factors when they perform a task poorly.
Example: X: The food isn’t cooked well because the oven is not functioning well. Y: Well, it’s the case of a bad workman blaming his tools.
A bird in hand is worth two in the bush.
Certainty of having something in hand is better than mere probability of having even more things.</description>
    </item>
    <item>
      <title>2023-04-26</title>
      <link>/blogs/english/words-of-day/2023-04-26/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/words-of-day/2023-04-26/</guid>
      <description>exploid v. 剥削，压榨；利用（……为自己谋利）；运用，发挥；开发，开拓 exploid markets 开拓市场 ; 开辟市场 ; 开采市场 As computer systems become even more sophisticated, so too do the methods of those who exploit the technology. Spokeswoman for the International Organization</description>
    </item>
    <item>
      <title>2023-08-24</title>
      <link>/blogs/english/words-of-day/2023-08-24/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/words-of-day/2023-08-24/</guid>
      <description>premise n. 前提，假设；（企业或机构使用的）房屋及土地（premises）；上述各项 The premise is that schools will work harder to improve if they must compete. 前提是各学校如必须竞争就会更加努力改</description>
    </item>
    <item>
      <title>2023-09</title>
      <link>/blogs/english/words-of-day/2023-09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/words-of-day/2023-09/</guid>
      <description>9/12 privilege a right reserved exclusively by a particular person or group (especially a hereditary or official right) 特权 Whilst England remains, and the crown continues, the privilege shall not lapse. 只要英国还在，只要国王还在，这个特权就不会取消。 Education should be a universal right and not a privilege. 教育应当</description>
    </item>
    <item>
      <title>2023-10</title>
      <link>/blogs/english/words-of-day/2023-10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/words-of-day/2023-10/</guid>
      <description>10/05 immersion n. sinking until covered completely with water the act of wetting something by submerging it 浸没，浸泡 The wood had become swollen from prolonged immersion. 这块木头由于长时间浸泡而变大了。 Immersion in cold water resulted in rapid loss of heat. 浸泡在冷水中导致热量迅速散失</description>
    </item>
    <item>
      <title>2023-11</title>
      <link>/blogs/english/words-of-day/2023-11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/words-of-day/2023-11/</guid>
      <description>Fair Enough 有道理；说得对；敢情好 &amp;hellip; it could not be better 再好不过了 there is no word 无法形容 fair enough 好极了 &amp;hellip; 有道理 &amp;hellip; beat around the bush 拐弯抹角，说话绕圈子 fair enough 有道理，说得对 give it to someone straight</description>
    </item>
    <item>
      <title>50&#43; English Proverbs with Meanings, Examples and Pronunciation</title>
      <link>/blogs/english/proverbs-of-day/fluent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/proverbs-of-day/fluent/</guid>
      <description>source: FluentU
The grass is always greener on the other side of the fence. Don’t judge a book by its cover. Strike while the iron is hot. Too many cooks spoil the broth. You can’t have your cake and eat it too. Many hands make light work. When in Rome, do as the Romans do. Don’t cross the bridge until you come to it. Honesty is the best policy. Practice makes perfect.</description>
    </item>
    <item>
      <title>A Simple Task</title>
      <link>/core/jenkins/pipeline/simple-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/simple-task/</guid>
      <description>pipeline dummy task
/* This is a simple task that * accepts parameters and show them: lable/string, debug/bool * customerize build description: by parameter description * last for a while (by parameter second) to simulate a real task * return succeed or fail (by parameter TASKFAILS) It is used to be called in sequence or parallel to fine tune different behaviors */ properties([ parameters( [ string(name: &amp;#39;label&amp;#39;, defaultValue: &amp;#39;head&amp;#39;, description: &amp;#39;proudct label&amp;#39;), string(name: &amp;#39;description&amp;#39;, description: &amp;#39;build description&amp;#39;, trim: true), string(name: &amp;#39;sleep&amp;#39;, defaultValue: &amp;#39;5&amp;#39;, description: &amp;#39;seconds to sleep&amp;#39;), booleanParam(name: &amp;#39;debug&amp;#39;, description: &amp;#39;debug build&amp;#39;), booleanParam(name: &amp;#39;TASKFAILS&amp;#39;, description: &amp;#39;set task fail&amp;#39;), ] ) ]) if (params.</description>
    </item>
    <item>
      <title>Add a Submodule</title>
      <link>/core/git/submodule/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/submodule/add/</guid>
      <description></description>
    </item>
    <item>
      <title>Add Essential Packages to a Barebone Docker Image</title>
      <link>/core/docker/package-size-barebone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/package-size-barebone/</guid>
      <description>ubuntu size/virtual
barebone, 0/77.8 apt update, 45.7/123 vim, 105/183 file, 113/190 less, 113/190 gdb, 216/293 gdbserver, 216/294 iodbc, 277/354 unixodbc, 277/355 centos:7 barebone, 0/204 yum update, 368/572 gdb, 375/579 less, 378/582 </description>
    </item>
    <item>
      <title>alignment</title>
      <link>/web/css/align/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/align/</guid>
      <description>float </description>
    </item>
    <item>
      <title>Alpine Package Study</title>
      <link>/core/docker/pkg-alpine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/pkg-alpine/</guid>
      <description>pkg size after install cmd description base 0 base alpine, 3.11, 5.6m g++ 171m apk add g++ g++ 9.2.0 (18m/59m) make 171m apk add make gmake 4.2.1 (1.8m) python 208m apk add python python 2.7.16 python3 224m apk add python3 python 3.8.2 node 259m apk add nodejs node.js 12.15.0 npm 286 apk add npm npm 12.15.0 yarn 291 apk add yarn yarn 1.19.2 curl 288 apk add curl curl 2.</description>
    </item>
    <item>
      <title>Amend - Update the Latest Commit</title>
      <link>/core/git/undo/amend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/undo/amend/</guid>
      <description>When:
commit too early modify commit description $ git commit -m &amp;#39;some description&amp;#39; $ git add forgotten_files $ git commit --amend </description>
    </item>
    <item>
      <title>animation</title>
      <link>/web/css/animation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/animation/</guid>
      <description></description>
    </item>
    <item>
      <title>Apache Projects</title>
      <link>/core/open-source/apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/open-source/apache/</guid>
      <description> arrow </description>
    </item>
    <item>
      <title>April</title>
      <link>/blogs/2023/04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/2023/04/</guid>
      <description></description>
    </item>
    <item>
      <title>Archived Artifacts</title>
      <link>/core/jenkins/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/archive/</guid>
      <description></description>
    </item>
    <item>
      <title>Array and Dictionary</title>
      <link>/core/shell/bash/array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/array/</guid>
      <description>####### array declare -a w w[1]=hello w[2]=good echo ${w[1]} ####### dictionary declare -A d d[good]=day d[bad]=night echo ${d[good]} brace expansion example result description ${!var[*]} ${!w[*]} 1 2 index of array $var that have set ${!var[@]} ${!w[@]} 1 2 index of array $var that have set ${!var[*]} ${!d[*]} good bad key of dictionary $var that have set ${!var[@]} ${!d[@]} good bad key of dictionary $var that have set ${#var[*]} ${#w[*]} 2 length of array/dictionary $var ${#var[@]} ${#d[@]} 2 length of array/dictionary $var </description>
    </item>
    <item>
      <title>Async Process in Vue</title>
      <link>/web/vue/vue-async/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-async/</guid>
      <description> Start Sort </description>
    </item>
    <item>
      <title>asyncio</title>
      <link>/core/python/socket/asyncio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/socket/asyncio/</guid>
      <description>Simple Server Simple Client </description>
    </item>
    <item>
      <title>asyncore &#43; asynchat</title>
      <link>/core/python/socket/asyncore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/socket/asyncore/</guid>
      <description>Simple Server from __future__ import print_function import asyncore import asynchat import socket import sys import traceback as tb import exlib as x log = print class Server(asyncore.dispatcher): &amp;#34;&amp;#34;&amp;#34;Receives connections and establishes handlers for each client. &amp;#34;&amp;#34;&amp;#34; def __init__(self, address): asyncore.dispatcher.__init__(self) self.create_socket(socket.AF_INET, socket.SOCK_STREAM) self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) self.bind(address) self.address = self.socket.getsockname() self.listen(1) log(&amp;#39;listening...{}&amp;#39;.format(self.address)) def handle_accept(self): # Called when a client connects to our socket client_info = self.accept() Handler(sock=client_info[0]) # We only want</description>
    </item>
    <item>
      <title>Bash Special Variables</title>
      <link>/core/shell/bash/special-var/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/special-var/</guid>
      <description> var description $0 name of script executing $N position option Nth, N=1,2,3,.. $@ all arguments $* all arguments (joined by $IFS) $# number of arguments $? return code of previous command $! pid of previous background command $$ pid of current shell $- options of current shell $_ last argument of last command Note:
kill -0 pid doesn&amp;rsquo;t send signal to pid, used to check if pid exists (return 0 if existing) </description>
    </item>
    <item>
      <title>Basic Shapes</title>
      <link>/web/svg/elements/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/elements/basic/</guid>
      <description> svg width=800 height=360 viewbox=&#34;-40 -40 880 440&#34; (0, 0) (800, 0) rect (x,y) width height circle (cx,cy) r ellipse (cx,cy) rx ry (x1,y1) (x2,y2) stroke-width=6 line points=&#34;300,200 330,250 400,270 460,180&#34; polyline points=&#34;500,200 500,250 600,250 600,150&#34; polygon </description>
    </item>
    <item>
      <title>Basic Transform</title>
      <link>/web/svg/transform/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/transform/basic/</guid>
      <description> </description>
    </item>
    <item>
      <title>Begrette</title>
      <link>/blogs/recipe/begrette/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/recipe/begrette/</guid>
      <description></description>
    </item>
    <item>
      <title>BLE Server v1.0</title>
      <link>/iot/esp/s3zero-ble/server-v1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/server-v1/</guid>
      <description>my request Create app for waveshare s3 mini chip as below
It has a BLE server:
name: jjS3mini repor chip temperature in celsius, in name &amp;ldquo;temperature&amp;rdquo; report/change on-chip led status: three component R/G/B on/off separately, in names R, G, B respectively blinking behavior: cycle in seconds, 0 - 5, step 1, 0 means off completely duty percent: 0-100%, 0 means off, 100% means always on, 30% means 30% on The on-chip led is WS2812 RGB on GP21 according to its spec,</description>
    </item>
    <item>
      <title>BLE Server v2.0</title>
      <link>/iot/esp/s3zero-ble/server-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/server-v2/</guid>
      <description>request to add debug please add debug output when BLE is connected, query and set
grok I&amp;rsquo;ll update the previous Arduino sketch to add debug output for BLE connection events, characteristic queries (reads), and characteristic sets (writes). The debug output will be sent to the Serial monitor at 115200 baud. The changes include:
Initializing Serial in setup() Adding a server callback class to handle connect/disconnect events Modifying the characteristic callback to log read and write operations Keeping the same artifact_id since this is an update to the previous artifact #include &amp;lt;BLEDevice.</description>
    </item>
    <item>
      <title>Blood Test Results Explantion</title>
      <link>/blogs/health/blood-tests/results/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/health/blood-tests/results/</guid>
      <description>WBC White Blood Cell Count 白血细胞计数 3.6 (正常范围 4.0,10.0) going up the white blood cell count (WBC) is used as part of a full complete blood count (CBC) A high white blood cell count, called leukocytosis (白血球增多), may result from a number of conditions and diseases. Infections 感染 A low white blood cell</description>
    </item>
    <item>
      <title>Bookmark</title>
      <link>/blogs/vancouver/bookmark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/vancouver/bookmark/</guid>
      <description></description>
    </item>
    <item>
      <title>Bookmark</title>
      <link>/core/git/p4/bookmark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/p4/bookmark/</guid>
      <description>use bookmark in p4v set bookmark in p4v </description>
    </item>
    <item>
      <title>Bookmarks</title>
      <link>/blogs/health/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/health/bookmarks/</guid>
      <description></description>
    </item>
    <item>
      <title>Bookmarks</title>
      <link>/blogs/workout/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/workout/bookmarks/</guid>
      <description></description>
    </item>
    <item>
      <title>Bookmarks</title>
      <link>/core/misc/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/misc/bookmarks/</guid>
      <description>Books Swig Sqlite 3.1.3 PostgreSQL 9.5.1 Kanban In Action Design Patterns Building Software Gmake git git - user manual KBase + Simba Touchstone Test Index concurrency GitHub - libuv/libuv: Cross-platform asynchronous I/O Double-Checked Locking Is Fixed In C++11 Joe Duffy - 15 Years of Concurrency GitHub - hnes/libaco: A blazing fast and lightweight C asymmetric coroutine library 💎 ⛅🚀⛅🌞 Portable Coroutine Library Home Page Coroutines in C</description>
    </item>
    <item>
      <title>Bookmarks</title>
      <link>/web/hugo/tips/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/tips/bookmarks/</guid>
      <description>create a hugo shortcode &amp;#34;ybookmarks&amp;#34;, its content is a yaml text that defines a list of bookmarks, e.g. id: div-id # bookmarks container tag id size: large # medium, large, huge, full, default is large list: - href: https://google.com img: /images/google-logo.svg title: google description: google home page - href: /mysite/page1 img: page1.png target: _self # default is _blank The attribute href is required in a bookmark object, others are optional An external javascript module will be loaded, a function is called to create html tags to insert a blank tag &amp;lt;div id=&amp;#34;div-id&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; like this &amp;lt;div id=&amp;#34;div-id&amp;#34; class=&amp;#34;van-bookmarks van-bookmarks-large&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;van-bookmark&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;https://google.</description>
    </item>
    <item>
      <title>border</title>
      <link>/web/css/border/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/border/</guid>
      <description></description>
    </item>
    <item>
      <title>Branch and Loop</title>
      <link>/core/rosetta/feature/branch-loop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/feature/branch-loop/</guid>
      <description>if-else Cpp, Java, javascript
if (condition) { ; } else if (condition) { ; } else { ; } Python
if condition: pass elif condition pass else: pass Perl
expr if (condition); expr unless (condition); for for (int i = 0; i &amp;lt; 10; ++i) { action(); } for i in range(10): action() for (prop in object) { action() } for (element of array) { action() } while/until break/continue yield </description>
    </item>
    <item>
      <title>branch exercise</title>
      <link>/core/git/exercise/branch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/exercise/branch/</guid>
      <description>initial version $ cat &amp;gt; sample.txt $ git add sample.txt $ git commit -m &amp;#39;rev.1 init&amp;#39; $ git log --pretty=oneline 3a17ac533446296fb5da502cebfab0a26e446fa7 (HEAD -&amp;gt; master) rev.1 init make rev2 $ cat &amp;gt;&amp;gt; sample.txt $ git add sample.txt $ git commit -m &amp;#39;rev.2 add a line in sample.txt&amp;#39; $ git log --pretty=oneline 7c69103c83abc5c22215bebf9ced9b3b43dd08ae (HEAD -&amp;gt; master) rev.2 add a line in sample.txt 3a17ac533446296fb5da502cebfab0a26e446fa7 rev.1 init $ git log --pretty=&amp;#39;%h %d %s&amp;#39; 7c69103</description>
    </item>
    <item>
      <title>Branch Exercise 2</title>
      <link>/core/git/exercise/branch-ex2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/exercise/branch-ex2/</guid>
      <description>Topics branch and remote rebase merge Steps create an empty repo, clone and make initial commit. $ export REPO=`pwd`/repo $ mkdir -p $REPO $ git init --bare $REPO/branch.git $ git clone $REOP/branch.git $ cd branch $ git config --list --show-origin file:/home/jasonz/.gitconfig user.name=Jason Zou file:/home/jasonz/.gitconfig user.email=jason.zou@insightsoftware.com file:/home/jasonz/.gitconfig credential.helper=store file:/home/jasonz/.gitconfig core.whitespace=cr-at-eol file:/home/jasonz/.gitconfig core.editor=vim file:.git/config core.repositoryformatversion=0 file:.git/config core.filemode=true file:.git/config core.bare=false file:.git/config core.logallrefupdates=true file:.git/config remote.origin.url=/home/jasonz/codex/git/repo/branch.git file:.git/config remote.origin.fetch=+refs/heads/*:refs/remotes/origin/* file:.git/config branch.master.remote=origin file:.git/config branch.master.merge=refs/heads/master $ cat &amp;gt; quote.</description>
    </item>
    <item>
      <title>Build</title>
      <link>/core/jenkins/python-binding/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/build/</guid>
      <description>API Description get_build_info(name, number, depth=0) Get build information dictionary. get_build_env_vars(name, number, depth=0) Get build environment variables. get_build_test_report(name, number, depth=0) Get test results report. set_next_build_number(name, number) Set a job’s next build number. stop_build(name, number) Stop a running Jenkins build. delete_build(name, number) Delete a Jenkins build. get_running_builds() Return list of running builds. get_build_console_output(name, number) Get build console text. get_build_info(name, number, depth=0) Get build information dictionary.
Parameters:
name – Job name, str number – Build number, int depth – JSON depth, int Returns:</description>
    </item>
    <item>
      <title>Build a tabs UI component using CSS</title>
      <link>/web/vue/vue-ui-tabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-ui-tabs/</guid>
      <description>Common Extend Option Main Tab This is the main/common tab. Options Language Chinese English French translate OK Extended content A quick brown fox jumps over a lazy dog. mytab={{mytab}}</description>
    </item>
    <item>
      <title>Build BLE Server</title>
      <link>/iot/esp/s3zero-ble/build-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/build-server/</guid>
      <description> Follows the instruction of </description>
    </item>
    <item>
      <title>Build GCC from Source</title>
      <link>/core/linux/build-gcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/build-gcc/</guid>
      <description>References
Building GCC Built GCC Binaries OpenPkg </description>
    </item>
    <item>
      <title>Build unixODBC from source</title>
      <link>/core/db/odbc/build-unixodbc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/build-unixodbc/</guid>
      <description>Get Source The source of the latest unixODBC can be found on its official website. At the writing moment, the latest version is 2.3.9.
get package from official site (you need the version number) wget http://www.unixodbc.org/unixODBC-2.3.6.tar.gz get from a git clone (tags start from 2.3.2) git clone https://github.com/lurcher/unixODBC.git earlier version, e.g. v2.3.1 can be found at linuxfromscratch Build Script mkuo.sh UnixODBC supports shadow-building, which means you can configure/build it from a folder other than its source.</description>
    </item>
    <item>
      <title>C&#43;&#43; Standard Support in GCC</title>
      <link>/core/c&#43;&#43;/gcc-std/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/gcc-std/</guid>
      <description> C++ Standard Mostly Support Fully Support Default Mode Note C++-98 prior to 6.1 C++-11 4.8.1 C++-14 5 6.1 C++-17 8 11 ABI stable until 9 C++-20 13 lack some modules C++-23 C++-26 Note:
source: https://gcc.gnu.org/projects/cxx-status.html Debian package C++ download disk size default install g++-9 63.1 213 g++-10 69.2 240 2023-08 </description>
    </item>
    <item>
      <title>Caching!</title>
      <link>/web/hugo/tips/caching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/tips/caching/</guid>
      <description>Ref:
The Full Partial Series Part 1: Caching! </description>
    </item>
    <item>
      <title>Calender 2022-2024</title>
      <link>/blogs/health/fight-cancer/calender-2024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/health/fight-cancer/calender-2024/</guid>
      <description>Date Event Description 2022 06-23 stool test Dr. Tony Lee, walkin clinic, 粪检, 屁多恶臭 07-14 coloscopy/biopsy Dr. Wong, Richmond Hospital, found rectum cancer 发现直肠癌，肠镜，活检 07-17 CT exam Richmond Hospital, follow-up exam 07-29 virtual visit BC Cancer Association involved 08-05 coloscopy St Paul Hospital, first vist Dr. Karimuddin, UBC professior 08-15 MRI Richmond Hospital 08-23 Dr.</description>
    </item>
    <item>
      <title>casting</title>
      <link>/core/c&#43;&#43;/casting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/casting/</guid>
      <description>solaris issue app.cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include &amp;lt;iostream&amp;gt; using namespace std; template &amp;lt;class T&amp;gt; void foo(const T&amp;amp; v1, const T&amp;amp; v2, const char* msg) { cout &amp;lt;&amp;lt; &amp;#34;v1=&amp;#34; &amp;lt;&amp;lt; v1 &amp;lt;&amp;lt; &amp;#34;, v2=&amp;#34; &amp;lt;&amp;lt; v2 &amp;lt;&amp;lt; &amp;#34;, msg=&amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; endl; } template &amp;lt;class T&amp;gt; void bar(T v1, T v2, const char* msg) { cout &amp;lt;&amp;lt; &amp;#34;v1=&amp;#34; &amp;lt;&amp;lt; v1 &amp;lt;&amp;lt; &amp;#34;, v2=&amp;#34; &amp;lt;&amp;lt; v2 &amp;lt;&amp;lt; &amp;#34;, msg=&amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; endl; } template &amp;lt;class T&amp;gt; void ptr(T* v1, T* v2, const char* msg) { cout &amp;lt;&amp;lt; &amp;#34;v1=&amp;#34; &amp;lt;&amp;lt; *v1 &amp;lt;&amp;lt; &amp;#34;, v2=&amp;#34; &amp;lt;&amp;lt; *v2 &amp;lt;&amp;lt; &amp;#34;, msg=&amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; endl; } int main() { cout &amp;lt;&amp;lt; &amp;#34;start&amp;#34; &amp;lt;&amp;lt; endl; unsigned fail = 0; cout &amp;lt;&amp;lt; &amp;#34;&amp;amp;fail=&amp;#34; &amp;lt;&amp;lt; &amp;amp;fail &amp;lt;&amp;lt; endl; foo(static_cast&amp;lt;unsigned&amp;gt;(1), fail, &amp;#34;this is a test ref&amp;#34;); bar(static_cast&amp;lt;unsigned&amp;gt;(1), fail, &amp;#34;this is a test val&amp;#34;); ptr(&amp;amp;fail, &amp;amp;fail, &amp;#34;this is a test ptr&amp;#34;); cout &amp;lt;&amp;lt; &amp;#34;end&amp;#34; &amp;lt;&amp;lt; endl; return 0; } with gcc 4.</description>
    </item>
    <item>
      <title>cdn</title>
      <link>/web/misc/cdn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/misc/cdn/</guid>
      <description> Netlify: All-in-one platform for automating modern web projects. rollApp - Run Desktop Applications Online </description>
    </item>
    <item>
      <title>CentOS:5</title>
      <link>/core/docker/centos5v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/centos5v/</guid>
      <description>Create CentOS:5v Vault FROM centos:5 WORKDIR /home ARG repo=&amp;#34;/etc/yum.repos.d/CentOS-[a-zA-UW-Z]*.repo /etc/yum.repos.d/lib*.repo&amp;#34; COPY CentOS-Vault.repo /etc/yum.repos.d/ RUN rm -f $repo \ &amp;amp;&amp;amp; yum -y update \ &amp;amp;&amp;amp; yum -y downgrade libselinux \ &amp;amp;&amp;amp; yum -y install m4 which make ENTRYPOINT [ &amp;#34;/bin/bash&amp;#34; ] Build the docker image with tag cen5v
~/codex/docker/cen5v$ docker build -t centos:5v . [+] Building 25.0s (9/9) FINISHED =&amp;gt; [internal] load build definition from Dockerfile 0.0s =&amp;gt; =&amp;gt; transferring dockerfile: 339B 0.</description>
    </item>
    <item>
      <title>Change Centos5 Using Vault Repo</title>
      <link>/core/linux/centos-vault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/centos-vault/</guid>
      <description>After centos5 retired, it is not easy to add packages using regular repo, use vault repo instead.
Here&amp;rsquo;re steps
Remove all .repo inside /etc/yum.repos.d/ directory Create a new repo file /etc/yum.repos.d/CentOS-Vault.repo [base] name=CentOS-$releasever - Base #mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=os #baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/ baseurl=http://vault.centos.org/5.11/os/i386/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #released updates [updates] name=CentOS-$releasever - Updates mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=updates #baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 #additional packages that may be useful [extras] name=CentOS-$releasever - Extras #mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=extras #baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/ baseurl=http://vault.centos.org/5.11/extras/i386/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5 Now execute- yum update Add Epel-Repository (optional) wget http://vault.</description>
    </item>
    <item>
      <title>Changes and change</title>
      <link>/core/git/p4/change/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/p4/change/</guid>
      <description>list changes List pending CL of client jasonz_wslx.
jasonz@VANLWIN0056:~/xhome/stk/mk$ p4 changes -c jasonz_wslx -s pending Change 843369 on 2022/04/13 by jasonz@jasonz_wslx *pending* &amp;#39;unshelve of 808307 update stk &amp;#39; Other status (-s) value:
pending shelved submitted change - create, edit, delete a CL create jasonz@VANLWIN0056:~/xhome/stk/mk$ p4 change Change 843374 created. create a new CL, usually need to edit description edit p4 change 12345 delete p4 change -d 12345 no file should be opened in the CL.</description>
    </item>
    <item>
      <title>Clang&#43;&#43; Issues</title>
      <link>/core/c&#43;&#43;/misc/clang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/clang/</guid>
      <description>Clang++ doesn&amp;rsquo;t support
std::quick_exit, std::at_quick_exit </description>
    </item>
    <item>
      <title>Code Study - unixODBC</title>
      <link>/core/db/odbc/unixodbc-code-study/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/unixodbc-code-study/</guid>
      <description>How Log Works config - __handles.c:__alloc_env() SQLGetPrivateProfileString: odbcinst.ini ODBC.Trace [1Y].*|ON dm_log_open( &amp;#34;ODBC&amp;#34;, tracing_file, 1/0 ); log/action __info.c: dm_log_open(prog_name, file_name, pid_logging); // only save log info dm_log_write(file, line, type, severity, message); // do actual log file write Conclusion unixodbc use odbc.ini, defined by $ODBCINI of full path, for most configuration trace setiings defined by odbcinst.ini [ODBC] Trace = Yes # alternative: 1, ON TraceFile = /full/path/to/file # optional # TracePid = Yes odbcinst.</description>
    </item>
    <item>
      <title>Collection</title>
      <link>/web/hugo/functions/collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/functions/collection/</guid>
      <description> Function Usage Description index index $slice 2 2nd element of $slice index $map &amp;quot;b&amp;quot; $map[b] first first n $col first n elements of $col after after 2 $slice slice from 3rd slice $slice := slice &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot; generate a slice/list with elements a, b, c map $map := dict &amp;quot;a&amp;quot; 100 &amp;quot;b&amp;quot; 200 generate a map with key/value (a: 100), (b: 200) </description>
    </item>
    <item>
      <title>Command Arguments</title>
      <link>/core/rosetta/runtime/args/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/runtime/args/</guid>
      <description></description>
    </item>
    <item>
      <title>Command-line Arguments</title>
      <link>/core/shell/bat/argv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bat/argv/</guid>
      <description>Command-line arguments use different syntax from regular variables
%0 - the script itself %* - all command-line args (i.e. sys.argv[1:] in python) %1 - the first command-line arg, and so on upto %9 @echo off :: set echo all args (%*) for %%x in (%*) do ( echo %%x) echo arg 0 (%0) echo arg 1 (%1) echo arg 2 (%2) shift echo after shift arg 1 (%1) :: following command print an empty line :: in fact character : can be replaced by and of .</description>
    </item>
    <item>
      <title>Common CSS Attributes used in Tables</title>
      <link>/web/css/table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/table/</guid>
      <description>border and collapse alternative stripes misc </description>
    </item>
    <item>
      <title>Common Log Options</title>
      <link>/core/git/log/options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/log/options/</guid>
      <description> option description --oneline Shorthand for --pretty=oneline --abbrev-commit used together. --pretty output format, e.g. --pretty=&#39;%h %d %s&#39; -5 latest 5 committs (i.e. first 5 committs in the log output) -p generate patch --name-only list changed file name(s) for each commit --name-status not only names, but also their status, e.g. A-add, M-modify, D-delete Examples git log --pretty=&amp;#39;%h %d %s&amp;#39; </description>
    </item>
    <item>
      <title>Common OpenSource (and Cross Platform) Utilities</title>
      <link>/core/open-source/opensource-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/open-source/opensource-app/</guid>
      <description>Image Viewer qView - light on resources, minimal image viewer Fragment - HUD (Heads Up Display) based image viewer, very fast. XnView MP - a versatile and powerful photo viewer, image management, image resizer. Image Editor PhotoScape X is an all-in-one photo editing software which provides photo-related features such as Photo Viewer, Editor, Cut Out, Batch, Collage, Combine, Create GIF, Color Picker, Screen Capture, RAW images and More. SVG Editor macSVG Vectornator is an all in one graphic design tool Inkscape is a professional vector graphics editor for Linux, Windows and macOS.</description>
    </item>
    <item>
      <title>Compiler Predefined Macro __cplusplus</title>
      <link>/core/c&#43;&#43;/misc/__cplusplus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/__cplusplus/</guid>
      <description>__cplusplus defines the C++ standard, in format of yyyymm, e.g.
__cplusplus C++ standard 199711L C++98 201103L C++11 201402L C++14 201703L C++17 202002L C++20 unless specified -std=c++11 or any new standard, most compiler (even they actually support new features, e.g. vsc or clang), __cplusplus default value is 199711L To let VisualStudio C++ update actual __cplusplus, you need to set /Zc:__cplusplus option. To change the default c++ standard (c++14 by default), for example c++17, you need also set /std:c++17 option.</description>
    </item>
    <item>
      <title>Compiler Predefined Macros</title>
      <link>/core/c&#43;&#43;/misc/compiler-predefinded-macro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/compiler-predefinded-macro/</guid>
      <description>If we want to know what macros are defined by the compiler, we can use this command
echo | clang -dM -E - Note:
also works for gcc echo | gcc -dM -E - the last dash - means taking input of clang from stdin, which is echo output -dM is the short name of -qshowmacros AIX xlclang requires a regular file, so you can feed it any file (even an empty file) echo &amp;gt; empty_file xlclang -dM -E empty_file Output of some compilers</description>
    </item>
    <item>
      <title>Condition</title>
      <link>/core/java/ant/condition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/ant/condition/</guid>
      <description>condition Set a property prop according to the condition
&amp;lt;condition property=&amp;#39;prop&amp;#39; value=&amp;#39;value when condition is true&amp;#39; else=&amp;#39;value when condition is false&amp;#39;&amp;gt; &amp;lt;isset property=&amp;#39;another.prop&amp;#39;/&amp;gt; &amp;lt;/condition&amp;gt; Note:
if attribute else is absent, the property is NOT set when condition fails if attribute value is absent, the property is set to &amp;rsquo;true&amp;rsquo; when condition is true &amp;lt;condition&amp;gt; only works when the property is NOT set. Most common conditions
os &amp;lt;os family=&amp;#39;windows&amp;#39;/&amp;gt; &amp;lt;!-- family: windows, mac, unix, .</description>
    </item>
    <item>
      <title>Condition and Branch</title>
      <link>/core/shell/bat/if/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bat/if/</guid>
      <description>Syntax if condition (stmts) [else (stmts)] the parenthese is optional if the statement is a single command Example @echo off set a=hello if defined a (echo a is defined as %a%) else (echo a is not defined) if defined b (echo b is defined as %b%) else (echo b is not defined) echo. Result
C:\tmp\bat.ex&amp;gt;if.bat a is defined as hello b is not defined </description>
    </item>
    <item>
      <title>Condition Variables</title>
      <link>/core/rosetta/threads/cv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/threads/cv/</guid>
      <description>concept pattern </description>
    </item>
    <item>
      <title>Configuration</title>
      <link>/core/git/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/config/</guid>
      <description>Scope: system, global and local Common Settings git config user.name &amp;#39;Jason Zou&amp;#39; git config user.email &amp;#39;jzou@gmail.com&amp;#39; git config --list git config --show-origin $ git config --get-all --show-origin user.name file:/home/jasonz/.gitconfig Jason Zou file:.git/config Bob git --remove-section user </description>
    </item>
    <item>
      <title>Continuous Integration</title>
      <link>/core/jenkins/ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/ci/</guid>
      <description> What is Continuous Integration? Simplilearn What Is Jenkins? | What Is Jenkins And How It Works? Jenkins Full Course | Jenkins Tutorial For Beginners (2019, 3hr) Machine Learning Full Course | Learn Machine Learning | Machine Learning Tutorial (2019, 6.5hr) Machine Learning In-Depth Tutorial 2022, 5hr Google Cloud Platform Full Course, 2022, 3h46m CloudBeesTV What Is a Jenkins Agent? How to Setup Docker Containers As Build Agents for Jenkins GoCD </description>
    </item>
    <item>
      <title>Create a Docker Image of Debian with Qemu for Arm</title>
      <link>/core/docker/qemu/create-debian10qemu-arm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/qemu/create-debian10qemu-arm/</guid>
      <description>In Touchstone project we need a docker image that hosts on debian10, with QEMU user-static mode for ARM (armhf and aarch64). Packages need to be installed are g++ devel (8.3) with gdb.
pull debian10 jasonz@VANLWIN0056:~$ docker pull debian:10 10: Pulling from library/debian d8a6bce2a40c: Pull complete Digest: sha256:2d356e1e22c0902f88ef65cb7159ecd5a96feb62345747edfd4324b0d83a2923 Status: Downloaded newer image for debian:10 docker.io/library/debian:10 jasonz@VANLWIN0056:~$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE debian 10 f03c282363a3 3 days ago 114MB download deb packages root@d1db8268abb6:/dkr/deb10# apt install -d -o=dir::cache=`pwd` qemu-user Reading package lists.</description>
    </item>
    <item>
      <title>Create a New Hugo Site</title>
      <link>/web/hugo/hugo-ex/create-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/hugo-ex/create-site/</guid>
      <description>jasonz@VANLWIN0056:~/codex/hugo$ hugo new site hugo-ex Congratulations! Your new Hugo site is created in /home/jasonz/codex/hugo/hugo-ex. Just a few more steps and you&amp;#39;re ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the &amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34; command. 2. Perhaps you want to add some content. You can add single files with &amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;. 3. Start the built-in live server via &amp;#34;hugo server&amp;#34;.</description>
    </item>
    <item>
      <title>Create A RPM Package</title>
      <link>/core/linux/mk-rpm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/mk-rpm/</guid>
      <description>Reference
A simplified guide to creating your first RPM </description>
    </item>
    <item>
      <title>Create An HTTPS Web Server With Express.js</title>
      <link>/web/js/node/https-express/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/node/https-express/</guid>
      <description>References:
Create HTTPS Server with Node.js [Simple Steps] use self cerificate Node, Express, SSL Certificate: Run HTTPS Server from scratch in 5 steps Use free certificate authority Let&amp;rsquo;s Encrypt create key/cert jasonz@VANLWIN0056:~/codex/ssl/key1$ openssl genrsa -out key.pem Generating RSA private key, 2048 bit long modulus (2 primes) .........+++++ .........+++++ e is 65537 (0x010001) jasonz@VANLWIN0056:~/codex/ssl/key1$ ls key.pem jasonz@VANLWIN0056:~/codex/ssl/key1$ head -5 key.pem -----BEGIN RSA PRIVATE KEY----- MIIEogIBAAKCAQEAqkp2E9lwT6HMmxMwh6LkJeFTGy3vnMhzeqhE9gOFKa8Wbblb U4cgJs1Qf+ifBQxWf6baf4d84GXxJ0x89QQuq8uujiD6bppC5cLmjOnK6ad673ft Iigj4TWSS3wEPGUbvmEIELSIVfRiuiI6rYiSLcVP2nkjZJEOyL7JLrzQm5KiIbiM NSaSnevKbyd6caWN0GFyLK8MaHHWco8gH370balMewVKcOyBolox4KmbKsyhiCce jasonz@VANLWIN0056:~/codex/ssl/key1$ jasonz@VANLWIN0056:~/codex/ssl/key1$ openssl req -new -key key.</description>
    </item>
    <item>
      <title>CRLF at end of line in diff</title>
      <link>/core/git/crlf-at-eol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/crlf-at-eol/</guid>
      <description>It is nasty to see ^M at end of each line, especially when they are in color. Here is the solution.
$ git config --global core.whitespace cr-at-eol you don&amp;rsquo;t need -w or --ignore-cr-at-eol if you just don&amp;rsquo;t want let them visible and don&amp;rsquo;t care the difference. </description>
    </item>
    <item>
      <title>Cross Build (arm)</title>
      <link>/core/docker/qemu/cross-dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/qemu/cross-dev/</guid>
      <description>Reference
Azeria Labs sample app root@6c62d0585aee:/home# g++ -o hello hello.cpp root@6c62d0585aee:/home# ./hello Hello, world! root@6c62d0585aee:/home# file hello hello: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=4efdb8ce46bc97ed30278a3dd3cd6958af3ed5ce, for GNU/Linux 3.2.0, not stripped root@6c62d0585aee:/home# g++ -o hello32 -m32 hello.cpp In file included from hello.cpp:1: /usr/include/c++/10/iostream:38:10: fatal error: bits/c++config.h: No such file or directory 38 | #include &amp;lt;bits/c++config.h&amp;gt; | ^~~~~~~~~~~~~~~~~~ compilation terminated. root@6c62d0585aee:/home# ldd hello linux-vdso.so.1 (0x00007ffe121b9000) libstdc++.</description>
    </item>
    <item>
      <title>CRTP - Curiously Recurring Template Pattern</title>
      <link>/core/c&#43;&#43;/patterns/crtp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/patterns/crtp/</guid>
      <description>References:
Original artical by James O. Coplien Fluent {C++} Wiki </description>
    </item>
    <item>
      <title>css</title>
      <link>/web/css/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/css/</guid>
      <description>CSS-Tricks Icons | Font Awesome</description>
    </item>
    <item>
      <title>css-based menu</title>
      <link>/web/css/menu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/menu/</guid>
      <description></description>
    </item>
    <item>
      <title>Data Conversion</title>
      <link>/core/jenkins/groovy/data-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/groovy/data-conversion/</guid>
      <description>String to Integer Typically, convert a string parameter (there&amp;rsquo;s no number parameter) or an environment variable (e.g. BUILD_NUMBER) to an integer, then use the integer value in script condition or calculation.
pipeline { agent any stages { stage(&amp;#39;test&amp;#39;) { steps { script { def n = Integer.parseInt(BUILD_NUMBER) // alternatively, n = Integer.valueOf(BUILD_NUMBER) // // at least from v2.5+, groovy supports // n = BUILD_NUMBER as Integer // but above expression is not supported in Jenkins groovy DSL if (n == 1) { echo &amp;#34;First time run this pipeline&amp;#34; } else { echo &amp;#34;Well done, you&amp;#39;ve known it.</description>
    </item>
    <item>
      <title>Data Convertion: SQL to C</title>
      <link>/core/db/odbc/sql-to-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/sql-to-c/</guid>
      <description> SQL Types char wchar tiny short long bigint float double numeric binary date time stamp guid CHAR X o o o o o o o o o o o o o VARCHAR X o o o o o o o o o o o o o LONGVARCHAR X o o o o o o o o o o o o o WCHAR o X o o o o o o o o o o o o WVARCHAR o X o o o o o o o o o o o o WLONGVARCHAR o X o o o o o o o o o o o o TINY o o X o o o o o o o SMALL o o o X o o o o o o INTEGER o o o o o o o o o o BIGINT o o o o o X o o o o REAL o o o o o o X o o o FLOAT o o o o o o o X o o DOUBLE o o o o o o o X o o DECIMAL X o o o o o o o o o NUMERIC X o o o o o o o o o BINARY o o X VARBINARY o o X LONGVARBINARY o o X TYPE_DATE o o o X o TYPE_TIME o o o X o TYPE_TIMESTAMP o o o o o X GUID o o o X o support X default (SQL_C_DEFAULT) </description>
    </item>
    <item>
      <title>Debug Bash Script</title>
      <link>/core/shell/bash/debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/debug/</guid>
      <description>Use Bash Internal Command set option description -v turn on verbose mode -x print command before execute it -o pipefail check pipeline failure Tips:
put set -x at head of the script to trace all commands wrap the interested section set -xv # interested section set +xv use in launch shell without modifying the target script bash -x script.sh Other Useful Tips insert echo at interested location to print info Use -n flag to check syntax without executing bash -n script.</description>
    </item>
    <item>
      <title>Declarative Pipeline vs Scripted Pipeline</title>
      <link>/core/jenkins/pipeline/declaretive-vs-scripted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/declaretive-vs-scripted/</guid>
      <description>Pipeline can be declarative, which is newer and preferred, however scripted pipeline is needed for following reasons:
called in functions (e.g. shared libraries) size limit complicated structures Declarative Pipeline pipeline { // top block of pipeline agent { label &amp;#34;agent label&amp;#34; } stages { stage(&amp;#39;stage-name&amp;#39;) { steps { echo &amp;#34;run stage: ${stage}&amp;#34; // optional if you want some limited script script { } } } } } agent can be used only in declarative pipelines Scripted Pipeline node { environment { } stage { echo &amp;#34;actions&amp;#34; if (condtion) } } node(&amp;#34;agent label&amp;#34;) { stage { echo &amp;#34;actions&amp;#34; } } </description>
    </item>
    <item>
      <title>Demo</title>
      <link>/web/hugo/shortcode/demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/shortcode/demo/</guid>
      <description>This is a page that include shortcode demo.
shortcode demo src=demo.md params * note=no-md * src=demo.md * inner text is **NOT** markdown
shortcode demo src=demo.md params * note=blaba * src=demo.md Inner is empty shortcode demo param0=demo.md params * 0=demo.md * 1=blaba inner text is markdown more lines shortcode demo Inner is empty </description>
    </item>
    <item>
      <title>Demo</title>
      <link>/web/svg/animejs/demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/animejs/demo/</guid>
      <description> R play </description>
    </item>
    <item>
      <title>Deprecated Linux Commands And Their Replacements</title>
      <link>/core/linux/debian9-alt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/debian9-alt/</guid>
      <description>Debian 9
Network Deprecated Command Replacement Command(s) arp ip n (ip neighbor) ifconfig ip a (ip addr), ip link, ip -s (ip -stats) iptunnel ip tunnel iwconfig iw nameif ip link, ifrename netstat ss, ip route (for netstat -r), ip -s link (for netstat -i), ip maddr (for netstat -g) route ip r (ip route) Source: Doug Vitale Tech Blog</description>
    </item>
    <item>
      <title>device - response</title>
      <link>/web/css/device/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/device/</guid>
      <description></description>
    </item>
    <item>
      <title>diff</title>
      <link>/core/linux/utils/diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/diff/</guid>
      <description>Compare files or folders.
diff [OPTIONS] FILES Common Options option description -q,--brief report only when files differ -u,--unified[=NUM] output unified context (used by patch), with NUM (default 3) lines -y,--side-by-side output in two columns -r,--recursive recursively compare any subdirectories found -N,--new-file treat absent files as empty -a,--text treat all files as text --strip-trailing-cr strip trailing carriage return on input, useful on comparing files between linux and windows Ignore Cases option description --suppress-blank-empty -i,--ignore-case ignore cases differences in file contents -E,--ignore-tab-expansion ignore changes due to tab expansion -Z,--ignore-trailing-space -b,--ignore-space-change -w,--ignore-all-space -B,--ignore-blank-lines -I,--ignore-matching-lines=RE ignore changes where all lines match RE Less Common Options option description -n,--rcs RCS format diff -x,--exclude=PAT exclude files that match the pattern PAT -X,--exclude-from=FILE exclude files that match any patterns in FILE --from-file=FILE1 define from files in FILE1 --to-file=FILE2 define to files in FILE1 </description>
    </item>
    <item>
      <title>Difference between HEAD~ and HEAD^</title>
      <link>/core/git/tree-ish/parent-notation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/tree-ish/parent-notation/</guid>
      <description>Anwser of Chatgpt
The difference between HEAD~ and HEAD^ in Git is how they traverse the history of commits from a given starting point, usually HEAD. HEAD is a reference to the current commit, or the tip of the current branch. HEAD~ and HEAD^ are ways to specify the ancestors of a commit, but they have different rules.
HEAD~ means the nth generation ancestor of HEAD, following only the first parent in case of a merge commit.</description>
    </item>
    <item>
      <title>Discard After a Commit</title>
      <link>/core/git/undo/discard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/undo/discard/</guid>
      <description>If you want to discard all the changes you made after a certain commit, you can use the command git reset --hard with the commit ID. This will reset your current branch to the specified commit and erase any later commits from the history.
For example, if you want to revert to commit 0ad5a7a6, you can run:
git reset --hard 0ad5a7a6 Note:
use with careful, it deletes permanently. </description>
    </item>
    <item>
      <title>display</title>
      <link>/web/css/display/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/display/</guid>
      <description> none block in-line </description>
    </item>
    <item>
      <title>Docker Images of JDK</title>
      <link>/core/java/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/docker/</guid>
      <description>OpenJdk is deprecated. There are several alternatives, but amazoncorretto (maintained by AWS JDK team) offers the most versions of images (8, 11, 17, 18, 19).</description>
    </item>
    <item>
      <title>Docker in WSL without Docker Deskttop</title>
      <link>/core/docker/wsl/no-desktop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/wsl/no-desktop/</guid>
      <description>References
Install Docker on Windows (WSL) without Docker Desktop Install Docker in WSL 2 without Docker Desktop Requires
WSL2 </description>
    </item>
    <item>
      <title>Download Packages Without Installing them</title>
      <link>/core/linux/download-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/download-packages/</guid>
      <description>Package managers (e.g. apt, yum) search the package repositories, download packages (and their dependencies) and install them. What if we want to just download them without installation? These are scenarios:
we want to install those packages on many systems or hosts we want to repeat to install them for debugging purpose or different version, such as docker images rpm for redhat, centos and so on yum-utils [root@0268aef3d0ef x]# yum -y install yum-utils Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile Setting up Install Process Resolving Dependencies --&amp;gt; Running transaction check ---&amp;gt; Package yum-utils.</description>
    </item>
    <item>
      <title>Dr.Memory</title>
      <link>/core/c&#43;&#43;/debug/drmemory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/drmemory/</guid>
      <description>Basic Usage drmemory -quiet -batch -brief -ignore_kernel -no_gen_suppress_offs -logdir ./drm-log -suppress myfile.txt -- app [app_options] option description -v verbose information (for debugging DrM itself) -brief show simplified and easier-to-read error reports -quiet stop displaying dialogs and stderr -batch do not invoke notepad at the end -logdir dir-name where the output go -ignore_kernel attempt execution on an unsupported kernel -suppress file file containing errors to suppress -gen_suppress_offs generate suppress mod+offs, not much useful in general, turn off by -no_gen_suppress_offs suppress file Dr.</description>
    </item>
    <item>
      <title>Duck-typing Dict</title>
      <link>/core/python/recipes/duck-typing_dict/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/recipes/duck-typing_dict/</guid>
      <description>ex-obj-dict.py
from __future__ import print_function &amp;#34;&amp;#34;&amp;#34; Demonstrate duck-typing for dict-like class. 1. Create __dict__ dictionary before creating any members 2. Implement following interfaces, which are required for dict context, such as d[key], for key in d: __setitem__(key, value) __getitem__(key) __delitem__(key) __iter__() __len__() 3. In addition, implement common methods of dict get(key, fallback=None) items() Alternatively, by deriving from collections.abc.Mapping: * __dict__ is not required to be created * context interfaces are forced to be implemented * get(), items() are not required (implemented already by Mapping) &amp;#34;&amp;#34;&amp;#34; try: from collections.</description>
    </item>
    <item>
      <title>Embedded Objects</title>
      <link>/web/svg/samples/embed-svg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/samples/embed-svg/</guid>
      <description> SVG Linked SVG HTML Script </description>
    </item>
    <item>
      <title>Emulators</title>
      <link>/iot/intro/emulator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/intro/emulator/</guid>
      <description>Algodoo
Algodoo is a unique 2D-simulation software from Algoryx Simulation AB. Algodoo is designed in a playful, cartoony manner, making it a perfect tool for creating interactive scenes. Explore physics, build amazing inventions, design cool games or experiment with Algodoo in your science classes. Algodoo encourages students and children’s own creativity, ability and motivation to construct knowledge while having fun. Making it as entertaining as it is educational. Algodoo is also a perfect aid for children to learn and practice physics at home.</description>
    </item>
    <item>
      <title>Enable HTTPS to Hugo</title>
      <link>/web/hugo/https/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/https/</guid>
      <description>From version 0.113.0, hugo server supports HTTPS (disabled by default).
Run in my laptop
# Installs a local CA in the system root store. You only need to do this once. jasonzou@Jasons-MacBook-Pro hugo % hugo server trust Sudo password: The local CA is now installed in the system trust store. # Generates locally-trusted certificates (if not already created) and starts the server with TLS/HTTPS asonzou@Jasons-MacBook-Pro hugo % hugo server -p 8088 --tlsAuto Creating TLS certificates in /Users/jasonzou/Library/Caches/hugo_cache/_mkcerts Created a new local CA 💥 Created a new certificate valid for the following names 📜 - &amp;#34;localhost&amp;#34; The certificate is at &amp;#34;/Users/jasonzou/Library/Caches/hugo_cache/_mkcerts/localhost.</description>
    </item>
    <item>
      <title>English Proverbs royalty-free images</title>
      <link>/blogs/english/proverbs-of-day/shutterstock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/proverbs-of-day/shutterstock/</guid>
      <description>source</description>
    </item>
    <item>
      <title>Environment Variables</title>
      <link>/core/rosetta/runtime/env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/runtime/env/</guid>
      <description></description>
    </item>
    <item>
      <title>Epsilon</title>
      <link>/core/c&#43;&#43;/misc/epsilon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/epsilon/</guid>
      <description>We know two floats or doubles can not be compared exactly, but how close are considered equal?
The anwser is epsilon. Although you can define your own constant espsilon to any precision you want, the system, or the compiler has a default value as std::numeric_limits&amp;lt;T&amp;gt;::epsilon().
epsilon.cpp
#include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;sstream&amp;gt; #include &amp;lt;iomanip&amp;gt; // setprecision #include &amp;lt;limits&amp;gt; // numeric_limits&amp;lt;T&amp;gt;::epsilon() #include &amp;lt;cstdlib&amp;gt; // atof, stod, strtod #include &amp;lt;cctype&amp;gt; // isdigit using namespace std; int main(int argc, char* argv[]) { double epsilon_f = numeric_limits&amp;lt;float&amp;gt;::epsilon(); cout &amp;lt;&amp;lt; &amp;#34;numeric_limits&amp;lt;float&amp;gt;::epsilon()=&amp;#34; &amp;lt;&amp;lt; epsilon_f &amp;lt;&amp;lt; endl; double epsilon = numeric_limits&amp;lt;double&amp;gt;::epsilon(); cout &amp;lt;&amp;lt; &amp;#34;numeric_limits&amp;lt;double&amp;gt;::epsilon()=&amp;#34; &amp;lt;&amp;lt; epsilon &amp;lt;&amp;lt; endl; streamsize default_precision = cout.</description>
    </item>
    <item>
      <title>Exception</title>
      <link>/core/rosetta/feature/exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/feature/exception/</guid>
      <description>throw
catch
finally</description>
    </item>
    <item>
      <title>Exceptions</title>
      <link>/core/jenkins/python-binding/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/exceptions/</guid>
      <description> Exception Description JenkinsException General exception type for jenkins-API-related failures NotFoundException A special exception to call out the case of receiving a 404 EmptyResponseException A special exception to call out the case receiving an empty response BadHTTPException A special exception to call out the case of a broken HTTP response TimeoutException A special exception to call out in the case of a socket timeout </description>
    </item>
    <item>
      <title>Expressions</title>
      <link>/web/hugo/functions/expression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/functions/expression/</guid>
      <description> Function Usage by Example Description cond cond (le $qty 3) &amp;quot;few&amp;quot; &amp;quot;many&amp;quot; similar to c cond ? v1 : v2 </description>
    </item>
    <item>
      <title>External Tree</title>
      <link>/core/git/diff-patch/externals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/diff-patch/externals/</guid>
      <description>Sometimes we want to diff and patch an external tree, i.e. not in git, for example, we have folked a repo, but we want to keep updated with the original repo.
this is different from branch, which is in the same git repo. We can use posix utility diff and patch to achieve the purpose.
Compare two trees (folders recursively) and generate patch file. The patch file is the command (explained by patch) that convert .</description>
    </item>
    <item>
      <title>Feature Cheatsheet by Versions</title>
      <link>/core/c&#43;&#43;/lang/version-cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/lang/version-cheatsheet/</guid>
      <description> modern cpp features cheatsheet </description>
    </item>
    <item>
      <title>ffmpeg and js</title>
      <link>/web/misc/ffmpeg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/misc/ffmpeg/</guid>
      <description>AllBestApps ffmpeg.js This library provides FFmpeg builds ported to JavaScript using Emscripten project. Builds are optimized for in-browser use: minimal size for faster loading, asm.js, performance tunings, etc. Though they work in Node as well. Fluent ffmpeg This library abstracts the complex command-line usage of ffmpeg into a fluent, easy to use node.js module. In order to be able to use this module, make sure you have ffmpeg installed on your system (including all necessary encoding libraries like libmp3lame or libx264).</description>
    </item>
    <item>
      <title>files - list files</title>
      <link>/core/git/p4/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/p4/files/</guid>
      <description>Basic Usage p4 files &amp;lt;repo-path&amp;gt;/...[@filter] Examples in different scenarios # tagged by a label, e.g. SnowflakeODBC_3.1.2 p4 files //depo/foo/...@SnowflakeODBC_3.1.2 # in a range of CL (change list), e.g. from 1234 to 1600 p4 files //depo/foo/...@1234,1600 # in a single CL, e.g. 1234 p4 files //depo/foo/...@1234,1234 # or p4 files //depo/foo/...@=1234 # in a shelve, e.g. 1234 # note: there isn&amp;#39;t such kind of &amp;#34;shelve range&amp;#34; p4 files //depo/foo/...@=1234 # up to a CL, e.</description>
    </item>
    <item>
      <title>find</title>
      <link>/core/linux/utils/find/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/find/</guid>
      <description>Common Options type arg example description also test +n +5 greater than n -n (less), n (equal) -amin n -amin 5 accessed n minutes ago -cmin (change),-mmin (modify) -anewer ref -anewer main.o accessed after the modification of ref file -atime n -atime 2 accesed n*24 hours ago -ctime,-mtime -newer ref inode status change is newer than ref modification -name pattern -name *.o name (glob) pattern -path whole_path_pattern -regex pattern -regex &amp;lsquo;.</description>
    </item>
    <item>
      <title>Framework</title>
      <link>/web/js/framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/framework/</guid>
      <description> Introduction — Vue.js Vuikit Metric Loop&amp;#39;s Blog | How to Use Vuex to Build a Feature </description>
    </item>
    <item>
      <title>fswalk</title>
      <link>/web/js/node/fswalk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/node/fswalk/</guid>
      <description>Note the 2nd version (async generator) is prefered: more concise, flexible, and easier to understand.
Old school version Plain style of ancient language feature, although promise is used.
// // fswalk // a promise that walks a tree asynchrously with optional filter (RE pattern), // resolved with a list of {name, stat} // const fs = require(&amp;#39;fs&amp;#39;) const path = require(&amp;#39;path&amp;#39;) // to disable warnings like // (node:6988) ExperimentalWarning: The fs.</description>
    </item>
    <item>
      <title>GDB recipes</title>
      <link>/core/c&#43;&#43;/debug/gdb-recipe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/debug/gdb-recipe/</guid>
      <description>common command bt run, next, step, continue, finish, until break, bt(where), up/down l(list) p print break, tbreak break loc if con rbreak regex - on functions matched regex info breakpoints clear n - range condition bnum expre command range&amp;hellip; &amp;hellip; end save breakpoints [filename] watch, rwatch(for read), awatch (read+write), info watchpoints catch, tcatch TUI - TextWindow UI Four windows - command and source are available by default
command - regular gdb command source - source code assemble register Key binding</description>
    </item>
    <item>
      <title>Generate and Apply a Patch</title>
      <link>/core/linux/utils/diff-patch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/diff-patch/</guid>
      <description>Scenario A working folder on linux was copied from Windows need to ignore the difference of \r\n and \n when compare Copy happened long time ago, e.g. 1 year A few files were changed, we don&amp;rsquo;t remember exactly what and when were changed, roughly in recent month. Some folders with binaries, e.g. .git should be excluded. Need to generate a patch file that can be appied on a clean repo. Steps optional: from the working folder, find files that are changed in recent 30 days.</description>
    </item>
    <item>
      <title>Generator</title>
      <link>/core/rosetta/feature/generator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/feature/generator/</guid>
      <description></description>
    </item>
    <item>
      <title>Get DM Information</title>
      <link>/core/db/odbc/dm-info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/dm-info/</guid>
      <description>unixODBC nm libodbc.so ... r id_string.1 ... t __info_as_string t __find_lib_name b single_lib_name Note: all symbols are &amp;ldquo;local&amp;rdquo;, i.e. not visible to other modules
t: text b: bss (0 initialized) r: read-only source
config.h PACKAGE_NAME &amp;#34;unixODBC&amp;#34; PACKAGE_STRING &amp;#34;unixODBC 2.3.8&amp;#34; PACKAGE_VERSION &amp;#34;2.3.8&amp;#34; </description>
    </item>
    <item>
      <title>Get Information About Ant</title>
      <link>/core/java/ant/ant-info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/ant/ant-info/</guid>
      <description>You can get ant information from ant.* properties, especially
ant.version ant.java.version info.xml
&amp;lt;?xml version=&amp;#39;1.0&amp;#39;?&amp;gt; &amp;lt;project name=&amp;#39;AntInfo&amp;#39; default=&amp;#39;info&amp;#39;&amp;gt; &amp;lt;description&amp;gt;Get ant information&amp;lt;/description&amp;gt; &amp;lt;property environment=&amp;#39;env&amp;#39;/&amp;gt; &amp;lt;target name=&amp;#39;info&amp;#39;&amp;gt; &amp;lt;echoproperties prefix=&amp;#39;ant.&amp;#39;/&amp;gt; &amp;lt;/target&amp;gt; &amp;lt;/project&amp;gt; $ ant -f info.xml Buildfile: /home/jasonz/codex/java/info.xml info: [echoproperties] #Ant properties [echoproperties] #Fri Aug 26 11:54:13 PDT 2022 [echoproperties] ant.core.lib=/opt/apache/ant1.9.2/lib/ant.jar [echoproperties] ant.file=/home/jasonz/codex/java/info.xml [echoproperties] ant.file.AntInfo=/home/jasonz/codex/java/info.xml [echoproperties] ant.file.type=file [echoproperties] ant.file.type.AntInfo=file [echoproperties] ant.home=/opt/apache/ant1.9.2 [echoproperties] ant.java.version=1.8 [echoproperties] ant.library.dir=/opt/apache/ant1.9.2/lib [echoproperties] ant.project.default-target=info [echoproperties] ant.project.invoked-targets=info [echoproperties] ant.project.name=AntInfo [echoproperties] ant.version=Apache Ant(TM) version 1.</description>
    </item>
    <item>
      <title>getopts</title>
      <link>/core/shell/bash/getopts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/getopts/</guid>
      <description>Template to get command-line options
function usage { cat &amp;lt;&amp;lt; EOF usage: ... EOF exit 1 } function fallback { # default variable values : ${_wks:=$HOME} } OPTIND=1 while getopts &amp;#34;h?yw:i:v:&amp;#34; opt; do case &amp;#34;$opt&amp;#34; in h|\?) usage;; y) DRY=echo;; w) _wks=$OPTARG;; i) _agent=$OPTARG;; v) _v=$OPTARG;; esac done shift $((OPTIND-1)) fallback # do actual work </description>
    </item>
    <item>
      <title>gitdiff</title>
      <link>/core/git/diff-patch/gitdiff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/diff-patch/gitdiff/</guid>
      <description>Common options options Description -p show diff of files in each commit &amp;ndash;name-only Show only names of changed files. &amp;ndash;name-status Show only names and status of changed files. &amp;ndash;ignore-cr-at-eol Ignore carriage-return at the end of line when doing a comparison. -b, &amp;ndash;ignore-space-change Ignore changes in amount of whitespace. This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent. -w, &amp;ndash;ignore-all-space Ignore whitespace when comparing lines.</description>
    </item>
    <item>
      <title>Global Variables (environment)</title>
      <link>/core/jenkins/pipeline/global-vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/global-vars/</guid>
      <description>Variable Description BRANCH_NAME For a multibranch project, this will be set to the name of the branch being built, for example in case you wish to deploy to production from master but not from feature branches; if corresponding to some kind of change request, the name is generally arbitrary (refer to CHANGE_ID and CHANGE_TARGET). BRANCH_IS_PRIMARY For a multibranch project, if the SCM source reports that the branch being built is a primary branch, this will be set to &amp;ldquo;true&amp;rdquo;; else unset.</description>
    </item>
    <item>
      <title>GN</title>
      <link>/core/c&#43;&#43;/make/gn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/gn/</guid>
      <description>What is GN? </description>
    </item>
    <item>
      <title>Google Drawing Elements</title>
      <link>/web/svg/google-drawing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/google-drawing/</guid>
      <description>shape-1
&amp;lt;svg version=&amp;#34;1.1&amp;#34; viewBox=&amp;#34;0.0 0.0 960.0 720.0&amp;#34; fill=&amp;#34;none&amp;#34; stroke=&amp;#34;none&amp;#34; stroke-linecap=&amp;#34;square&amp;#34; stroke-miterlimit=&amp;#34;10&amp;#34; xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34; xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34;&amp;gt; &amp;lt;clipPath id=&amp;#34;p.0&amp;#34;&amp;gt; &amp;lt;path d=&amp;#34;m0 0l960.0 0l0 720.0l-960.0 0l0 -720.0z&amp;#34; clip-rule=&amp;#34;nonzero&amp;#34;/&amp;gt; &amp;lt;/clipPath&amp;gt; &amp;lt;g clip-path=&amp;#34;url(#p.0)&amp;#34;&amp;gt; &amp;lt;path fill=&amp;#34;#000000&amp;#34; fill-opacity=&amp;#34;0.0&amp;#34; d=&amp;#34;m0 0l960.0 0l0 720.0l-960.0 0z&amp;#34; fill-rule=&amp;#34;evenodd&amp;#34;/&amp;gt; &amp;lt;path fill=&amp;#34;#cfe2f3&amp;#34; d=&amp;#34;m178.02512 76.06681l298.03842 -42.56956l37.976196 28.486511l20.736877 145.28645l0 0l-364.50394 52.063004l0 0l-20.736893 -145.28647z&amp;#34; fill-rule=&amp;#34;evenodd&amp;#34;/&amp;gt; &amp;lt;path stroke=&amp;#34;#000000&amp;#34; stroke-width=&amp;#34;1.0&amp;#34; stroke-linejoin=&amp;#34;round&amp;#34; stroke-linecap=&amp;#34;butt&amp;#34; d=&amp;#34;m178.02512 76.06681l298.03842 -42.56956l37.976196 28.486511l20.736877 145.28645l0 0l-364.50394 52.063004l0 0l-20.736893 -145.28647z&amp;#34; fill-rule=&amp;#34;evenodd&amp;#34;/&amp;gt; &amp;lt;/g&amp;gt; &amp;lt;/svg&amp;gt; arrow-1
&amp;lt;svg version=&amp;#34;1.1&amp;#34; viewBox=&amp;#34;0.0 0.0 960.0 720.</description>
    </item>
    <item>
      <title>grep</title>
      <link>/core/linux/utils/grep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/grep/</guid>
      <description>grep [OPTION] [PATTERN | -e PATTERN | -f FILE] FILES ... Common options
options description -e RE usually used for multiple patterns, or when RE contains leading dash -r recursively search -E &amp;ndash;extended-regexp -P &amp;ndash;perl-regexp (experimental) -i &amp;ndash;ignore-case -v &amp;ndash;invert-match -f FILE read patterns from FILE -n &amp;ndash;line-number, add line-number of matched line(s) in output -l list only name of files that contain the pattern &amp;ndash;include=GLOB search only files that match the glob pattern &amp;ndash;exclude=GLOB skip files that match the glob &amp;ndash;exclude-dir=DIR skip dirs of pattern in recursive search -I equivalent to &amp;ndash;binary-files=without-match, skip binary files unless unmatch is concerned -s &amp;ndash;no-messages, suppress error messages about nonexistent or unreadable files Recipes</description>
    </item>
    <item>
      <title>Group of SVG Components</title>
      <link>/web/vue/vue-svg-component-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-svg-component-2/</guid>
      <description> Start Sort {{lpad(v)}} </description>
    </item>
    <item>
      <title>Here Doc</title>
      <link>/core/shell/bash/heredoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/heredoc/</guid>
      <description>Simple case
cat &amp;lt;&amp;lt; EOF some text more text EOF Use in pipes
cat &amp;lt;&amp;lt; EOF | some text more text EOF grep some or alternatively
cat &amp;lt;&amp;lt; EOF | grep some some text more text EOF </description>
    </item>
    <item>
      <title>HomeBrew</title>
      <link>/core/misc/home-brew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/misc/home-brew/</guid>
      <description>/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;#34; ==&amp;gt; This script will install: /usr/local/bin/brew /usr/local/share/doc/homebrew /usr/local/share/man/man1/brew.1 /usr/local/share/zsh/site-functions/_brew /usr/local/etc/bash_completion.d/brew /usr/local/Homebrew ==&amp;gt; The following new directories will be created: /usr/local/bin /usr/local/etc /usr/local/include /usr/local/lib /usr/local/sbin /usr/local/share /usr/local/var /usr/local/opt /usr/local/share/zsh /usr/local/share/zsh/site-functions /usr/local/var/homebrew /usr/local/var/homebrew/linked /usr/local/Cellar /usr/local/Caskroom /usr/local/Homebrew /usr/local/Frameworks ==&amp;gt; The Xcode Command Line Tools will be installed. Press RETURN to continue or any other key to abort Password: ==&amp;gt; /usr/bin/sudo /bin/mkdir -p /usr/local/bin /usr/local/etc /usr/local/include /usr/local/lib /usr/local/sbin /usr/local/share /usr/local/var /usr/local/opt /usr/local/share/zsh /usr/local/share/zsh/site-functions /usr/local/var/homebrew /usr/local/var/homebrew/linked /usr/local/Cellar /usr/local/Caskroom /usr/local/Homebrew /usr/local/Frameworks ==&amp;gt; /usr/bin/sudo /bin/chmod g+rwx /usr/local/bin /usr/local/etc /usr/local/include /usr/local/lib /usr/local/sbin /usr/local/share /usr/local/var /usr/local/opt /usr/local/share/zsh /usr/local/share/zsh/site-functions /usr/local/var/homebrew /usr/local/var/homebrew/linked /usr/local/Cellar /usr/local/Caskroom /usr/local/Homebrew /usr/local/Frameworks ==&amp;gt; /usr/bin/sudo /usr/sbin/chown jasonzou /usr/local/bin /usr/local/etc /usr/local/include /usr/local/lib /usr/local/sbin /usr/local/share /usr/local/var /usr/local/opt /usr/local/share/zsh /usr/local/share/zsh/site-functions /usr/local/var/homebrew /usr/local/var/homebrew/linked /usr/local/Cellar /usr/local/Caskroom /usr/local/Homebrew /usr/local/Frameworks ==&amp;gt; /usr/bin/sudo /usr/bin/chgrp admin /usr/local/bin /usr/local/etc /usr/local/include /usr/local/lib /usr/local/sbin /usr/local/share /usr/local/var /usr/local/opt /usr/local/share/zsh /usr/local/share/zsh/site-functions /usr/local/var/homebrew /usr/local/var/homebrew/linked /usr/local/Cellar /usr/local/Caskroom /usr/local/Homebrew /usr/local/Frameworks ==&amp;gt; /usr/bin/sudo /bin/mkdir -p /Users/jasonzou/Library/Caches/Homebrew ==&amp;gt; /usr/bin/sudo /bin/chmod g+rwx /Users/jasonzou/Library/Caches/Homebrew ==&amp;gt; /usr/bin/sudo /usr/sbin/chown jasonzou /Users/jasonzou/Library/Caches/Homebrew ==&amp;gt; Searching online for the Command Line Tools ==&amp;gt; /usr/bin/sudo /usr/bin/touch /tmp/.</description>
    </item>
    <item>
      <title>Identify Compiler Using Predefined Macros</title>
      <link>/core/c&#43;&#43;/misc/identify-compiler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/identify-compiler/</guid>
      <description>Reference SourceForge.net
Compiler Macro Sample Value Description gcc __GNUC__ 4 version major __GNUC_MINOR__ 4 version revision/minor clang __clang__ __clang_major__ version major __clang_minor__ version minor VisualC++ _MSC_VER 1910 VVRR 15.0(2017) _MSC_FULL_VER 191025017 VVRRPPPP SolarisStudio __SUNPRO_C 0x5120 0xVRP version,revision,patch (upto 5.9) 0xVRRP later, e.g. ss12.3/compiler5.12 __SUNPRO_CC IBM xlC __ibmxl__ clang-based compiler __ibmxl_vrm__ 0x0D010600 0xVVRRMM00 version,release,modification,fix e.g. 13.1.6.1 __ibmxl_version__ 13 version __ibmxl_release__ 1 release __ibmxl_modification__ 6 modification __ibmxl_ptf_fix_level__ 1 fix __xlC__ 1 legacy compiler, 0xVVRR, don&amp;rsquo;t use HP aCC __HP_aCC 12100 VVRRPP (version,revision,patch) </description>
    </item>
    <item>
      <title>Images &amp; SVGs</title>
      <link>/blogs/online-tools/img-svg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/online-tools/img-svg/</guid>
      <description>SVG Repos </description>
    </item>
    <item>
      <title>Implicit Type Convertion In Overload</title>
      <link>/core/c&#43;&#43;/pitfalls/overload-implicit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/pitfalls/overload-implicit/</guid>
      <description>Use Case Examples overload-implicit.cpp
#include &amp;lt;iostream&amp;gt; using namespace std; /* test overload implicit convertion, especially in constructor */ class A { public: explicit A(int v) { cout &amp;lt;&amp;lt; &amp;#34;A.ctor int: &amp;#34; &amp;lt;&amp;lt; v &amp;lt;&amp;lt; endl;} A(short v) { cout &amp;lt;&amp;lt; &amp;#34;A.ctor short: &amp;#34; &amp;lt;&amp;lt; v &amp;lt;&amp;lt; endl;} A(const char* v) { cout &amp;lt;&amp;lt; &amp;#34;A.ctor const char*: &amp;#34; &amp;lt;&amp;lt; v &amp;lt;&amp;lt; endl; } A(const unsigned char* v) { cout &amp;lt;&amp;lt; &amp;#34;A.ctor const unsigned char*: &amp;#34; &amp;lt;&amp;lt; v &amp;lt;&amp;lt; endl; } A(const void* v) { cout &amp;lt;&amp;lt; &amp;#34;A.</description>
    </item>
    <item>
      <title>Indirect Varaiable</title>
      <link>/core/shell/bash/var-indirect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/var-indirect/</guid>
      <description>Indirect variable is a variable that its name is the value of another variable.
#! /bin/bash # demonstrate the usage of indrect variables # ${!F} value of a variable that its name is value of variable F # A=aloha A1=a1 B=banana C= D=delta function exports { for f in $*; do echo $f=${!f} export $f=${!f} done } exports A A1 B C D # ${!A*} means list of names of all variables that have name start with A echo A-all=${!</description>
    </item>
    <item>
      <title>Install from docker</title>
      <link>/core/jenkins/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/docker/</guid>
      <description>$ docker pull jenkins/jenkins $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE jenkins/jenkins latest 487c02871276 7 days ago 460MB usage
docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins ... Jenkins initial setup is required. An admin user has been created and a password generated. Please use the following password to proceed to installation: 0f8a2682be274cc283f253e68775cfad This may also be found at: /var/jenkins_home/secrets/initialAdminPassword ... ************************************************************* ************************************************************* ************************************************************* Jenkins initial setup is required.</description>
    </item>
    <item>
      <title>Introduction</title>
      <link>/core/git/exercise/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/exercise/intro/</guid>
      <description></description>
    </item>
    <item>
      <title>Introduction</title>
      <link>/core/jenkins/groovy/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/groovy/intro/</guid>
      <description>Online Resource Groovy Docs JavaTpoint - Groovy Online Compiler Sample code
/* Hello World in Groovy */ println(&amp;#34;Hello world&amp;#34;) v=true if (v) println(&amp;#34;v=${v}&amp;#34;) Groovy Web Console fast and dedicate to groovy Tutorialspoint Multiple languages except for groovy
OneCompiler (other langs as well) EasyCompile Online Groovy Editor </description>
    </item>
    <item>
      <title>jar</title>
      <link>/core/java/ant/jar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/ant/jar/</guid>
      <description>A typical jar task that generates a jar file.
&amp;lt;jar destfile=&amp;#39;filename.jar&amp;#39; basedir=&amp;#39;base/of/class&amp;#39; includes=&amp;#39;com/sample/**/*.class&amp;#39; &amp;gt; &amp;lt;!-- manifest that is used for executable jar --&amp;gt; &amp;lt;manifest&amp;gt; &amp;lt;attribute name=&amp;#34;Main-Class&amp;#34; value=&amp;#34;com.sample.StartClass&amp;#34;/&amp;gt; &amp;lt;/manifest&amp;gt; &amp;lt;!-- optional --&amp;gt; &amp;lt;!-- other folder --&amp;gt; &amp;lt;fileset dir=&amp;#39;other/folder&amp;#39; includes=&amp;#39;**/*.class&amp;#39; /&amp;gt; &amp;lt;!-- other folder with prefix --&amp;gt; &amp;lt;zipfileset dir=&amp;#39;other/folder2&amp;#39; prefix=&amp;#39;other/prefix&amp;#39; includes=&amp;#39;**/*.class&amp;#39; /&amp;gt; &amp;lt;!-- files in a jar/zip file --&amp;gt; &amp;lt;zipfileset src=&amp;#39;other/depend/lib.jar&amp;#39; includes=&amp;#39;**/*.class&amp;#39; /&amp;gt; &amp;lt;/jar&amp;gt; </description>
    </item>
    <item>
      <title>Java Container amazoncorretto</title>
      <link>/core/docker/amazoncorretto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/amazoncorretto/</guid>
      <description>Amazon offers useful docker images for different JRE versions, i.e. amazoncorretto, which is based on amazonlinux:2, which is based on centos/rhel.
j17$ cat /etc/os-release NAME=&amp;#34;Amazon Linux&amp;#34; VERSION=&amp;#34;2&amp;#34; ID=&amp;#34;amzn&amp;#34; ID_LIKE=&amp;#34;centos rhel fedora&amp;#34; VERSION_ID=&amp;#34;2&amp;#34; PRETTY_NAME=&amp;#34;Amazon Linux 2&amp;#34; ANSI_COLOR=&amp;#34;0;33&amp;#34; CPE_NAME=&amp;#34;cpe:2.3:o:amazon:amazon_linux:2&amp;#34; HOME_URL=&amp;#34;https://amazonlinux.com/&amp;#34; Unfortunately some commn utilities are not include, e.g. ping
Find out what package contains ping j17$ yum whatprovides ping Loaded plugins: ovl, priorities 8 packages excluded due to repository priority protections AmazonCorretto/x86_64/filelists_db | 80 kB 00:00:00 amzn2-core/2/x86_64/filelists_db | 54 MB 00:00:15 iputils-20160308-10.</description>
    </item>
    <item>
      <title>Jenkins &#43; Git</title>
      <link>/core/jenkins/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/git/</guid>
      <description></description>
    </item>
    <item>
      <title>Job</title>
      <link>/core/jenkins/python-binding/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/job/</guid>
      <description>API Description get_job_info(name, depth=0, fetch_all_builds=False) Get job information dictionary get_job_info_regex(pattern, depth=0, folder_depth=0) Get a list of jobs information that contain names which match the regex pattern. get_job_name(name) Return the name of a job using the API. debug_job_info(job_name) Print out job info in more readable format. get_jobs(folder_depth=0, view_name=None) Get list of jobs. get_all_jobs(folder_depth=None) Get list of all jobs recursively to the given folder depth. copy_job(from_name, to_name) Copy a Jenkins job. rename_job(from_name, to_name) Rename an existing Jenkins job delete_job(name) Delete Jenkins job permanently.</description>
    </item>
    <item>
      <title>Lambda and Enclosure</title>
      <link>/core/rosetta/feature/lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/feature/lambda/</guid>
      <description></description>
    </item>
    <item>
      <title>launch-by-docker</title>
      <link>/core/db/postgres/launch-by-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/postgres/launch-by-docker/</guid>
      <description>The quickest setup is using docker.
The Server get postgres docker image docker pull postgres docker image ls postgres REPOSITORY TAG IMAGE ID CREATED SIZE postgres latest f51c55ac75ed 2 weeks ago 314MB prepare a folder that contains pg data and a file that contains environment variables to avoid expose them on command-line a folder on the host that actually contains database data mkdir -p /c/opt/pg/data cat &amp;gt; /c/opt/pg/svr.env POSTGRES_PASSWORD=super-acc-postgres-passwd ^D create a shell script to launch server docker run -d --name dev-pg --env-file /c/opt/pg/svr.</description>
    </item>
    <item>
      <title>Levenshtein Distance</title>
      <link>/core/algorithm/string/levenshtein/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/algorithm/string/levenshtein/</guid>
      <description>Reference
github: trekhleb/javascript-algorithms github: andrei-m/levenshtein.js </description>
    </item>
    <item>
      <title>link whole archive statically</title>
      <link>/core/c&#43;&#43;/make/whole-archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/whole-archive/</guid>
      <description>Why By default, only objects that contain (directly) referenced symbols are extracted to the target executable (either an application or a shared object) from an archive by the linker. It is possible that required objects are not linked in some special cases, when they are not directly referenced but are invoked indirectly at runtime, such as:
objects created by factory pattern. callbacks through pointers place-holders that will be invoked by applications (as a shared object) or external linked shared objects (as a host application) How The linker has a pair of options to turn on/off the behavior of extracting the whole archive</description>
    </item>
    <item>
      <title>Linux Software Base</title>
      <link>/core/linux/lsb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/lsb/</guid>
      <description>Debian/Ubuntu Ubuntu
# cat /etc/lsb-release DISTRIB_ID=Ubuntu DISTRIB_RELEASE=22.04 DISTRIB_CODENAME=jammy DISTRIB_DESCRIPTION=&amp;#34;Ubuntu 22.04.1 LTS&amp;#34; # cat /etc/os-release PRETTY_NAME=&amp;#34;Ubuntu 22.04.1 LTS&amp;#34; NAME=&amp;#34;Ubuntu&amp;#34; VERSION_ID=&amp;#34;22.04&amp;#34; VERSION=&amp;#34;22.04.1 LTS (Jammy Jellyfish)&amp;#34; VERSION_CODENAME=jammy ID=ubuntu ID_LIKE=debian HOME_URL=&amp;#34;https://www.ubuntu.com/&amp;#34; SUPPORT_URL=&amp;#34;https://help.ubuntu.com/&amp;#34; BUG_REPORT_URL=&amp;#34;https://bugs.launchpad.net/ubuntu/&amp;#34; PRIVACY_POLICY_URL=&amp;#34;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&amp;#34; UBUNTU_CODENAME=jammy Debian
# cat /etc/os-release PRETTY_NAME=&amp;#34;Debian GNU/Linux 11 (bullseye)&amp;#34; NAME=&amp;#34;Debian GNU/Linux&amp;#34; VERSION_ID=&amp;#34;11&amp;#34; VERSION=&amp;#34;11 (bullseye)&amp;#34; VERSION_CODENAME=bullseye ID=debian HOME_URL=&amp;#34;https://www.debian.org/&amp;#34; SUPPORT_URL=&amp;#34;https://www.debian.org/support&amp;#34; BUG_REPORT_URL=&amp;#34;https://bugs.debian.org/&amp;#34; Or install a small package (debian/ubuntu)
# apt install lsb-release # lsb_release -a root@12703d7a4e1d:/# lsb_release -a No LSB modules are available. Distributor ID: Debian Description: Debian GNU/Linux 11 (bullseye) Release: 11 Codename: bullseye CentOS # cat /etc/os-release NAME=&amp;#34;CentOS Linux&amp;#34; VERSION=&amp;#34;7 (Core)&amp;#34; ID=&amp;#34;centos&amp;#34; ID_LIKE=&amp;#34;rhel fedora&amp;#34; VERSION_ID=&amp;#34;7&amp;#34; PRETTY_NAME=&amp;#34;CentOS Linux 7 (Core)&amp;#34; ANSI_COLOR=&amp;#34;0;31&amp;#34; CPE_NAME=&amp;#34;cpe:/o:centos:centos:7&amp;#34; HOME_URL=&amp;#34;https://www.</description>
    </item>
    <item>
      <title>Loop</title>
      <link>/core/shell/bat/loop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bat/loop/</guid>
      <description>Syntax for %%x in (list) do (commands) parenthese is optional if there&amp;rsquo;s only one command parenthese around list is required list can be literal or a variable, separated by space, comma or semi-comma Example @echo off echo loop argv: (%*) for %%x in (%*) do echo %%x set str=hello, world; c:\windows; &amp;#34;c:\program files&amp;#34; echo loop str=(%str%) for %%x in (%str%) do echo str token: %%x echo loop literal string a,b, c;d for %%x in (a,b, c;d) do echo loop literal: %%x Result</description>
    </item>
    <item>
      <title>Manuals of Compilers</title>
      <link>/core/c&#43;&#43;/misc/manuals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/manuals/</guid>
      <description> Solaris/Oracle Studio Solaris Studio 12.4 Oracle Developer Studio 12.6 IBM Open XL C/C++ for AIX 16.1, C++11/14 13.1, partial C++11 </description>
    </item>
    <item>
      <title>math in css</title>
      <link>/web/css/math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/math/</guid>
      <description></description>
    </item>
    <item>
      <title>Microphone Array</title>
      <link>/iot/electronics/audio/microphone-array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/electronics/audio/microphone-array/</guid>
      <description>amazon Microphone Module, USB2.0 4 MIC Array Module Voice Recognition Intelligent Noise Reduction PCB MIC Module for Sound Video Calls, 8m26.2ft Pickup Distance, $64 Voice Recognition 6+1 I2S Microphone Array Module Sound Source Localization Beamforming Development Board Accessories Sound Source Locator, $37 High Sensitivity Microphone Audio Amplifier Module Output 20dB Gain Low Noise DC 3.3V/5V Sound Sensor, $9 speaker Gikfun 2 inch 4Ohm 3W Full Range Audio Speaker Stereo Woofer Loudspeaker for Arduino (Pack of 2pcs) EK1725, $14 Gikfun Round Micro Speaker Diameter 28mm 8Ohm 8R 2W for Arduino (Pack of 2pcs) AE1054, $9, 6mm thickness </description>
    </item>
    <item>
      <title>Misc</title>
      <link>/core/jenkins/python-binding/misc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/misc/</guid>
      <description>API Description get_info(item=&amp;rsquo;&amp;rsquo;, query=None) Get information on this Master or item on Master. get_whoami(depth=0) Get information about the user account that authenticated to Jenkins. get_version() Get the version of this Master. quiet_down() Prepare Jenkins for shutdown. run_script(script, node=None) Execute a groovy script on the jenkins master or on a node if specified.. wait_for_normal_op(timeout) Wait for jenkins to enter normal operation mode. get_info(item=&amp;rsquo;&amp;rsquo;, query=None) Get information on this Master or item on Master.</description>
    </item>
    <item>
      <title>Miscelleous</title>
      <link>/core/rosetta/runtime/misc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/runtime/misc/</guid>
      <description></description>
    </item>
    <item>
      <title>mitmproxy - Man-In-The-Middle</title>
      <link>/core/network/mitmproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/network/mitmproxy/</guid>
      <description>mitmproxy is a free and open source interactive HTTPS proxy.
Refs official site and doc Bad Gateway How to inspect network traffic using mitmproxy Useful tips for mitmproxy Creating scripts for mitmproxy How to Man in the Middle HTTPS Using mitmproxy </description>
    </item>
    <item>
      <title>Motor</title>
      <link>/iot/electronics/motor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/electronics/motor/</guid>
      <description>DC brushless motor servo motor step motor hub motor </description>
    </item>
    <item>
      <title>Motor Driver</title>
      <link>/iot/electronics/motor-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/electronics/motor-driver/</guid>
      <description>Reference What is the Difference Between L293D and L298N Motor Driver?
Stepper Motor MAX useful RPM Test
Ada Fruit Motor Seletion Guide</description>
    </item>
    <item>
      <title>Moving Ball</title>
      <link>/web/svg/greensock/moving-ball/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/greensock/moving-ball/</guid>
      <description> Click the button Go!, the ball moves along the path back-and-forth twice.
305 </description>
    </item>
    <item>
      <title>Musics</title>
      <link>/blogs/movies/musics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/movies/musics/</guid>
      <description></description>
    </item>
    <item>
      <title>Mutex, CriticalArea and Lock</title>
      <link>/core/rosetta/threads/mutex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/rosetta/threads/mutex/</guid>
      <description>mutex
lock
re-enter</description>
    </item>
    <item>
      <title>Nm - Show Symbols of a Module</title>
      <link>/core/c&#43;&#43;/misc/nm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/nm/</guid>
      <description>NM nm is a utility on posix systems that can list symbols of a module, such as .o, .a, .so, and excutables. Here are common options
option long-option description -A &amp;ndash;print-file-name filename the symbol is found, useful on archive -o the same with -A -C &amp;ndash;demangle[=style] demangle C++ names -g &amp;ndash;external-only external symbols can be accessed by external modules -l &amp;ndash;line-numbers show filename:line for each name, if the debug information is found in the module -u &amp;ndash;undefined-only external symbols referenced &amp;ndash;defined-only only defined symbols for each object file The most common types of symbols (upper-case for external symbols)</description>
    </item>
    <item>
      <title>Node</title>
      <link>/core/jenkins/python-binding/node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/node/</guid>
      <description>API Description get_nodes(depth=0) Get a list of nodes connected to the Master get_node_info(name, depth=0) Get node information dictionary node_exists(name) Check whether a node exists assert_node_exists(name, exception_message=&amp;lsquo;node[%s] does not exist&amp;rsquo;) Raise an exception if a node does not exist delete_node(name) Delete Jenkins node permanently. disable_node(name, msg=&amp;rsquo;&#39;) Disable a node enable_node(name) Enable a node create_node(name, &amp;hellip;) Create a node get_node_config(name) Get the configuration for a node. reconfig_node(name, config_xml) Change the configuration for an existing node.</description>
    </item>
    <item>
      <title>npm</title>
      <link>/web/js/npm/npm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/npm/npm/</guid>
      <description>Webpack Express Socket.io: let’s go to real time! Socket.IO + Express | Our Code World PostgreSQL pg-promise API pg-promise by by example brianc/node-postgres: PostgreSQL client for node.js. SQLite sqlite3 Handlebars.js: Minimal Templating passport.js - Windows Authentication strategy Bower hapi.js Modules mongodb - npm js-yaml - npm better-sqlite3/api.md at master · JoshuaWise/better-sqlite3 nedb: The JavaScript Database, for Node.js, nw.js, electron and the browser Lovefield: The Data Access Library that Loves You xml2js - npm Liquibase | Database Refactoring | Liquibase sax - npm fast-xml-parser - npm Packaging Node.</description>
    </item>
    <item>
      <title>OCSP</title>
      <link>/core/security/ocsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/security/ocsp/</guid>
      <description>Certificate Revocation reasons
compromised, e.g. stolen expiration CRL - Certificate Revocation Lists
maintained by a CA (Certificate Authority) content: serial number, date distribution: published URL limitations size updates: not real-time (secheduled, on-demand) scalability OCSP (Online Certificate Status Protocol) obtain the real-time revocation status of a digital certificate allows clients to query the CA for specific certificate status (vs download-and-parse) how-work a client sends a certificate query to the OCSP responder the responder checks its database the responder sends a response indicating certificate validity, revocation or unknown status OCSP Stapling signed OCSP response CRL as fallback </description>
    </item>
    <item>
      <title>od</title>
      <link>/core/linux/utils/od/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/od/</guid>
      <description>od - dump files in octal and other formats.
Common Options option description j,&amp;ndash;skip-bytes=BYTES skip BYTES input -N,&amp;ndash;read-bytes=BYTES limit dump to BYTES input bytes -t,&amp;ndash;format=Type output format a: named character c: printable character or backslash escaped d[SIZE]: signed decimal f[SIZE]: floating point o[SIZE]: octal u[SIZE]: unsigned decimal x[SIZE]: hexadecimal -a same as -t a -b same as -t o1 -c same as -t c -d same as -t u2 -f same as -t fF -i same as -t dI -l same as -t dL -o same as -t o2 -s same as -t d2 -x same as -t x2 -w,&amp;ndash;width=BYTES output BYTES bytes per output line, 32 by default </description>
    </item>
    <item>
      <title>ODBC Configures</title>
      <link>/core/db/odbc/odbc-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-config/</guid>
      <description>Windows In spite of using the application ODBC Administrator to config ODBC drivers and DSN, you can config ODBC directly in registry.
Registry /HKEY_LOCAL_MACHINE/SOFTWARE/ODBC ODBC.INI/ ODBC Data Sources/ - list of DSN/driver pairs mydsn - DSN name Driver=mydriver - name of driver, match ODBCINST.INI Description=text - description of this DSN other-key=value - driver dependent, e.g. db path, uid, pwd ODBCINST.INI/ ODBC Drivers - list of installed drivers mydriver=installed - every driver has a record name=installed mydriver/ - driver info: location and setup Driver=path/to/dll - pathname to driver dll Setup=path/to/dll - pathname to driver setup dll (may the same with Driver) Description=text - description of the driver for simba drivers, also define \HKEY_LOCAL_MACHINE\SOFTWARE\Simba mydriver/Driver/ ErrorMessagesPath=path/to/ErrorMessages Note:</description>
    </item>
    <item>
      <title>ODBC Return Code and Common Constants</title>
      <link>/core/db/odbc/odbc-const/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/odbc-const/</guid>
      <description>Return Code Name Value Description SQL_SUCCESS 0 SQL_SUCCESS_WITH_INFO 1 SQL_STILL_EXECUTING 2 SQL_ERROR -1 SQL_INVALID_HANDLE -2 SQL_NEED_DATA 99 SQL_NO_DATA 100 ver&amp;gt;3.0 SQL_NO_DATA_FOUND 100 alias of SQL_NO_DATA, in sqlext.h Note: in sql.h define SQL_SUCCEEDED(rc) (((rc) &amp;amp; (~1)) == 0) ODBC SQLSTATE Special Length Name Value Description SQL_NULL_DATA -1 value is null SQL_DATA_AT_EXEC -2 value will be given at execute time SQL_NTS -3 the string is null-terminated SQL_NO_TOTAL -4 in SQLGetData, total data length is not available, in sqlext.</description>
    </item>
    <item>
      <title>Online Resources</title>
      <link>/iot/freecad/online-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/freecad/online-resources/</guid>
      <description>Wiki Official Wiki Youtube FreeCAD for Beginners </description>
    </item>
    <item>
      <title>Online Resources</title>
      <link>/web/svg/svg&#43;js/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/svg&#43;js/links/</guid>
      <description> Interactive SVGs Powerful online SVG editor Everything SVG </description>
    </item>
    <item>
      <title>Online Resources</title>
      <link>/web/vue/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/resources/</guid>
      <description> Debugging · electron-vue </description>
    </item>
    <item>
      <title>Online Shopping</title>
      <link>/iot/arduino/shopping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/arduino/shopping/</guid>
      <description> Canada The World </description>
    </item>
    <item>
      <title>Open Source Packages for Platforms</title>
      <link>/core/open-source/packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/open-source/packages/</guid>
      <description> Platform Repository Description aix AIX Open Source Packages hpux Hewlett Packard Enterprise Community solaris Solaris Applications and Packages </description>
    </item>
    <item>
      <title>Operator</title>
      <link>/core/jenkins/groovy/op/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/groovy/op/</guid>
      <description>ternary result = string ? &amp;#39;Found&amp;#39; : &amp;#39;Not found&amp;#39; elvis display_name = user.name ?: &amp;#39;Anonymous&amp;#39; atomic_number ?= 2 env = [bb: &amp;#39;3.x&amp;#39;, name: &amp;#39;who&amp;#39;] branch = env.b ?: &amp;#34;1.0&amp;#34; println(&amp;#34;branch=${branch}&amp;#34;) // branch=1.0 pattern p = ~&amp;#39;foo&amp;#39; // single or double quotes p = ~$/dollar/slashy $ string /$ // the dollar-slashy string lets you use slashes and the dollar sign without having to escape them p = ~&amp;#34;${pattern}&amp;#34; // GString use escape prefix for (?</description>
    </item>
    <item>
      <title>Other Movie Sites</title>
      <link>/blogs/movies/other-sites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/movies/other-sites/</guid>
      <description></description>
    </item>
    <item>
      <title>Overview</title>
      <link>/blogs/camino/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/camino/overview/</guid>
      <description>Where can I start walking the Camino? Name of the place Distance to Santiago From SJPDP Saint-Jean-Pied-de-Port 770 0 Roncesvalles 746 24 Pamplona 702 68 Logroño 606 164 Burgos 483 287 León 319 451 Astorga 267 503 O Cebreiro 162 608 Sarria 116 654 Santiago 0 770 Ride With GPS - interactive map for the French Way </description>
    </item>
    <item>
      <title>Overview</title>
      <link>/core/docker/qemu/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/qemu/overview/</guid>
      <description>Resources Official Documents Debian - QEMU Debian - QemuUserEmulation CTT - Setup Qemu in Debian Linux Cross compiling for arm or aarch64 on Debian or Ubuntu Install the ARM cross compiler toolchain on your Linux PC Scratchbox - the home of the cross-compilation toolkit project. </description>
    </item>
    <item>
      <title>Overview</title>
      <link>/core/linux/performance/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/performance/overview/</guid>
      <description>References:
Brendan&amp;rsquo;s Site </description>
    </item>
    <item>
      <title>Overview</title>
      <link>/iot/electronics/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/electronics/overview/</guid>
      <description>online resources breakout board </description>
    </item>
    <item>
      <title>P4 info</title>
      <link>/core/git/p4/p4info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/p4/p4info/</guid>
      <description>info -- Display client/server information p4 info [-s] Info lists information about the current client (user name, client name, applicable client root, client current directory, and the client IP address) and some server information (server IP address, server root, date, uptime, version and license data). The -s option produces &amp;#39;short&amp;#39; output that omits any information that requires a database lookup such as the client root). Sample result
jasonz@VANLWIN0056:/mnt/c/wks/touchstone/booster/it$ p4 info User name: jasonz Client name: jasonz_wsl Client host: VANLWIN0056 Client root: /home/jasonz/wks Current directory: /mnt/c/wks/touchstone/booster/it Peer address: 10.</description>
    </item>
    <item>
      <title>P4 Online Documents</title>
      <link>/core/git/p4/p4-doc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/p4/p4-doc/</guid>
      <description>Helix Core QuickStart Command-Line (P4) Guide Command-Line (P4) Reference </description>
    </item>
    <item>
      <title>Page Basic Info</title>
      <link>/web/hugo/tips/page-info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/tips/page-info/</guid>
      <description> variable description .Title title item in front-matters .File file pathname relative to home (&amp;hellip;/.index.md for sections) .IsHome true only for home page (this is quite obviously) .IsNode true for node (none-leaf-node in the content tree), including home page .IsPage true only for leaf-node, false for all nodes and home .Kind string value: home,section,page,taxonomy,taxonomyTerm .Type Toplevel section name (sections directly under home), &amp;lsquo;page&amp;rsquo; for home </description>
    </item>
    <item>
      <title>page bundle test</title>
      <link>/web/hugo/page-bundle-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/page-bundle-test/</guid>
      <description>Image SVG PNG Code </description>
    </item>
    <item>
      <title>Parallel Jobs in Declarative Pipeline</title>
      <link>/core/jenkins/pipeline/parallel-declare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/parallel-declare/</guid>
      <description>Run several jobs (for example, multiple instances of sample pipeline) in parallel, with some common parameters (e.g. DRV_LABEL) and preset other parameters. Of course you can run different pipelines with different job name. This is quite common in a release build, run one or more pipelines with different parameters.
By setting build description, it is easier to find different build when multiple instances is used with a single pipeline.
pipeline { agent none parameters { string name: &amp;#34;DRV_LABEL&amp;#34;, defaultValue: &amp;#34;head&amp;#34;, description: &amp;#39;product label&amp;#39; } stages { stage(&amp;#39;build-parallel&amp;#39;) { parallel { stage(&amp;#39;release-64&amp;#39;) { steps { build job: &amp;#39;task dump&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;release-64&amp;#39;), string(name: &amp;#39;DRV_LABEL&amp;#39;, value: &amp;#34;${params.</description>
    </item>
    <item>
      <title>Parallel Jobs in Script</title>
      <link>/core/jenkins/pipeline/parallel-script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/parallel-script/</guid>
      <description>parallel can be used as a function in a script. It accepts a map of closure, where the key is the name of stage, and the closure is a snippet that starts a job.
/* run jobs in parallel */ properties([ parameters( [ string (name: &amp;#39;DRV_LABEL&amp;#39;, description: &amp;#39;Product label&amp;#39;), ] ) ]) job_base = &amp;#39;Cloud/ODBC/Snowflake/poc&amp;#39; def build_params = [] params.each { if (it.key ==~ /_LABEL/) build_params.add(string(name: &amp;#34;${it.key}&amp;#34;, value: &amp;#34;${it.value}&amp;#34;)) } job_list = [ [ name: &amp;#39;build-win&amp;#39;, pipeline: &amp;#39;w2012r2-vs2015&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#34;build win: w2012r2&amp;#34;), string(name: &amp;#39;COMPILER&amp;#39;, value: &amp;#39;vs2015&amp;#39;), string(name: &amp;#39;BUILDTARGET&amp;#39;, value: &amp;#39;release&amp;#39;), ] ], [ name: &amp;#39;build-linux&amp;#39;, pipeline: &amp;#39;centos7-gcc5_5&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#34;build linux: centos7&amp;#34;), string(name: &amp;#39;COMPILER&amp;#39;, value: &amp;#39;gcc5_5&amp;#39;), string(name: &amp;#39;BUILDTARGET&amp;#39;, value: &amp;#39;debug&amp;#39;), ] ], ] pipeline { agent none stages { stage(&amp;#39;build-parallel&amp;#39;) { steps { script { def parallel_jobs = [:] // a map of closures for (job in job_list) { def name = &amp;#34;${job.</description>
    </item>
    <item>
      <title>PAT - Personal Access Token</title>
      <link>/core/git/github/token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/github/token/</guid>
      <description>Github has disabled password to access through command-line utilities and API authentication. Instead, PAT is used whenever password is required. PAT is a program generated string which can be considered a strong version of password, because it looks a random string, stronger than human-generated string password.
Here is the steps to generate PAT:
start from any github page click on the top-right icon that is used for logout/settings/&amp;hellip; click menu sequence: Settings|Developer Settings|Personal access tokens click button &amp;ldquo;Generate new token&amp;rdquo; fill the form and generate a token a note describe the purpose of the token expire is strongly recommended enable a list of scope (grants) the token is generated and displayed, copy and save it to some safe place.</description>
    </item>
    <item>
      <title>Patch</title>
      <link>/core/git/diff-patch/patch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/diff-patch/patch/</guid>
      <description>chatgpt To generate a patch from a branch, you need to use the git format-patch command. This command will create one or more files that contain the changes made in the branch, which you can then send to someone else or apply to another branch. You also need to specify which commits you want to include in the patch, and which branch you want to compare with. For example, if you want to create a patch for all the commits in a branch named feature/new-ui that are not in the master branch, you can use this command:</description>
    </item>
    <item>
      <title>Patch</title>
      <link>/core/linux/utils/patch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/patch/</guid>
      <description>Syntax Hunk Failed patching file lib/platform.c Hunk #1 FAILED at 266. Hunk #2 FAILED at 292. 2 out of 2 hunks FAILED -- saving rejects to file lib/platform.c.rej </description>
    </item>
    <item>
      <title>Path</title>
      <link>/web/svg/elements/path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/elements/path/</guid>
      <description> </description>
    </item>
    <item>
      <title>path-like</title>
      <link>/core/java/ant/path-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/ant/path-like/</guid>
      <description>&amp;lt;path id=&amp;#39;base.path&amp;#39;&amp;gt; &amp;lt;pathelement path=&amp;#39;${classpath}&amp;#39;/&amp;gt; &amp;lt;pathelement path=&amp;#39;${env.PATH}&amp;#39;/&amp;gt; &amp;lt;fileset dir=&amp;#39;lib&amp;#39;&amp;gt; &amp;lt;include name=&amp;#39;**/*.jar&amp;#39;/&amp;gt; &amp;lt;/fileset&amp;gt; &amp;lt;/path&amp;gt; &amp;lt;classpath id=&amp;#39;class.path&amp;#39;&amp;gt; &amp;lt;pathelement location=&amp;#39;classes&amp;#39;/&amp;gt; &amp;lt;pathelement path=&amp;#39;${env.CLASSPATH}&amp;#39;/&amp;gt; &amp;lt;fileset dir=&amp;#39;lib&amp;#39;&amp;gt; &amp;lt;include name=&amp;#39;**/*.jar&amp;#39;/&amp;gt; &amp;lt;exclude name=&amp;#39;j8/*.jar&amp;#39;/&amp;gt; &amp;lt;/fileset&amp;gt; &amp;lt;/path&amp;gt; location: single path element path: os-dependent list of paths, e.g. path1:path2:path3 ${toString: path_ref} convert path-like to OS-spec string &amp;lt;path id=&amp;#34;lib.path.ref&amp;#34;&amp;gt; &amp;lt;fileset dir=&amp;#34;lib&amp;#34; includes=&amp;#34;*.jar&amp;#34;/&amp;gt; &amp;lt;/path&amp;gt; &amp;lt;javac srcdir=&amp;#34;src&amp;#34; destdir=&amp;#34;classes&amp;#34;&amp;gt; &amp;lt;compilerarg arg=&amp;#34;-Xbootclasspath/p:${toString:lib.path.ref}&amp;#34;/&amp;gt; &amp;lt;/javac&amp;gt; </description>
    </item>
    <item>
      <title>Performance Monitors</title>
      <link>/core/linux/performance/performance-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/performance/performance-monitor/</guid>
      <description>Ref:
The Geek Stuff - Performance Monitoring Toools Brendan&amp;rsquo;s Linux Performance WSL/ubuntu perf doesn&amp;rsquo;t work after installing in WSL2/ubuntu.
sudo apt install linux-oem-5.6-tools-common perf WARNING: perf not found for kernel 4.19.128-microsoft You may need to install the following packages for this specific kernel: linux-tools-4.19.128-microsoft-standard linux-cloud-tools-4.19.128-microsoft-standard You may also want to install one of the following packages to keep up to date: linux-tools-standard linux-cloud-tools-standard No lucks to install linux-tools-4.19.128-microsoft-standard, not build from microsoft perf source.</description>
    </item>
    <item>
      <title>picojson</title>
      <link>/core/c&#43;&#43;/misc/picojson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/picojson/</guid>
      <description>picojson is a tiny header only json c++ library. It only uses standard C++ library without other dependencies. It supports C++ standard before C++11.</description>
    </item>
    <item>
      <title>PIP Misc</title>
      <link>/core/python/pip-misc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/pip-misc/</guid>
      <description>SSL cert failure The most common issue to install a package in a company network is
SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:581) this is because the company network blocks the access for various reasons such as security concerns.
To overwrite that, you need to specify trusted-host by observing the source host from pip output.
The most common pip source hosts are
pypi.org files.pythonhosted.org So following command resolves most of the problems</description>
    </item>
    <item>
      <title>Pipeline Syntax</title>
      <link>/core/jenkins/pipeline/syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/syntax/</guid>
      <description>Declarative Pipeline pipeline { /* sections: agent, post, stages, steps */ } Catalog Tag Description Sections contain one or more Directives or Steps. agent can be top or stage leve post one or more additional steps that are run upon the completion of a Pipeline’s or stage’s run stages Containing a sequence of one or more stage directives steps a series of one or more steps to be executed in a given stage directive matrix Directives environment a sequence of key-value pairs options configuring Pipeline-specific options from within the Pipeline itself parameters a list of parameters that a user should provide when triggering the Pipeline triggers the automated ways in which the Pipeline should be re-triggered.</description>
    </item>
    <item>
      <title>Pitfall - Big Five</title>
      <link>/core/c&#43;&#43;/pitfalls/big5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/pitfalls/big5/</guid>
      <description>In Big-Five (or Big-Three in prev-11) theory, we need to define copy/move constructors and assign/move operators (along with destructor, virtual if derived classes are expected).
The question is, in the derived class, do we need to define them, especially when we don&amp;rsquo;t have extra data members and actions in derived class? If we do define them, what pitfalls can be?
copy/move constructor Not necessary if your derived class doesn&amp;rsquo;t have extra members and actions to care about, beause by default the compiler will use member-to-member-copy method to generate copy constructor, as long as the base class hanles copy/move correctly, everything is fine.</description>
    </item>
    <item>
      <title>Pitfalls - template</title>
      <link>/core/c&#43;&#43;/lang/pitfall-template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/lang/pitfall-template/</guid>
      <description>this Because template is at source level, there&amp;rsquo;s no information of the external base class, this-&amp;gt; is required to reference members of base class that are not in the scope. Following is an example:
#include &amp;lt;vector&amp;gt; template &amp;lt;typename T&amp;gt; class my_vector : public std::vector&amp;lt;T&amp;gt; { size_t length() const { // this would fail because the compiler doesn&amp;#39;t know // where size() comes from before instantiating // return size(); return this-&amp;gt;size(); } }; </description>
    </item>
    <item>
      <title>Pkgs.org</title>
      <link>/core/linux/pkgs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/pkgs/</guid>
      <description>Pkgs.org is NOT a package repo, it is a pakcage search engine. After a package is found, you need to go to the actual package repository to download or install. But usually pkgs.org contains Install Howto section.
Example gcc-11 is not in standard package of centos7 (which is 4.8), we can find one package on CentOS SCLo RH repository through pkgs.org
Beyond the source and download links, here is the install info</description>
    </item>
    <item>
      <title>Plugins</title>
      <link>/core/jenkins/python-binding/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/plugins/</guid>
      <description>API Description get_plugins_info(depth=2) Get all installed plugins information on this Master. get_plugin_info(name, depth=2) Get an installed plugin information on this Master. get_plugins(depth=2) Return plugins info using helper class for version comparison install_plugin(name, include_dependencies=True) Install a plugin and its dependencies from the Jenkins public repository get_plugins_info(depth=2) Get all installed plugins information on this Master.
This method retrieves information about each plugin that is installed on master returning the raw plugin data in a JSON format.</description>
    </item>
    <item>
      <title>position</title>
      <link>/web/css/position/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/css/position/</guid>
      <description>default is absolute This is a container for children that have position=absolute by default. more text
more text
more text
more text
more text
more text
more text
more text
more text
more text
x=0, y=0 x=100, y=30 default is sticky This is a container for children that have position=sticky by default. more text
more text
more text
x=0, y=0 x=100, y=30 more text
more text
more text
more text</description>
    </item>
    <item>
      <title>postgresql user</title>
      <link>/core/db/postgres/user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/postgres/user/</guid>
      <description>hints after installed, you can access the server using postgres account as superuser from localhost login as postgres or use -U postgres (as root) from localhost, no password is required there&amp;rsquo;s no default password jdbc connection string jdbc:postgresql:&amp;lt;host[:port]&amp;gt;/&amp;lt;database&amp;gt;?user=&amp;lt;USER&amp;gt;&amp;amp;password=&amp;lt;PASSWD&amp;gt; non-alphabet character should be url-encoded, such as - to %2D create a user login as postgres run command createuser name TBC create role psql -U postgres postgres=# create database mydb; \connect mydb create table boys (id integer, name varchar(32)); create role ddp; alter role ddp with password &amp;#39;ddp-pwd&amp;#39;; grant all on database mydb to ddp; grant all on table boys to ddp; psql -U ddp -h localhost -d mydb mydb=&amp;gt; select * from boys; </description>
    </item>
    <item>
      <title>Practical Boilerplate</title>
      <link>/web/vue/boilerplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/boilerplate/</guid>
      <description>This is a practical boilerplate:
fundamental vue project structure connect front-end and back-end </description>
    </item>
    <item>
      <title>Pretty Format</title>
      <link>/core/git/log/pretty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/log/pretty/</guid>
      <description> oneline &amp;lt;hash&amp;gt; &amp;lt;title line&amp;gt; short commit &amp;lt;hash&amp;gt; Author: &amp;lt;author&amp;gt; &amp;lt;title line&amp;gt; medium commit &amp;lt;hash&amp;gt; Author: &amp;lt;author&amp;gt; Date: &amp;lt;author date&amp;gt; &amp;lt;title line&amp;gt; &amp;lt;full commit text&amp;gt; Format String %n new line %h abbreviated commit hash, %H commit hash %an author name, %ad author date, %as author date short (YYYY-MM-DD) %cn committer name, &amp;hellip; %d ref name %s subject %b body </description>
    </item>
    <item>
      <title>Private Implementation</title>
      <link>/core/c&#43;&#43;/patterns/pimpl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/patterns/pimpl/</guid>
      <description>What is Pimpl Pitfalls Explicit destructor should be implemented in the source file where Pimpl is defined and implemented, otherwise the compiler fails to delete Pimpl object. For example // in file a.h class A { A(); ~A() {} private: class Pimpl; //Pimpl* u; std::unique_ptr&amp;lt;Pimpl&amp;gt; u; }; and class A::Pimpl { friend class A; Pimpl() ... // unless using unique_ptr, ~Pimpl should be public (or accessible by owner that deletes it) ~Pimpl() .</description>
    </item>
    <item>
      <title>Promotion</title>
      <link>/core/jenkins/python-binding/promotion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/promotion/</guid>
      <description>API Description get_promotion_name(name, job_name) Return the name of a promotion using the API. assert_promotion_exists(name, &amp;hellip;) Raise an exception if a job lacks a promotion promotion_exists(name, job_name) Check whether a job has a certain promotion get_promotions_info(job_name, depth=0) Get promotion information dictionary of a job get_promotions(job_name) Get list of promotions running. delete_promotion(name, job_name) Delete Jenkins promotion permanently. create_promotion(name, job_name, config_xml) Create a new Jenkins promotion reconfig_promotion(name, job_name, config_xml) Change configuration of existing Jenkins promotion.</description>
    </item>
    <item>
      <title>Property</title>
      <link>/core/java/ant/property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/ant/property/</guid>
      <description>Important Note: properties are immutable
Show all or part of properties ex-condition.xml
&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt; &amp;lt;project name=&amp;#34;TestAntCondition&amp;#34; default=&amp;#39;all&amp;#39; basedir=&amp;#34;.&amp;#34;&amp;gt; &amp;lt;description&amp;gt;Test Ant&amp;lt;/description&amp;gt; &amp;lt;property name=&amp;#34;src.dir&amp;#34; location=&amp;#34;src/&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;dest.dir&amp;#34; location=&amp;#34;build/&amp;#34;/&amp;gt; &amp;lt;target name=&amp;#34;all&amp;#34; description=&amp;#34;dump all properties&amp;#34;&amp;gt; &amp;lt;echoproperties/&amp;gt; &amp;lt;/target&amp;gt; &amp;lt;!-- ant -f ex-condition.xml dump-java --&amp;gt; &amp;lt;target name=&amp;#34;dump-java&amp;#34; description=&amp;#34;dump properties that match pattern java\..* using search method &amp;#34;&amp;gt; &amp;lt;echoproperties regex=&amp;#39;java\..*&amp;#39; /&amp;gt; &amp;lt;/target&amp;gt; &amp;lt;/project&amp;gt; Dump all properties
$ ant -f ex-condition.xml Buildfile: /home/jasonz/codex/java/ant/ex-condition.xml all: [echoproperties] #Ant properties [echoproperties] #Thu Mar 24 09:45:11 PDT 2022 [echoproperties] awt.</description>
    </item>
    <item>
      <title>QEMU User Static Mode</title>
      <link>/core/docker/qemu/qemu-user-static/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/qemu/qemu-user-static/</guid>
      <description>Setup $ apt install binfmt-support qemu-user-static ... The following NEW packages will be installed: binfmt-support libpipeline1 qemu-user-static 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded. Need to get 41.2 MB of archives. After this operation, 288 MB of additional disk space will be used. Do you want to continue? [Y/n] y Get:1 http://deb.debian.org/debian bullseye/main amd64 libpipeline1 amd64 1.5.3-1 [34.3 kB] Get:2 http://deb.debian.org/debian bullseye/main amd64 binfmt-support amd64 2.</description>
    </item>
    <item>
      <title>Queue</title>
      <link>/core/jenkins/python-binding/queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/queue/</guid>
      <description>API Description get_queue_item(number, depth=0) Get information about a queued item (to-be-created job). get_queue_info() cancel_queue(id) Cancel a queued build. get_queue_item(number, depth=0) Get information about a queued item (to-be-created job).
The returned dict will have a “why” key if the queued item is still waiting for an executor.
The returned dict will have an “executable” key if the queued item is running on an executor, or has completed running. Use this to determine the job number / URL.</description>
    </item>
    <item>
      <title>Range</title>
      <link>/core/git/log/range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/log/range/</guid>
      <description>By Revision rev1..rev2 revision from rev1 (excluded) to rev2 (included)
rev~ and rev^ Suffix ~ to a revision parameter means the parent of that commit object. rev~&amp;lt;n&amp;gt; means the n-th generation ancestor of rev.
Suffix ^ also means the parent of the commit object, so rev^ is the same with rev~. However, rev^&amp;lt;n&amp;gt; means the n-th parent if rev has multiple parents, such as a merging commit.
rev^..rev Show only rev, i.</description>
    </item>
    <item>
      <title>Raw HTML</title>
      <link>/web/hugo/tips/html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/tips/html/</guid>
      <description>Since Hugo 0.60.0, Goldmark is used as the default markdown parser, which disables raw HTML tags by default. To enable raw HTML tags, like this page, set hugo config like below:
markup: goldmark: renderer: unsafe: true Some people propose to re-vote the default behavior to true, because people who embed raw HTML tags in markdown know what they are doing. </description>
    </item>
    <item>
      <title>readelf - display information about ELF files</title>
      <link>/core/c&#43;&#43;/misc/readelf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/misc/readelf/</guid>
      <description></description>
    </item>
    <item>
      <title>Recipes</title>
      <link>/core/git/log/recipes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/log/recipes/</guid>
      <description>-S -S &amp;lt;string&amp;gt; Look for differences that change the number of occurrences of the specified string (i.e. addition/deletion) in a file.
Similar options
-G &amp;lt;regex&amp;gt; --pickaxe-all When -S or -G finds a change, show all the changes in that changeset, not just the files that contain the change. --pickaxe-regex treat string in -S as extended regex. Interested part in a file -L&amp;lt;start&amp;gt;,&amp;lt;end&amp;gt;:&amp;lt;file&amp;gt; -L:&amp;lt;funcname&amp;gt;:&amp;lt;file&amp;gt; Trace the evolution of the line range given by &amp;lt;start&amp;gt;,&amp;lt;end&amp;gt;, or by the function name regex &amp;lt;funcname&amp;gt;, within the &amp;lt;file&amp;gt;.</description>
    </item>
    <item>
      <title>References</title>
      <link>/web/hugo/template/references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/template/references/</guid>
      <description> Gopher Academy Blog - Using Go Templates </description>
    </item>
    <item>
      <title>Refresh</title>
      <link>/web/hugo/tips/refresh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/tips/refresh/</guid>
      <description>If we want the page **jumps&amp;quot; automaticall to another url, use following head tag
&amp;lt;meta http-equiv=&amp;#34;refresh&amp;#34; content=&amp;#34;0; url=https://site/path&amp;#34;&amp;gt; 0; in content means delay in seconds create a hugo template snippet that if it is a section page and there&amp;#39;s no content jump to a new page, either specified by .Param.refresh or the first page under that section output of chatgpt
{{/* layouts/_default/section.html */}} {{ if not .Content }} {{ $target := &amp;#34;&amp;#34; }} {{ if .</description>
    </item>
    <item>
      <title>Remote Branch</title>
      <link>/core/git/branch/remote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/branch/remote/</guid>
      <description>Checkout from a remote branch # git checkout -b &amp;lt;local-branch-name&amp;gt; &amp;lt;remote&amp;gt;/&amp;lt;remote-branch-name&amp;gt; git checkout -b issue-312 origin/issue-312 in common the remote repo is origin, but it can be any remote repo local-branch-name can be different from remote-branch-name, but you should have reason to do so. Upload to a remote branch # git push -u &amp;lt;remote&amp;gt; &amp;lt;remote-branch-name&amp;gt; git push -u origin issu-312 # later git push </description>
    </item>
    <item>
      <title>Restore</title>
      <link>/core/git/undo/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/undo/restore/</guid>
      <description>Before Commit If you modified a file or a path, which is not staged yet, and you want to restore it
$ git restore the_file If the file is staged, you should first unstage it
$ git restore --staged the_file After Commit If you want to restore a single file or a folder to an old version, you can use the git checkout command with the commit ID and the file or folder path.</description>
    </item>
    <item>
      <title>Revert</title>
      <link>/core/git/undo/revert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/undo/revert/</guid>
      <description>If you want to undo a specific commit, but keep the later commits, you can use the git revert command with the commit ID. This will create a new commit that reverses the changes made by the original commit. For example, if you want to undo commit 5798ee7c, you can run:
git revert 5798ee7c This will not affect the history of your branch, but it will add a new commit that undoes the previous one.</description>
    </item>
    <item>
      <title>Revision</title>
      <link>/core/git/tree-ish/revision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/tree-ish/revision/</guid>
      <description>Notations @ @ alone is a shorthand for HEAD
[&amp;lt;ref&amp;gt;]@{&amp;lt;date&amp;gt;} e.g. master@{yesterday}, HEAD@{5 minutes ago}
&amp;lt;ref&amp;gt;@{&amp;lt;n&amp;gt;} n-th prior value of that ref
@{n} empty ref means the current branch. For example,
if you are on branch blabla then @{1} means the same as blabla@{1}. @{-&amp;lt;n&amp;gt;}, e.g. @{-1} the n-th branch/commit checked out before the current one.
&amp;lt;rev&amp;gt;^[&amp;lt;n&amp;gt;], e.g. HEAD^, v1.5.1^0 A suffix ^ to a revision parameter means the first parent of that commit object.</description>
    </item>
    <item>
      <title>Revision Range</title>
      <link>/core/git/tree-ish/range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/tree-ish/range/</guid>
      <description>&amp;lt;ref&amp;gt; Include commits that are reachable from &amp;lt;rev&amp;gt; (i.e. &amp;lt;rev&amp;gt; and its ancestors).
^&amp;lt;rev&amp;gt; To exclude commits reachable from a commit, a prefix ^ notation is used.
&amp;lt;rev1&amp;gt;..&amp;lt;rev2&amp;gt; it is a shorthand of ^&amp;lt;rev1&amp;gt; &amp;lt;rev2&amp;gt; as it is so often, which means commits reachable
from &amp;lt;rev2&amp;gt; but exclude the ones reachable from &amp;lt;rev1&amp;gt; (i.e. &amp;lt;rev1&amp;gt; and its ancestors). When either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; is omitted, it defaults to HEAD. &amp;lt;rev1&amp;gt;.</description>
    </item>
    <item>
      <title>Rotate</title>
      <link>/web/svg/transform/rotate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/transform/rotate/</guid>
      <description>Rotate only and combine with translate. Notice that the sequence matters.
original rotate(30) rotate(30) translate(200,0) translate(100,220) rotate(30) </description>
    </item>
    <item>
      <title>Rule Of the Big Five</title>
      <link>/core/c&#43;&#43;/patterns/big-five/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/patterns/big-five/</guid>
      <description>C++ uses RAII to manage resources, as a general guide of safe design or implementation, if you implement any of these five members, you&amp;rsquo;d better (or you have to) implement all of them.
destructor copy constructor assignment operator move constructor move assignment operator The reason behind this rule is that the compiler offers default implementation if they are not explicitly defined. The default implementation is member-wise-copy (for copy/assignment) or nothing (for destructor), which is usually NOT what you want if you have reason to define one of them.</description>
    </item>
    <item>
      <title>Run 32-bit Apps on a 64-bit System</title>
      <link>/core/linux/32on64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/32on64/</guid>
      <description>Ubuntu/Debian sudo dpkg --add-architecture i386 sudo apt update sudo apt install lib6:i386 libncurses5:i386 libstdc++6:i386 #optional sudo apt install multiarch-support sudo apt install gcc-multilib Centos7 yum -y update yum -y install libgcc.i686 glibc-devel.i686 libstdc++=devel.i686 </description>
    </item>
    <item>
      <title>Run Pipeline Stage In A Docker Container</title>
      <link>/core/jenkins/pipeline/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/docker/</guid>
      <description></description>
    </item>
    <item>
      <title>Run Task in Sequence - catchError</title>
      <link>/core/jenkins/pipeline/sequence-catcherror/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/sequence-catcherror/</guid>
      <description>/* Call three tasks in sequence, catch error The 2nd task fails, but the whole build continues. The whole build still fails. */ pipeline { agent none stages { stage(&amp;#39;task 1&amp;#39;) { steps { catchError { build job: &amp;#39;dummy task&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;setup&amp;#39;), ] } } } stage(&amp;#39;task 2&amp;#39;) { steps { catchError { build job: &amp;#39;dummy task&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;do the real work&amp;#39;), string(name: &amp;#39;sleep&amp;#39;, value: &amp;#39;3&amp;#39;), booleanParam(name: &amp;#39;TASKFAILS&amp;#39;, value: true), ] } } } stage(&amp;#39;task 3&amp;#39;) { steps { catchError { build job: &amp;#39;dummy task&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;cleanup&amp;#39;), ] } } } } } The output</description>
    </item>
    <item>
      <title>Run Task in Sequence - Simple Case</title>
      <link>/core/jenkins/pipeline/sequence-simple/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/sequence-simple/</guid>
      <description>/* Call three tasks in sequence, without any control the 2nd task fails, which leads the whole built abort. */ pipeline { agent none stages { stage(&amp;#39;task 1&amp;#39;) { steps { build job: &amp;#39;dummy task&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;setup&amp;#39;), ] } } stage(&amp;#39;task 2&amp;#39;) { steps { build job: &amp;#39;dummy task&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;do the real work&amp;#39;), string(name: &amp;#39;sleep&amp;#39;, value: &amp;#39;3&amp;#39;), booleanParam(name: &amp;#39;TASKFAILS&amp;#39;, value: true), ] } } stage(&amp;#39;task 3&amp;#39;) { steps { build job: &amp;#39;dummy task&amp;#39;, parameters: [ string(name: &amp;#39;description&amp;#39;, value: &amp;#39;cleanup&amp;#39;), ] } } } } Output</description>
    </item>
    <item>
      <title>Run Web Client</title>
      <link>/iot/esp/s3zero-ble/run-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/run-client/</guid>
      <description> Connect to jjS3mini Name Filter (Prefix): Scan Connect jjS3mini Controls Temperature: N/A °C LED Controls: Red Green Blue Cycle (seconds): 0 Duty Cycle (%): 100 </description>
    </item>
    <item>
      <title>sample</title>
      <link>/web/misc/mermaid/sample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/misc/mermaid/sample/</guid>
      <description>Simple put diagram in div@mermaid &amp;lt;div class=&amp;#34;mermaid&amp;#34;&amp;gt; mermaid diagrams &amp;lt;/div&amp;gt; include mermaid.js at bottom &amp;lt;script async src=&amp;#34;https://unpkg.com/mermaid/dist/mermaid.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; See mermaid document
graph LR; A[startnow]; B[end]; C{filter?} D[[filter]] A--&gt;C C--no--&gt;B C--yes--&gt;D E[(Database)] </description>
    </item>
    <item>
      <title>Sample Pipeline</title>
      <link>/core/jenkins/pipeline/sample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/sample/</guid>
      <description>This is a very basic pipeline that accepts some parameters. We can use it as a dummy job in some more complicated pipelines.
pipeline { agent any parameters { string name: &amp;#39;description&amp;#39;, description: &amp;#39;customized build description&amp;#39; string name: &amp;#34;DRV_LABEL&amp;#34;, defaultValue: &amp;#34;head&amp;#34;, description: &amp;#39;product label&amp;#39; choice name: &amp;#39;target&amp;#39;, choices: [&amp;#39;Release&amp;#39;, &amp;#39;Debug&amp;#39;] choice(name: &amp;#39;bitness&amp;#39;, choices: [&amp;#39;64&amp;#39;, &amp;#39;32&amp;#39;]) booleanParam name: &amp;#39;memory_check&amp;#39;, description: &amp;#39;if memory-check is enabled, valid only in Debug&amp;#39; } stages { stage(&amp;#39;build&amp;#39;) { steps { script { echo &amp;#34;--------${env.</description>
    </item>
    <item>
      <title>scale</title>
      <link>/web/svg/scale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/scale/</guid>
      <description> viewport keep stroke unchanged </description>
    </item>
    <item>
      <title>Scale</title>
      <link>/web/svg/transform/scale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/transform/scale/</guid>
      <description> </description>
    </item>
    <item>
      <title>Scale2</title>
      <link>/web/svg/transform/scale2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/transform/scale2/</guid>
      <description> original translate(200, 80) translate(200, 80) scale(3,2) </description>
    </item>
    <item>
      <title>Screenshot on Mac</title>
      <link>/blogs/how-to/mac-tips/screenshot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/how-to/mac-tips/screenshot/</guid>
      <description> capture shortcuts action entire screen Shift+Command+3 select area Shift+Command+4 cursor to cross, drag selection area then release a window Shift+Command+4 press space, cursor to camera, click target window Note:
files are saved on the desktop to capture to clipboard, add &amp;ldquo;Control&amp;rdquo; with shortcuts in the same time, e.g. Shift+Command+4+Control. </description>
    </item>
    <item>
      <title>Setup Arduino IDE</title>
      <link>/iot/esp/s3zero-ble/setup-ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/setup-ide/</guid>
      <description>Update IDE An old version of Arduino IDE was instlled. Update it to the latest version before the project starts. ESP32 package is updated automatically.
Add Board Manager Following Waveshare guide, add board manager.</description>
    </item>
    <item>
      <title>Shopping</title>
      <link>/iot/intro/shopping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/intro/shopping/</guid>
      <description> </description>
    </item>
    <item>
      <title>Show Branches in Graph</title>
      <link>/core/git/log/graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/log/graph/</guid>
      <description>Option -graph adds a nice little ASCII graph showing your branch and merge history:
$ git log --oneline --graph * dc9233c (HEAD -&amp;gt; master) merge branch chinese into master |\ | * 6be89ec (chinese) rev.3 in branch chinese * | 63b80a9 rev.4 in master, 2 changes with one conflict with rev.3 in branch chinese |/ * 7c69103 rev.2 add a line in sample.txt * 3a17ac5 rev.1 init </description>
    </item>
    <item>
      <title>Show Commits That Touch A Path</title>
      <link>/core/git/log/path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/log/path/</guid>
      <description>Without path arguments, git log command shows information of each commits in sequence, with latest commit first.
git log &amp;lt;options&amp;gt; where options can be use to pick the range of commits, the content of information or format of dispaly.
If we add &amp;lt;path&amp;gt; argument, log shows commits that touch the &amp;lt;path&amp;gt;. The argument &amp;lt;path&amp;gt; can be a file or a directory.
git log &amp;lt;options&amp;gt; [--] &amp;lt;path&amp;gt; Common options -p show file(s) diff, or patch as well --name-status show changed file(s), make sense only if the path is a directory --full-diff by default, -p option lets log shows only items that &amp;lt;path&amp;gt; includes, with --full-diff, log shows all files in each commits that touch &amp;lt;path&amp;gt;.</description>
    </item>
    <item>
      <title>Sign-On</title>
      <link>/core/security/sign-on/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/security/sign-on/</guid>
      <description>Single Sign-on What is Single Sign-on? How It Works? 4:53
OAuth OAuth 2.0: An Overview 6:33
OAuth 2.0 &amp;amp; OpenID Connect (OIDC): Technical Overview by VMware End-User Computing (16:18)
OAuth 2.0 and OpenID Connect (in plain English) by OktaDev (1:02:16)
SAML 2.0 SAML 2.0: Technical Overview A Developer&amp;rsquo;s Guide to SAML by OktaDev (27:46)</description>
    </item>
    <item>
      <title>Snippet - collection</title>
      <link>/core/jenkins/groovy/snippet-collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/groovy/snippet-collection/</guid>
      <description>concate two arrays basic = [&amp;#39;string a&amp;#39;, &amp;#39;string b&amp;#39;] ext = [&amp;#39;ext1&amp;#39;, &amp;#39;ext2&amp;#39;] param=(ext + basic) nsize = param.size() random = new Random() def el = { param[Math.abs(random.nextInt()) % nsize]} println &amp;#34;${param}: ${nsize} elements&amp;#34; for (x in (1..3)) { v = el() println &amp;#34;${x} ${v}&amp;#34; } [ext1, ext2, string a, string b]: 4 elements 1 string b 2 string a 3 string b map choice = [ win: [&amp;#39;w10&amp;#39;, &amp;#39;w11&amp;#39;, &amp;#39;w2016&amp;#39;], dm: [&amp;#39;unixodbc&amp;#39;, &amp;#39;iodbc&amp;#39;], &amp;#39;dm-osx&amp;#39;: [&amp;#39;2.</description>
    </item>
    <item>
      <title>socket - lower-level networking interface</title>
      <link>/core/python/socket/socket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/python/socket/socket/</guid>
      <description>Server Sample ex-svr-socket.py
import socket import sys host, port = &amp;#39;localhost&amp;#39;, 9999 svr_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) svr_addr = (host, port) svr_sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) svr_sock.bind(svr_addr) svr_sock.listen(1) connection, remote_addr = svr_sock.accept() # remote_addr == connection.getpeername() print(&amp;#39;accept connection from: {}&amp;#39;.format(remote_addr)) # this sample server accepts only one connection svr_sock.close() # echo data try: while True: data = connection.recv(16) print(&amp;#39;received: {}&amp;#39;.format(data)) if data: print(&amp;#39;sending data back to the client&amp;#39;) connection.sendall(data) else: break finally: connection.close() Client ex-sender.</description>
    </item>
    <item>
      <title>Some GUI utilities</title>
      <link>/core/linux/utils/gui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/gui/</guid>
      <description> diff/merge gui: meld, kdiff3 </description>
    </item>
    <item>
      <title>Speech Recognition</title>
      <link>/iot/electronics/audio/speech-recognition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/electronics/audio/speech-recognition/</guid>
      <description></description>
    </item>
    <item>
      <title>SQL Injection</title>
      <link>/core/security/sql-injection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/security/sql-injection/</guid>
      <description>What is Penetration Testing?
Penetration testing, also called pen testing or ethical hacking, is the practice of testing a computer system, network, or web application to find security vulnerabilities that a would-be attacker could exploit.
If you compose SQL statement with user input without proper validation, there is a risk of &amp;ldquo;SQL Injection&amp;rdquo;.
An Example If the server processes user input with following code snippet:
String sql = &amp;#34;select * from subscriber where email=&amp;#39;&amp;#34; + EMAIL +&amp;#34;&amp;#39; and region=1&amp;#34;; ResultSet result = stmt.</description>
    </item>
    <item>
      <title>SQLBindCol and SQLBindParamter</title>
      <link>/core/db/odbc/bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/db/odbc/bind/</guid>
      <description>SQLBindCol SQLBindParameter Data Type Description StatementHandle StatementHandle SQLHSTMT statement handle ColumnNumber ParameterNumber SQLUSMALLINT 1-based column/parameter number InputOutputType SQLSMALLINT input/output/input-output TargetType ValueType SQLSMALLINT c-type-id ParameterType SQLSMALLINT sql-type-id ColumnSize SQLULEN DecimalDigits SQLSMALLINT aka scale TargetValuePtr ParameterValuePtr SQLPOINTER buffer to receive(col)/offer(param) value BufferLength BufferLength SQLLEN size of buffer StrLen_or_IndPtr StrLen_or_IndPtr SQLLEN * input/output actual data length StrLen_or_IndPtr length of data SQL_NTS SQL_NULL_DATA SQL_DATA_AT_EXEC SQL_LEN_DATA_AT_EXEC macro SQL_COLUMN_IGNORE Extra statement attributes Attribute Type Description SQL_ATTR_ROW_BIND_TYPE SQLULEN SQL_BIND_BY_COLUMN(0, default) for column-wise or row-size for row-wise SQL_ATTR_ROW_ARRAY_SIZE SQLULEN array size (of rows), default 1 SQL_ATTR_ROWS_FETCHED_PTR SQLULEN* in last fetch (and like), number of rows that are actually fetched SQL_ATTR_ROW_STATUS_PTR SQLUSMALLINT* an array of SQLUSMALLINT for each row of fetched SQL_ATTR_PARAMSET_SIZE SQLULEN array size (of parameters), default 1 SQL_ATTR_PARAMS_PROCESSED_PTR SQLULEN* number of rows of processed parameter Row status array (SQLBindCol) Value Description SQL_ROW_SUCCESS The row was successfully fetched and has not changed since it was last fetched from this result set.</description>
    </item>
    <item>
      <title>Squashing</title>
      <link>/core/git/branch/squashing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/branch/squashing/</guid>
      <description>To squash in Git means to combine multiple commits into one.
chatgpt Yes, you can merge a couple of revisions into one revision using Git. This is called squashing commits, and it can help you keep your commit history clean and organized. There are different ways to squash commits, but one of the most common ones is using the interactive rebase feature of Git. You can use the command git rebase -i to open a text editor where you can choose which commits you want to squash.</description>
    </item>
    <item>
      <title>Static Site Generator</title>
      <link>/web/hugo/ssg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/ssg/</guid>
      <description>Tutorials - Eleventy GatsbyJS Hexo Eleventy Staticman: Static sites with superpowers Hugo SSG Course - Mike Dane D3.js - Data-Driven Documents Velocity.js 网站的三维解决方案 | Blend4Web Gallery - PixiJS three.js – Javascript 3D library Soft8Soft – 3D Solutions for the Web Ace - The High Performance Code Editor for the Web Free vector illustrations – Ouch.pics</description>
    </item>
    <item>
      <title>Steps Basic</title>
      <link>/core/jenkins/pipeline/steps-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/steps-basic/</guid>
      <description>catchError accept value for buildResult and stageResult
SUCCESS UNSTABLE FAILURE NOT_BUILT ABORTED </description>
    </item>
    <item>
      <title>String</title>
      <link>/web/hugo/functions/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/functions/string/</guid>
      <description> Function Usage by Example Description replace replace $str &amp;quot;old&amp;quot; &amp;quot;new&amp;quot; replace all substr &amp;ldquo;old&amp;rdquo; in $str to &amp;ldquo;new&amp;rdquo; trim trim .Content &amp;quot;\t\n &amp;quot; remove all leading and pending whites from .Content Note
trim .Content doesn&amp;rsquo;t work, you must offset the set of white. </description>
    </item>
    <item>
      <title>String Operation</title>
      <link>/core/shell/bash/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/string/</guid>
      <description>val=wks/perf/perf_2019.sln v2=abcABC123ABCabc os=linux brace expansion example result description ${#var} ${#val} 22 length of string $var ${var:position} ${val:9} perf_2019.sln substring from position (0-based) to end ${var:pos:leng} ${val:9:4} perf substring from pos of length leng, negative length from right ${var#pattern} ${val#*/} perf/perf_2019.sln remove shortest match of pattern from front of $var ${var##pattern} ${val##*/} perf_2019.sln remove longest match of pattern from front of $var ${var%pattern} ${val%/*} wks/perf remove shortest match of pattern from back of $var ${var%%pattern} ${val%%/*} wks remove longest match of pattern from back of $var ${var/pat/replacement} ${val/_2019/_vs2019} wks/perf/perf_vs2019.</description>
    </item>
    <item>
      <title>Submodule Concept</title>
      <link>/core/git/submodule/concept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/submodule/concept/</guid>
      <description>Prepare Root Repo and Clone It See details at Push Excercise
Add submodule Delete and clone repo dave from adam
$ cd $REPO $ rm -rf dave $ git clone adam dave --bare Remove dave from susan
$ cd $EX/susan $ git remote remove origin Add susan as submodule of dave
$ cd $EX $ git clone $REPO/dave $ cd dave $ git submodule add $EX/susan susan $ git status On branch master Your branch is up-to-date with &amp;#39;origin/master&amp;#39;.</description>
    </item>
    <item>
      <title>Submodule Working Folder</title>
      <link>/core/git/submodule/working-folder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/submodule/working-folder/</guid>
      <description></description>
    </item>
    <item>
      <title>SVG Component</title>
      <link>/web/svg/component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/component/</guid>
      <description>Component 30 50 30 </description>
    </item>
    <item>
      <title>SVG Element by Vue</title>
      <link>/web/vue/svg-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/svg-elements/</guid>
      <description> {{message}} </description>
    </item>
    <item>
      <title>Syntax Highlight</title>
      <link>/web/hugo/tips/syntax-highlight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/tips/syntax-highlight/</guid>
      <description>Enhenced by hugo
```go {linenos=table,hl_lines=[8,&amp;#34;15-17&amp;#34;],linenostart=199]} // ... code ``` Note:
linenos (read as line-number-style) is required for linenostart. hl_lines always starts from 1, ignoring linenostart value. (bug of hugo?) highlighting in code fences is new in v0.60.0 </description>
    </item>
    <item>
      <title>Tag</title>
      <link>/core/git/tag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/tag/</guid>
      <description>Before tag
$ git log --oneline dc9233c (HEAD -&amp;gt; master) merge branch chinese into master 63b80a9 rev.4 in master, 2 changes with one conflict with rev.3 in branch chinese 6be89ec (chinese) rev.3 in branch chinese 7c69103 rev.2 add a line in sample.txt 3a17ac5 rev.1 init Make a tag at 7c691 $ git tag -a v.2 -m &amp;#39;version 2&amp;#39; 7c691 $ git tag v.2 $ git log --oneline --graph * dc9233c (HEAD -&amp;gt; master) merge branch chinese into master |\ | * 6be89ec (chinese) rev.</description>
    </item>
    <item>
      <title>tar</title>
      <link>/core/linux/utils/tar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/utils/tar/</guid>
      <description>Tar is often used to pack a group of files in a single package (and vice versa).
Change Directory -C, --directory=DIR Change to DIR before performing any operations. This option is order-sensitive, i.e. it affects all options that follow. Use Case
We want to extract files to a directory other than the current folder
tar xf path/package.tar -C other-folder Note: the order matters
tar -C other-folder xf package.tar find package.tar at other-folder and extract to that folder.</description>
    </item>
    <item>
      <title>Template Instantiation</title>
      <link>/core/c&#43;&#43;/lang/template-instatiation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/lang/template-instatiation/</guid>
      <description>Template template &amp;lt;typename T&amp;gt; class Trait { public: typedef T type; static const size_t size; static const char* const name; }; Instantiation Explicit instantiation - instantiate class only
template class Trait&amp;lt;char&amp;gt;; template class Trait&amp;lt;unsigned int&amp;gt;; Implicit instantiation - instantiate class AND object of the class
Trait&amp;lt;char&amp;gt; varChar; Trait&amp;lt;long&amp;gt; varLong; Define static members
template&amp;lt;&amp;gt; const size_t Trait&amp;lt;char&amp;gt;::size = sizeof(char); template&amp;lt;&amp;gt; const char* const Trait&amp;lt;char&amp;gt;::name = &amp;#34;char&amp;#34;; template&amp;lt;&amp;gt; const size_t Trait&amp;lt;unsigned int&amp;gt;::size = sizeof(unsigned int); template&amp;lt;&amp;gt; const char* const Trait&amp;lt;unsigned int&amp;gt;::name = &amp;#34;unsigned int&amp;#34;; </description>
    </item>
    <item>
      <title>Template Variadic</title>
      <link>/core/c&#43;&#43;/lang/template-variadic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/lang/template-variadic/</guid>
      <description>Variable Arguments #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdlib&amp;gt; using namespace std; //---------------------------------------------------------------------- // function sum accept any number of args, add (operator+) them together //----------------------------------------------------------------------- // recurisve stopper template &amp;lt;typename T&amp;gt; T sum(T v) { return v; } // recursive calls template &amp;lt;typename T, typename... Args&amp;gt; T sum(T first, Args...args) { return first + sum(args...); } //---------------------------------------------------------------------- // get environment variable, with fallback names //----------------------------------------------------------------------- // recursive stopper const char* env(const char* name) { return getenv(name); } // recursive calls template &amp;lt;typename.</description>
    </item>
    <item>
      <title>Terms</title>
      <link>/blogs/health/fight-cancer/terms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/health/fight-cancer/terms/</guid>
      <description>colorectal liver metastases (CRLM) metastasis 转移 cancer metastasis 癌症转移 ; 癌转移</description>
    </item>
    <item>
      <title>test chart</title>
      <link>/web/svg/chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/chart/</guid>
      <description> By markdown </description>
    </item>
    <item>
      <title>Text</title>
      <link>/web/svg/elements/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/elements/text/</guid>
      <description> text-anchor (x=100) head middle end dominant-baseline auto middle hanging A text along the path </description>
    </item>
    <item>
      <title>Text Tools</title>
      <link>/blogs/online-tools/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/online-tools/text/</guid>
      <description> </description>
    </item>
    <item>
      <title>The Most Common Arduino Controllers</title>
      <link>/iot/arduino/most-common/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/arduino/most-common/</guid>
      <description>Basic Models Controller Arduino Uno Arduino Nano Arduino Duo Arduino Mega 2560 processor Atmega328 Atmega328 ATSAM3X8E Cortex-M3 ATmega2560 bit 8 8 32? 8 clock 16M 16M 84M 16M program mem 32K 32K 512K 256K EEPROM 1K 1K 4K RAM 2K 2K 96K 8K IO digit 14 14 54 54 a-input 6 6 12 16 a-output 2 PWM 6 4 12 15 5v * * * 3.3v * * * size 69x54 mm USB * Power Sample price $13.</description>
    </item>
    <item>
      <title>The most common English idioms</title>
      <link>/blogs/english/proverbs-of-day/idioms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/proverbs-of-day/idioms/</guid>
      <description>source - ef.com
The most common English idioms Idiom Meaning Usage A blessing in disguise a good thing that seemed bad at first as part of a sentence A dime a dozen Something common as part of a sentence Beat around the bush Avoid saying what you mean, usually because it is uncomfortable as part of a sentence Better late than never Better to arrive late than not to come at all by itself Bite the bullet To get something over with because it is inevitable as part of a sentence Break a leg Good luck by itself Call it a day Stop working on something as part of a sentence Cut somebody some slack Don&amp;rsquo;t be so critical as part of a sentence Cutting corners Doing something poorly in order to save time or money as part of a sentence Easy does it Slow down by itself Get out of hand Get out of control as part of a sentence Get something out of your system Do the thing you&amp;rsquo;ve been wanting to do so you can move on as part of a sentence Get your act together Work better or leave by itself Give someone the benefit of the doubt Trust what someone says as part of a sentence Go back to the drawing board Start over as part of a sentence Hang in there Don&amp;rsquo;t give up by itself Hit the sack Go to sleep as part of a sentence It&amp;rsquo;s not rocket science It&amp;rsquo;s not complicated by itself Let someone off the hook To not hold someone responsible for something as part of a sentence Make a long story short Tell something briefly as part of a sentence Miss the boat It&amp;rsquo;s too late as part of a sentence No pain, no gain You have to work for what you want by itself On the ball Doing a good job as part of a sentence Pull someone&amp;rsquo;s leg To joke with someone as part of a sentence Pull yourself together Calm down by itself So far so good Things are going well so far by itself Speak of the devil The person we were just talking about showed up!</description>
    </item>
    <item>
      <title>Tips</title>
      <link>/core/java/misc/tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/misc/tips/</guid>
      <description>Get JVM Version at Runtime java.version is a system property that exists in every JVM. There are two possible formats for it:
Java 8 or lower: 1.6.0_23, 1.7.0, 1.7.0_80, 1.8.0_211 Java 9 or higher: 9.0.1, 11.0.4, 12, 12.0.1 private static int getVersion() { String version = System.getProperty(&amp;#34;java.version&amp;#34;); if(version.startsWith(&amp;#34;1.&amp;#34;)) { version = version.substring(2, 3); } else { int dot = version.indexOf(&amp;#34;.&amp;#34;); if(dot != -1) { version = version.substring(0, dot); } } return Integer.</description>
    </item>
    <item>
      <title>Tips</title>
      <link>/core/jenkins/pipeline/tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/tips/</guid>
      <description> in environment section of pipeline, values have to be either quoted strings or function calls, variables are NOT accepted label = &amp;#34;v1.0&amp;#34; pipeline { environment { PRODUCT = &amp;#34;touch&amp;#34; LABEL = &amp;#34;${label}&amp;#34; TYPE = get_type() // failure // LABEL = label } } in environment section of pipeline, each item uses a line, without comma , pipeline { environment { PRODUCT = &amp;#34;touch&amp;#34; LABEL = &amp;#34;${label}&amp;#34; // not this // LABEL = &amp;#34;${label}&amp;#34;, TYPE = get_type() } } global variables shouldn&amp;rsquo;t be defined with def def a = &amp;#39;hello&amp;#39; b = &amp;#39;world&amp;#39; def foo() { echo &amp;#34;${a}&amp;#34; // a is not available echo &amp;#34;${b}&amp;#34; // OK } </description>
    </item>
    <item>
      <title>Tools</title>
      <link>/blogs/movies/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/movies/tools/</guid>
      <description> </description>
    </item>
    <item>
      <title>Tools - Drawing</title>
      <link>/core/linux/tools-drawing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/tools-drawing/</guid>
      <description> gimp inkscape krita windows paint like: pinta, drawing LazPaint: with its own download site, to be tested </description>
    </item>
    <item>
      <title>Trace The Mouse</title>
      <link>/web/svg/greensock/trace-mouse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/greensock/trace-mouse/</guid>
      <description> Move the mouse around and click, the rect object will follow your track.
{{message}} ({{x}}, {{y}}) {{msg}} </description>
    </item>
    <item>
      <title>trait</title>
      <link>/core/c&#43;&#43;/patterns/trait/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/patterns/trait/</guid>
      <description>why trait sample implementation variable or function </description>
    </item>
    <item>
      <title>Transform Sample 2</title>
      <link>/web/svg/transform/transform-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/transform/transform-2/</guid>
      <description> 30 </description>
    </item>
    <item>
      <title>Translate</title>
      <link>/web/svg/transform/translate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/transform/translate/</guid>
      <description> original translate(100, 50) translate(200, 80) t(200, 80) s(3,2) </description>
    </item>
    <item>
      <title>tutorial</title>
      <link>/web/js/tutorials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/js/tutorials/</guid>
      <description>The Best Laravel and PHP Screencasts Building a Website from Scratch with ExpressJS and Bootstrap | Codementor Clock Digital: Website Design and Development Agency Tutorialzine | Web Development Tutorials &amp;amp; Resources How to set-up a powerful API with Nodejs, GraphQL, MongoDB, Hapi, and Swagger Web | Google Developers What is a working set and how do I use it? - Web Tutorials - avajava.com CloseBrace | Creating a Simple RESTful Web App with Node.</description>
    </item>
    <item>
      <title>Tutorials</title>
      <link>/iot/arduino/tutorials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/arduino/tutorials/</guid>
      <description> </description>
    </item>
    <item>
      <title>Ultra-light Vue App</title>
      <link>/web/vue/vue-ultralight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-ultralight/</guid>
      <description>{{ message }} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; /* ... */ &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;!-- Vue app container, build view in the container --&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;strong&amp;gt;{{ message }}&amp;lt;/strong&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!-- vue app code: set model, actions here --&amp;gt; &amp;lt;script&amp;gt; const { createApp, ref } = Vue var app = createApp({ data() { return { message: &amp;#39;Hello Vue!</description>
    </item>
    <item>
      <title>Unicode Symbols</title>
      <link>/web/misc/unicode-symbols/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/misc/unicode-symbols/</guid>
      <description>Black Circled Number ⓿ ❶ ❷ ❸ ❹ ❺ ❻ ❼ ❽ ❾ ❿ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴
Black Circled Number In sans-serif 🄌 ➊ ➋ ➌ ➍ ➎ ➏ ➐ ➑ ➒ ➓
White Circled Number ⓪ ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ㉑ ㉒ ㉓ ㉔ ㉕ ㉖ ㉗ ㉘ ㉙ ㉚ ㉛ ㉜ ㉝ ㉞ ㉟ ㊱ ㊲ ㊳ ㊴ ㊵ ㊶ ㊷ ㊸ ㊹ ㊺ ㊻ ㊼ ㊽ ㊾ ㊿</description>
    </item>
    <item>
      <title>Univeral Binaries on MacOS</title>
      <link>/core/c&#43;&#43;/make/mac-universal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/make/mac-universal/</guid>
      <description>A univeral binary object is a composite binary that contains multiple binaries for different architectures, which could be
32-bit and 64-bit for hardwares that use Intel CPUs before Apple M1 was released on Nov 2020. Intel (x86_64) and Apple Arm (arm64) for hardwares that use M1 and later. always 64-bits &amp;ldquo;Standard&amp;rdquo; procedure to build univeral binaries build for each architecture separately use lipo to create a single univeral binary from multiple single-architecture binaries Reference</description>
    </item>
    <item>
      <title>Update A Submodule</title>
      <link>/core/git/submodule/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/git/submodule/update/</guid>
      <description></description>
    </item>
    <item>
      <title>URLs</title>
      <link>/core/docker/podman/urls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/podman/urls/</guid>
      <description>
podman - official site </description>
    </item>
    <item>
      <title>URLs</title>
      <link>/web/svg/animejs/urls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/svg/animejs/urls/</guid>
      <description> website github </description>
    </item>
    <item>
      <title>Using gprof</title>
      <link>/core/c&#43;&#43;/performance/gprof/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/performance/gprof/</guid>
      <description>TBD</description>
    </item>
    <item>
      <title>Using perf</title>
      <link>/core/c&#43;&#43;/performance/perf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/performance/perf/</guid>
      <description>Note: WSL can&amp;rsquo;t run (standard) perf, instead install linux-tools-generic.
record sampling with call-graph export PERF=/usr/lib/linux-tools/5.4.0-84-generic/perf $PERF record -g app app-args the perf sampling data is saved in perf.data after the app terminates normally. decode perf.data $PERF report -U &amp;gt; result.txt -U ignores unknown (usually system calls) entries. </description>
    </item>
    <item>
      <title>Using valgrind</title>
      <link>/core/c&#43;&#43;/performance/valgrind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/c&#43;&#43;/performance/valgrind/</guid>
      <description>TBD</description>
    </item>
    <item>
      <title>utf8 encoding</title>
      <link>/core/misc/utf8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/misc/utf8/</guid>
      <description>Bytes Unicode Range Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 char valid bits char# 1 U+0000 ~ U+007F 0xxxxxxx 7 128 0 ~ 7F 2 U+0080 ~ U+07FF 110xxxxx 10xxxxxx 5+6=11 2^11 = 2,048 C0 ~ DF 80 ~ BF 3 U+0800 ~ U+FFFF 1110xxxx 10xxxxxx 10xxxxxx 4+6*2=16 2^16 = 65,536 E0 ~ EF 80 ~ BF 4 U+10000 ~ U+1FFFFF 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx 3+6*3=21 2^21 = 2,097,152 F0 ~ F7 80 ~ BF 5 U+200000 ~ U+3FFFFFF 111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 2+6*4=26 2^26 = 67,108,864 F8 ~ FB 80 ~ BF 6 U+4000000 ~ U+7FFFFFFF 1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 1+6*5=31 2^31 = 2,147,483,648 FC ~ FD 80 ~ BF Note:</description>
    </item>
    <item>
      <title>v7</title>
      <link>/core/java/features-by-version/v7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/features-by-version/v7/</guid>
      <description>Strings in switch statement. Binary integer literals. Allowing underscores in numeric literals. Catching multiple exception types and rethrowing exceptions with improved type checking. Automatic resource management in try-statement. Improved type inference for generic instance creation, aka the diamond operator &amp;lt;&amp;gt;. Simplified varargs method declaration. Strings in switch statement String v = &amp;#34;Hello&amp;#34;; switch (v) { case &amp;#34;Hello&amp;#34;: action_a(); break; case &amp;#34;workd&amp;#34;: action_b(); break; } Binary Integer Literals with Prefix &amp;ldquo;0b&amp;rdquo; and Underscore in Numeric Literals int number1 = 0b01010000101000101101000010100010; int number2 = 0b0101_0000_1010_0010_1101_0000_1010_0010; int number3 = 2_123_456; // break the digits with underscore Catching Multiple Exception Types and Rethrowing Exceptions with Improved Type Checking try { .</description>
    </item>
    <item>
      <title>v8</title>
      <link>/core/java/features-by-version/v8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/features-by-version/v8/</guid>
      <description>Reference
Quick Overview of Java 8 Features Baeldung Java Versions and Features Java8 Features with Examples Overview forEach() method in Iterable interface default and static methods in Interfaces Functional Interfaces and Lambda Expressions Java Stream API for Bulk Data Operations on Collections Java Time API Collection API improvements Concurrency API improvements Java IO improvements forEach List&amp;lt;Integer&amp;gt; myList = new ArrayList&amp;lt;Integer&amp;gt;(); //... myList.forEach(new Consumer&amp;lt;Integer&amp;gt;() { public void accept(Integer t) { System.out.println(&amp;#34;forEach anonymous class Value::&amp;#34;+t); } }); Interface Default and Static Methods Before Java 8, interfaces could have only public abstract methods.</description>
    </item>
    <item>
      <title>v9</title>
      <link>/core/java/features-by-version/v9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/features-by-version/v9/</guid>
      <description>Reference
Java 9 Features with Examples Java 9 REPL Factory Methods for Immutable Collections List immutableEmptyList = List.of(); List immutableList = List.of(&amp;#34;one&amp;#34;,&amp;#34;two&amp;#34;,&amp;#34;three&amp;#34;); Map immutableMap = Map.of(1, &amp;#34;one&amp;#34;, 2, &amp;#34;two&amp;#34;, 3, &amp;#34;three&amp;#34;) immutableMap ==&amp;gt; {2=two, 3=three, 1=one} Private methods in Interfaces public interface Card{ private Long createCardID(){ // Method implementation goes here. } private static void displayCardDetails(){ // Method implementation goes here. } } Java 9 Module System Process API Improvements ProcessHandle currentProcess = ProcessHandle.</description>
    </item>
    <item>
      <title>Variable Transform</title>
      <link>/core/shell/bash/transform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bash/transform/</guid>
      <description>os=linux osx=darwin osb= brace expansion example result c equivalent description ${var:-word} ${os:-aix} linux var ? var : word $var or word ${osb:-aix} aix (osb is null) ${osc}:-aix} aix (osc is unset) ${var:=word} ${os:=aix} linux var = var ? var : word $var or word (with assignment) ${osb:=aix} aix in addition osb=aix ${var:+word} ${os:+aix} aix var ? word : null word if $var else null ${osb:+aix} (osb is null) ${var:?word} ${osb:?aix} var ?</description>
    </item>
    <item>
      <title>Variables</title>
      <link>/web/hugo/vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/hugo/vars/</guid>
      <description>Page Variables variable Description .Ancestors a stack of ancestors, starts from root / .CurrentSection page: the section it belongs to, section: itself .FirstSection the section that directly below root, i.e. the 2nd item in ancestors stack .Parent parent the current page/section belongs to .Pages one level below this, regular pages and sections .RegularPages regular pages directly below to this section .Sections sections directly below to this section .Permalink link of this page/section recipes check section is toplevel</description>
    </item>
    <item>
      <title>Variables and String</title>
      <link>/core/shell/bat/var/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/shell/bat/var/</guid>
      <description>Define and Reference set mystr=hello, world echo %mystr% Don&amp;rsquo;t put spaces between variable and equal sign = unlike bash, anything after = is the value of the variable reference the variable by putting % at both ends of the variable (bash syntax ${var}) special cases command-line arguments: %* %0 %1 %2 ... loop iterator variable: %%x Examples str.bat
@echo off set mystr=hello, world echo %mystr% :: string left set newstr=left 5 (%mystr:~0,5%) echo %newstr% :: string right set newstr=right 7 (%mystr:~-7%) echo %newstr% :: string replace set newstr=replace %mystr:l=L% echo %newstr% The result</description>
    </item>
    <item>
      <title>Versions and Features</title>
      <link>/core/java/versions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/java/versions/</guid>
      <description>Reference:
Marcobehler.com: Java Versions and Features </description>
    </item>
    <item>
      <title>Versions of Distros</title>
      <link>/core/linux/glibc-gcc-versions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/linux/glibc-gcc-versions/</guid>
      <description>glibc and default gcc version code name release maintenance kernel glibc gcc comment centos 5 2007-04-12 2017-03 2.6.18-398 2.5 4.1.2 5.11 centos 6 2011-07-10 2020-11 2.6.32-754 2.12 4.4.7 6.10 centos 7 2014-07-07 2024-06 3.10.0-1160 2.17 4.8.5 7.9-2009 centos 8 2019-09-24 2029-05 4.18.0-193 2.28 8.3.1 8.2-2004 ubuntu 14.04 Trusty Tahr 2014-04-17 2019-04 3.13 ubuntu 16.04 Xenial Xerus 2016-04-21 2021-04 4.4 ubuntu 18.04 Bionic Beaver 2018-04-26 2023-04 4.15 ubuntu 20.04 Focal Fossa 2020-04-23 2025-04 5.</description>
    </item>
    <item>
      <title>View</title>
      <link>/core/jenkins/python-binding/view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/python-binding/view/</guid>
      <description>API Description get_view_name(name) Return the name of a view using the API. assert_view_exists(name, exception_message Raise an exception if a view does not exist view_exists(name) Check whether a view exists get_views() Get list of views running. delete_view(name) Delete Jenkins view permanently. create_view(name, config_xml) Create a new Jenkins view reconfig_view(name, config_xml) Change configuration of existing Jenkins view. get_view_config(name) Get configuration of existing Jenkins view. working with views server.create_view(&amp;#39;EMPTY&amp;#39;, jenkins.EMPTY_VIEW_CONFIG_XML) view_config = server.</description>
    </item>
    <item>
      <title>VIm Tips</title>
      <link>/blogs/how-to/vim-tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/how-to/vim-tips/</guid>
      <description>vim shortcuts</description>
    </item>
    <item>
      <title>VSC Shortcuts</title>
      <link>/blogs/how-to/vsc-tips/shortcuts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/how-to/vsc-tips/shortcuts/</guid>
      <description>todo</description>
    </item>
    <item>
      <title>Vue Component</title>
      <link>/web/vue/vue-component-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-component-2/</guid>
      <description> Load Sort s1 Sort s2 </description>
    </item>
    <item>
      <title>WaveShare ESP32 S3 2inch Capacitive Touch Display Development Board</title>
      <link>/iot/esp/waveshare-s3-touch-lcd-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/waveshare-s3-touch-lcd-2/</guid>
      <description> </description>
    </item>
    <item>
      <title>WaveShare ESP32 S3 OLED 2.06inch with battery</title>
      <link>/iot/esp/waveshare-s3-2.06inc-battery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/waveshare-s3-2.06inc-battery/</guid>
      <description>Waveshare</description>
    </item>
    <item>
      <title>WaveShare S3 Mini</title>
      <link>/iot/esp/waveshare-s3-mini/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/waveshare-s3-mini/</guid>
      <description> Pins Definition What&amp;rsquo;s on Board </description>
    </item>
    <item>
      <title>Web Client</title>
      <link>/iot/esp/s3zero-ble/web-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/iot/esp/s3zero-ble/web-client/</guid>
      <description>my request - web client Create a web client, it scans BLE servers and services, support filter with prefix by name. Once seleted, a button to connect the BLE server.
UI contains
connection panel name filter, text button scan list of scan result using the filter button connect using list selection BLE client panel temperature, read-only update every 5 seconds 3 switches for R,G,B slider for cycle (0-5) second slider for duty (0-100) % update BLE server when each writable field changed use vanilla java script as possible, except must-have 3rd libraries/modules use separate css files</description>
    </item>
    <item>
      <title>when - execute stage with conditions</title>
      <link>/core/jenkins/pipeline/when/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/jenkins/pipeline/when/</guid>
      <description>A Simple Example pipeline { agent any parameters { booleanParam name: &amp;#39;Windows&amp;#39;, description: &amp;#39;run on Windows&amp;#39; choice name: &amp;#39;Target&amp;#39;, choices: [&amp;#39;release&amp;#39;, &amp;#39;debug&amp;#39;], description: &amp;#39;build target&amp;#39; } stages { stage(&amp;#39;windows-only&amp;#39;) { when { expression { params.Windows == true } } steps { echo &amp;#34;the task runs on Windows ------------------&amp;#34; } } stage(&amp;#39;debug-only&amp;#39;) { when { expression { params.Target == &amp;#39;debug&amp;#39; } } steps { echo &amp;#34;the task runs in debug mode&amp;#34; } } stage(&amp;#39;windows-debug-only&amp;#39;) { when { expression { params.</description>
    </item>
    <item>
      <title>Wings - 100 Common Proverbs with Meaning and Examples</title>
      <link>/blogs/english/proverbs-of-day/100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/english/proverbs-of-day/100/</guid>
      <description>source: Wings
All that glitters is not gold Meaning: Something might not be as valuable as it seems to be Example: Radhika bought an attractive bracelet recently, but it broke in less than a week. All that glitters is not gold.
A picture is worth a thousand words Meaning: Explaining something is easier through a picture than by words Example: It’s easier to learn from pictures than only text, since a picture is worth a thousand words.</description>
    </item>
    <item>
      <title>Wireshark</title>
      <link>/core/network/wireshark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/network/wireshark/</guid>
      <description> How TCP really works // Three-way handshake // TCP/IP Deep Dive HTTPS Decryption with Wireshark // Website TLS Decryption Wireshark Tutorial for BEGINNERS // Where to start with Wireshark </description>
    </item>
    <item>
      <title>WSL 2 tips</title>
      <link>/core/docker/wsl/tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/core/docker/wsl/tips/</guid>
      <description>WSL 2 Features Install WSL 2 Accessing Files between WSL and Windows Host From WSL - Windows hosts volumns are mounted at /mnt, e.g. /mnt/c for driver C:. From Windows host - WSL distro file system is mount as \\wsl$\{distro}, where {distro} is the WSL distro name, e.g. unbuntu or debian WSL GUI WSL2 supports its own X server since Win10.19044 and Win11.
Simply set DISPLAY=:0 and all X applications can use the native X server.</description>
    </item>
    <item>
      <title>二条城</title>
      <link>/blogs/travels/kyoto/nijo-castle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/travels/kyoto/nijo-castle/</guid>
      <description>ref nearby 北野天满宫 哲学之道 - 这条步道从东山北部的永观堂北侧约 100 米处开始，一直往北延伸至银阁寺。 银阁寺</description>
    </item>
    <item>
      <title>低端影视</title>
      <link>/blogs/movies/ddys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/movies/ddys/</guid>
      <description></description>
    </item>
    <item>
      <title>博客</title>
      <link>/blogs/camino/blogs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/camino/blogs/</guid>
      <description></description>
    </item>
    <item>
      <title>更多凉拌菜</title>
      <link>/blogs/recipe/code-dishes/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/recipe/code-dishes/video/</guid>
      <description></description>
    </item>
    <item>
      <title>朝圣之路 - 网上资料</title>
      <link>/blogs/camino/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/camino/resources/</guid>
      <description>Online Resources Stingy Nomads - Camino de Santiago resources How to get to St.Jean Pied de Port The French Camino de Santiago Camino Frances walking stages 2024, PDF and GPX files Albergues on the Camino de Santiago Unforgettable Towns on the Camino de Santiago – The French Way Our best Camino de Santiago tips Camino de Santiago light packing list 博客 回应千年古道的召</description>
    </item>
    <item>
      <title>概述</title>
      <link>/blogs/travels/kyoto/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/travels/kyoto/guide/</guid>
      <description>市中心 京都御所 Kyoto Gyoen - 日本皇室奢华的故居 二条城 Nijo Castle - 权力的象征 下鸭神社 Shimogamo Shrine - 日本最古老也最重要的神社之一 祇园和东山感受传统日本的心跳 东山是一大</description>
    </item>
    <item>
      <title>美剧窝</title>
      <link>/blogs/movies/mjwo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/movies/mjwo/</guid>
      <description></description>
    </item>
    <item>
      <title>言之有理</title>
      <link>/blogs/tennis/racketbrothers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/blogs/tennis/racketbrothers/</guid>
      <description></description>
    </item>
  </channel>
</rss>
