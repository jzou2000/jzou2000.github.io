<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on My Hugo</title>
    <link>/web/vue/</link>
    <description>Recent content in Vue on My Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/web/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue App Quick Start</title>
      <link>/web/vue/vue-quick-start/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-quick-start/</guid>
      <description>First Vue Project created by vue-cli init, with webpack
$ vue init webpack my-p0 A newer version of vue-cli is available. latest: 2.9.6 installed: 2.8.2 ? Project name my-p0 ? Project description My first vue project created by vue-init ? Author Jason Zou &amp;lt;jzou2000@gmail.com&amp;gt; ? Vue build standalone ? Install vue-router? Yes ? Use ESLint to lint your code? Yes ? Pick an ESLint preset Standard ? Set up unit tests Yes ?</description>
    </item>
    <item>
      <title>Minimal Setup A Vue App Project</title>
      <link>/web/vue/vue-app-min/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-app-min/</guid>
      <description>Pre-request Have vue-cli installed
npm install @vue/cli -g Create Project vue create prj-name The default preset (babel, eslint) installes 178MB. with route/vuex 183MB
Start run/development
npm run serve common modules vue add router vue add vuex Configure You don&amp;rsquo;t need to config and the boilplate just works. However if you do need extra configuration, create vue.config.js at project root folder.
module.exports = { // configures go here devServer: { proxy: &amp;#39;http://localhost:8088&amp;#39;, // alternatively, if you have multiple APIs // or fine-tune url pattern // proxy: { // &amp;#39;api-url&amp;#39;: { // target: &amp;#39;http://localhost:8088&amp;#39;, // ws: true, // also websockets // changeOrigin: true, // }, // &amp;#39;other-api-url: {.</description>
    </item>
    <item>
      <title>Accessing DOM from a Vue App</title>
      <link>/web/vue/vue-access-dom/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-access-dom/</guid>
      <description>Although it is more preferable to use virtual-DOM for exchanging data between UI components and model in a Vue-based application, accessing DOM elements directly is still required in some special cases:
using 3rd-party libraries (e.g. green-sock for animation) You can still use standard DOM access method
var el = document.getElementById(&amp;#39;el-name&amp;#39;) Vue offers a convenient way to do this work
&amp;lt;!-- any tags as well --&amp;gt; &amp;lt;div ref=&amp;#39;myref&amp;#39; other-attributes &amp;gt; &amp;lt;/div&amp;gt; new Vue({ //.</description>
    </item>
    <item>
      <title>Using Components</title>
      <link>/web/vue/vue-component/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-component/</guid>
      <description> This is a sample Vue app with self defined components.
{{cval(color)}} {{cval(rider)}} TBD </description>
    </item>
    <item>
      <title>Embeded Vue in Hugo Site</title>
      <link>/web/vue/vue-in-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-in-hugo/</guid>
      <description>This is a sample Vue app.
{{ message }} {{ i }} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 &amp;lt;div id=&amp;#39;sample-app&amp;#39; style=&amp;#39;background: lightgray; padding: 4px 16px; margin: 16px;&amp;#39;&amp;gt; &amp;lt;p&amp;gt;This is a sample Vue app.&amp;lt;/p&amp;gt; {{message}} &amp;lt;ul&amp;gt; &amp;lt;li v-for=&amp;#34;i in fruit&amp;#34;&amp;gt; {{ i }} &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var app = new Vue({ el: &amp;#39;#sample-app&amp;#39;, data: { message: &amp;#39;Hello Vue!</description>
    </item>
    <item>
      <title>Diff using only JavaScript</title>
      <link>/web/vue/vue-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-diff/</guid>
      <description>In this example, we use jsdiff to compare two strings (that simulate two files), generate the patch result as a string (similar to the output of diff), and display the patch in html using diff2html.
Go!mDiff Raw OutputdiffLines{{diff_lines}}createTwoFilesPatch{{patch}}</description>
    </item>
    <item>
      <title>Drag-and-Drop with Vue</title>
      <link>/web/vue/vue-dnd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-dnd/</guid>
      <description> </description>
    </item>
    <item>
      <title>Async Process in Vue</title>
      <link>/web/vue/vue-async/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-async/</guid>
      <description> Start Sort </description>
    </item>
    <item>
      <title>Bookmarks</title>
      <link>/web/vue/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/bookmarks/</guid>
      <description>Learn Vue 2: Step By Step Introduction · GitBook Build an Online Shop with Vue: Introduction ― Scotch Vue.js 2.3 Complete API Cheat Sheet Introduction — Vue.js A Vue.js App Using Axios With Vuex 安装 — Vue.js UI Flux | Application Architecture for Building User Interfaces iView Vuetify.js Vue Material Element.io Quasar (mobile) Summernote - wysiwyg editor on bootstrap Javascript Online Rich Text Editors | Comparison tables - SocialCompare</description>
    </item>
    <item>
      <title>Build a tabs UI component using CSS</title>
      <link>/web/vue/vue-ui-tabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-ui-tabs/</guid>
      <description>Common Extend Option Main Tab This is the main/common tab. Options Language Chinese English French translate OK Extended content A quick brown fox jumps over a lazy dog. mytab={{mytab}}</description>
    </item>
    <item>
      <title>Group of SVG Components</title>
      <link>/web/vue/vue-svg-component-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-svg-component-2/</guid>
      <description> Start Sort {{lpad(v)}} </description>
    </item>
    <item>
      <title>Introduction</title>
      <link>/web/vue/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/intro/</guid>
      <description> vue vue-cli vite vuex pinia </description>
    </item>
    <item>
      <title>Online Resources</title>
      <link>/web/vue/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/resources/</guid>
      <description> Debugging · electron-vue </description>
    </item>
    <item>
      <title>Practical Boilerplate</title>
      <link>/web/vue/boilerplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/boilerplate/</guid>
      <description>This is a practical boilerplate:
fundamental vue project structure connect front-end and back-end </description>
    </item>
    <item>
      <title>SVG Element by Vue</title>
      <link>/web/vue/svg-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/svg-elements/</guid>
      <description> {{message}} </description>
    </item>
    <item>
      <title>Ultra-light Vue App</title>
      <link>/web/vue/vue-ultralight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-ultralight/</guid>
      <description>{{ message }} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; /* ... */ &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;!-- Vue app container, build view in the container --&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;strong&amp;gt;{{ message }}&amp;lt;/strong&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!-- vue app code: set model, actions here --&amp;gt; &amp;lt;script&amp;gt; const { createApp, ref } = Vue var app = createApp({ data() { return { message: &amp;#39;Hello Vue!</description>
    </item>
    <item>
      <title>Vue Component</title>
      <link>/web/vue/vue-component-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/web/vue/vue-component-2/</guid>
      <description> Load Sort s1 Sort s2 </description>
    </item>
  </channel>
</rss>
